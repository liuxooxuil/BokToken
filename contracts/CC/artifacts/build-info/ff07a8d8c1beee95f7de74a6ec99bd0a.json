{
	"id": "ff07a8d8c1beee95f7de74a6ec99bd0a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CC/CCToken.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT\r\n/**\r\n            -- 整改策略 --\r\n    1.合约mint时间时需要记录时间戳来进行换算 （代币发布后 记录当前时间戳 如果五年之后有人进行回购则调用回购方法 回购比例按1.05依次增加 将代币存储到address之中）\r\n    2.转账后，contract里的token总量减少，用户余额（已解决）\r\n    3.增加铸币的百分比 （定义铸币得分发节点使用百分比得方式 来进行代币得发布）(已解决)\r\n    4.定义回购规则 和回购地址 （在定义之中先使用token记录法验证是否满足条件 如若不满足 则onwable 满足则trmsfor）\r\n    5.定义10释放规程（倘若三年后释放存储） 先一同铸造 之后释放 百分比收购收回 从pool池中进行定义\r\n    6.定义全部释放规则（重写）\r\n    7.删除转账限制（重写）\r\n    8.分流计算token数量进行分发 而不是一笔均衡分发（已解决）\r\n   \r\n   [\r\n    [\"0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\", 800000000000000000000],\r\n    [\"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2\", 200000000000000000000]\r\n]\r\n0xE592427A0AECE92DE3ED81235A9C5B9B2E8F7D2C\r\n\r\n\r\n// constructor(address[] memory _teamAddresses, address _uniswapPool)\r\n    //     ERC20(\"csyd\", \"CSYD\")\r\n    //     Ownable(msg.sender)\r\n    // {\r\n    //     require(_teamAddresses.length > 0, \"At least one team address required\");\r\n    //     teamAddresses = _teamAddresses;\r\n    //     uniswapPool = _uniswapPool;\r\n\r\n    //     _mint(msg.sender, TOTAL_SUPPLY * 80 / 100); // 80%流通\r\n\r\n    //     // 流通的百分之八十需要进行计算来运行 总投资商的_teamAddresses地址和投资数量 进行换算 将这百分之八十的数量进行百分百换算分发\r\n\r\n    //     for (uint256 i = 0; i < teamAddresses.length; i++) {\r\n    //         _mint(teamAddresses[i], TOTAL_SUPPLY * 10 / 100 / teamAddresses.length); // 10%团队\r\n    //     }\r\n    //     _mint(address(this), TOTAL_SUPPLY * 10 / 100); // 10%资金池\r\n\r\n    //     teamLockedUntil = block.timestamp + TEAM_LOCK_PERIOD; // 锁仓设置\r\n    // }\r\n\r\n    187500 * 0.8 = 150000    \r\n\r\n*/\r\npragma solidity ^0.8.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\nimport \"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/INonfungiblePositionManager.sol\";\r\nimport \"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\";\r\n\r\ncontract CSYDToken is ERC20, Ownable {\r\n\r\n\r\n    uint256 public constant TOTAL_SUPPLY = 187_500_000 * 10**18; // 1.875亿枚\r\n    uint256 public constant TEAM_LOCK_PERIOD = 3 * 365 days; // 团队锁仓3年\r\n\r\n\r\n    struct TeamMember {\r\n        address memberAddress;\r\n        uint256 investmentAmount;\r\n    }\r\n\r\n    TeamMember[] private teamMembers;    \r\n    // address[] private teamAddresses; // 投资者地址\r\n    uint256 public teamLockedUntil;\r\n    address public uniswapPool;\r\n\r\n\r\n    constructor(TeamMember[] memory _teamMembers, address _uniswapPool) \r\n        ERC20(\"csyd\", \"CSYD\")\r\n        Ownable(msg.sender)\r\n    {\r\n        require(_teamMembers.length > 0, \"At least one team member required\");\r\n        uniswapPool = _uniswapPool;\r\n\r\n        uint256 totalInvestment = 0;  // 记录投资数量\r\n\r\n        // 计算总投资\r\n        for (uint256 i = 0; i < _teamMembers.length; i++) {\r\n            totalInvestment += _teamMembers[i].investmentAmount;\r\n            teamMembers.push(_teamMembers[i]); // 存储团队成员\r\n        }\r\n\r\n        uint256 market = TOTAL_SUPPLY * 80 / 100; // 市场流动性\r\n        uint256 totalDistribution = 0;\r\n\r\n        // 分发流通代币\r\n        for (uint256 i = 0; i < teamMembers.length; i++) {\r\n            uint256 share = (teamMembers[i].investmentAmount * market) / totalInvestment; // 计算每个成员的份额\r\n            _mint(teamMembers[i].memberAddress, share);\r\n            totalDistribution += share;\r\n        }\r\n\r\n        // 确保分发的总量不超过市场流动性\r\n        require(totalDistribution <= market, \"Total distribution exceeds market\");\r\n\r\n        _mint(msg.sender, market - totalDistribution); // 剩余流通代币分配给合约拥有者\r\n        _mint(address(this), TOTAL_SUPPLY * 10 / 100); // 10%资金池\r\n\r\n        teamLockedUntil = block.timestamp + TEAM_LOCK_PERIOD; // 锁仓设置\r\n\r\n        // 发布的代币记录一下发币时间的 在五年之后 才可进行回购 代币价值1.05进行回购 第六年的可按1.06 以此内推 直至封顶的第十年的比例1.10 回购之后的代币归属 资金如何给执行回购操作人员\r\n\r\n    }\r\n\r\n\r\n    modifier teamLocked(uint256 amount) {\r\n        require(block.timestamp >= teamLockedUntil || balanceOf(msg.sender) >= amount, \"Team tokens are locked\");\r\n        _;\r\n    }\r\n\r\n    // 重写转账\r\n    function transfer(address recipient, uint256 amount) public override teamLocked(amount) returns (bool) {\r\n        return super.transfer(recipient, amount);\r\n    }\r\n\r\n    // 合约铸造者方法\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override teamLocked(amount) returns (bool) {\r\n        return super.transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n    function getCurrentPrice() public view returns (uint256 price) {\r\n        IUniswapV3Pool pool = IUniswapV3Pool(uniswapPool);\r\n        (uint160 sqrtPriceX96, , , , , , ) = pool.slot0();\r\n        price = uint256(sqrtPriceX96) * uint256(sqrtPriceX96) / (2**192); // 计算价格\r\n    }\r\n\r\n    function getTeamMembers() public view returns (TeamMember[] memory) {\r\n        return teamMembers; // 返回所有团队成员信息\r\n    }\r\n\r\n    function getTeamMember(uint256 index) public view returns (address, uint256) {\r\n        require(index < teamMembers.length, \"Index out of bounds\"); // 检查索引范围\r\n        TeamMember memory member = teamMembers[index];\r\n        return (member.memberAddress, member.investmentAmount); // 返回地址和投资金额\r\n    }\r\n\r\n    function getTeamMemberCount() public view returns (uint256) {\r\n        return teamMembers.length; // 返回团队成员的数量\r\n    }\r\n}"
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';\nimport '@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';\n\nimport './IPoolInitializer.sol';\nimport './IERC721Permit.sol';\nimport './IPeripheryPayments.sol';\nimport './IPeripheryImmutableState.sol';\n\n/// @title Non-fungible token for positions\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n/// and authorized.\ninterface INonfungiblePositionManager is\n    IPoolInitializer,\n    IPeripheryPayments,\n    IPeripheryImmutableState,\n    IERC721Metadata,\n    IERC721Enumerable,\n    IERC721Permit\n{\n    /// @notice Emitted when liquidity is increased for a position NFT\n    /// @dev Also emitted when a token is minted\n    /// @param tokenId The ID of the token for which liquidity was increased\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when liquidity is decreased for a position NFT\n    /// @param tokenId The ID of the token for which liquidity was decreased\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when tokens are collected for a position NFT\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n    /// @param tokenId The ID of the token for which underlying tokens were collected\n    /// @param recipient The address of the account that received the collected tokens\n    /// @param amount0 The amount of token0 owed to the position that was collected\n    /// @param amount1 The amount of token1 owed to the position that was collected\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\n\n    /// @notice Returns the position information associated with a given token ID.\n    /// @dev Throws if the token ID is not valid.\n    /// @param tokenId The ID of the token that represents the position\n    /// @return nonce The nonce for permits\n    /// @return operator The address that is approved for spending\n    /// @return token0 The address of the token0 for a specific pool\n    /// @return token1 The address of the token1 for a specific pool\n    /// @return fee The fee associated with the pool\n    /// @return tickLower The lower end of the tick range for the position\n    /// @return tickUpper The higher end of the tick range for the position\n    /// @return liquidity The liquidity of the position\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    struct MintParams {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower;\n        int24 tickUpper;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        address recipient;\n        uint256 deadline;\n    }\n\n    /// @notice Creates a new position wrapped in a NFT\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n    /// @return tokenId The ID of the token that represents the minted position\n    /// @return liquidity The amount of liquidity for this position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function mint(MintParams calldata params)\n        external\n        payable\n        returns (\n            uint256 tokenId,\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct IncreaseLiquidityParams {\n        uint256 tokenId;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\n    /// amount0Desired The desired amount of token0 to be spent,\n    /// amount1Desired The desired amount of token1 to be spent,\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return liquidity The new liquidity amount as a result of the increase\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct DecreaseLiquidityParams {\n        uint256 tokenId;\n        uint128 liquidity;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\n    /// amount The amount by which liquidity will be decreased,\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (uint256 amount0, uint256 amount1);\n\n    struct CollectParams {\n        uint256 tokenId;\n        address recipient;\n        uint128 amount0Max;\n        uint128 amount1Max;\n    }\n\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\n    /// recipient The account that should receive the tokens,\n    /// amount0Max The maximum amount of token0 to collect,\n    /// amount1Max The maximum amount of token1 to collect\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n    /// must be collected first.\n    /// @param tokenId The ID of the token that is being burned\n    function burn(uint256 tokenId) external payable;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n"
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IERC721Permit.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\n\n/// @title ERC721 with permit\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\ninterface IERC721Permit is IERC721 {\n    /// @notice The permit typehash used in the permit signature\n    /// @return The typehash for the permit\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    /// @notice The domain separator used in the permit signature\n    /// @return The domain seperator used in encoding of permit signature\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    /// @notice Approve of a specific token ID for spending by spender via signature\n    /// @param spender The account that is being approved\n    /// @param tokenId The ID of the token that is being approved for spending\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function permit(\n        address spender,\n        uint256 tokenId,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n}\n"
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPoolInitializer.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Creates and initializes V3 Pools\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n/// require the pool to exist.\ninterface IPoolInitializer {\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n    /// @param token0 The contract address of token0 of the pool\n    /// @param token1 The contract address of token1 of the pool\n    /// @param fee The fee amount of the v3 pool for the specified token pair\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\n    function createAndInitializePoolIfNecessary(\n        address token0,\n        address token1,\n        uint24 fee,\n        uint160 sqrtPriceX96\n    ) external payable returns (address pool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.9.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.9.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xc8377a835980f99893bde57e8cf0ce76acb6b27348ef97bb433b9557b71d2eff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef1dd49fb9841fe7c372f218f9067d454a08a79e88d689eb9c6e4ab8ecd9ae0\",\"dweb:/ipfs/QmbbB2KeiExC6bejin37eFFPfQzag2wfVEyhjs31s94nhJ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x088eccf105dd762b03e1ac4d8315ae784b68d4ff41428448bdbbbc9eb2a522e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0890d41520baa6df78216b1c1869b222256de8e56cd77760eeb9f640e143f55\",\"dweb:/ipfs/QmVZozkPfa4hRUrECiN7gqrxwz6UB5Gmzmbjg3gSuZSDXZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CC/CCToken.sol": {
				"CSYDToken": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "memberAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "investmentAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct CSYDToken.TeamMember[]",
									"name": "_teamMembers",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "_uniswapPool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TEAM_LOCK_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getTeamMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTeamMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTeamMembers",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "memberAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "investmentAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct CSYDToken.TeamMember[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamLockedUntil",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CC/CCToken.sol\":2608:6286  contract CSYDToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CC/CCToken.sol\":3101:4763  constructor(TeamMember[] memory _teamMembers, address _uniswapPool) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CC/CCToken.sol\":3218:3228  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x6373796400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4353594400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/CC/CCToken.sol\":3276:3277  0 */\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3254:3266  _teamMembers */\n  dup3\n    /* \"contracts/CC/CCToken.sol\":3254:3273  _teamMembers.length */\n  mload\n    /* \"contracts/CC/CCToken.sol\":3254:3277  _teamMembers.length > 0 */\n  gt\n    /* \"contracts/CC/CCToken.sol\":3246:3315  require(_teamMembers.length > 0, \"At least one team member required\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/CC/CCToken.sol\":3340:3352  _uniswapPool */\n  dup1\n    /* \"contracts/CC/CCToken.sol\":3326:3337  uniswapPool */\n  0x08\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3326:3352  uniswapPool = _uniswapPool */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CC/CCToken.sol\":3365:3388  uint256 totalInvestment */\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3391:3392  0 */\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3365:3392  uint256 totalInvestment = 0 */\n  swap1\n  pop\n    /* \"contracts/CC/CCToken.sol\":3461:3470  uint256 i */\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3473:3474  0 */\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3461:3474  uint256 i = 0 */\n  swap1\n  pop\n    /* \"contracts/CC/CCToken.sol\":3456:3654  for (uint256 i = 0; i < _teamMembers.length; i++) {... */\ntag_21:\n    /* \"contracts/CC/CCToken.sol\":3480:3492  _teamMembers */\n  dup4\n    /* \"contracts/CC/CCToken.sol\":3480:3499  _teamMembers.length */\n  mload\n    /* \"contracts/CC/CCToken.sol\":3476:3477  i */\n  dup2\n    /* \"contracts/CC/CCToken.sol\":3476:3499  i < _teamMembers.length */\n  lt\n    /* \"contracts/CC/CCToken.sol\":3456:3654  for (uint256 i = 0; i < _teamMembers.length; i++) {... */\n  iszero\n  tag_22\n  jumpi\n    /* \"contracts/CC/CCToken.sol\":3540:3552  _teamMembers */\n  dup4\n    /* \"contracts/CC/CCToken.sol\":3553:3554  i */\n  dup2\n    /* \"contracts/CC/CCToken.sol\":3540:3555  _teamMembers[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_24\n  jumpi\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\ntag_24:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/CC/CCToken.sol\":3540:3572  _teamMembers[i].investmentAmount */\n  0x20\n  add\n  mload\n    /* \"contracts/CC/CCToken.sol\":3521:3572  totalInvestment += _teamMembers[i].investmentAmount */\n  dup3\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap2\n  pop\n    /* \"contracts/CC/CCToken.sol\":3587:3598  teamMembers */\n  0x06\n    /* \"contracts/CC/CCToken.sol\":3604:3616  _teamMembers */\n  dup5\n    /* \"contracts/CC/CCToken.sol\":3617:3618  i */\n  dup3\n    /* \"contracts/CC/CCToken.sol\":3604:3619  _teamMembers[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_29\n  jumpi\n  tag_30\n  tag_26\n  jump\t// in\ntag_30:\ntag_29:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/CC/CCToken.sol\":3587:3620  teamMembers.push(_teamMembers[i]) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n    /* \"contracts/CC/CCToken.sol\":3501:3504  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/CC/CCToken.sol\":3456:3654  for (uint256 i = 0; i < _teamMembers.length; i++) {... */\n  jump(tag_21)\ntag_22:\n  pop\n    /* \"contracts/CC/CCToken.sol\":3666:3680  uint256 market */\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3703:3706  100 */\n  0x64\n    /* \"contracts/CC/CCToken.sol\":3698:3700  80 */\n  0x50\n    /* \"contracts/CC/CCToken.sol\":2695:2715  187_500_000 * 10**18 */\n  0x9b18ab5df7180b6b800000\n    /* \"contracts/CC/CCToken.sol\":3683:3700  TOTAL_SUPPLY * 80 */\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"contracts/CC/CCToken.sol\":3683:3706  TOTAL_SUPPLY * 80 / 100 */\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"contracts/CC/CCToken.sol\":3666:3706  uint256 market = TOTAL_SUPPLY * 80 / 100 */\n  swap1\n  pop\n    /* \"contracts/CC/CCToken.sol\":3736:3761  uint256 totalDistribution */\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3764:3765  0 */\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3736:3765  uint256 totalDistribution = 0 */\n  swap1\n  pop\n    /* \"contracts/CC/CCToken.sol\":3814:3823  uint256 i */\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3826:3827  0 */\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3814:3827  uint256 i = 0 */\n  swap1\n  pop\n    /* \"contracts/CC/CCToken.sol\":3809:4090  for (uint256 i = 0; i < teamMembers.length; i++) {... */\ntag_36:\n    /* \"contracts/CC/CCToken.sol\":3833:3844  teamMembers */\n  0x06\n    /* \"contracts/CC/CCToken.sol\":3833:3851  teamMembers.length */\n  dup1\n  sload\n  swap1\n  pop\n    /* \"contracts/CC/CCToken.sol\":3829:3830  i */\n  dup2\n    /* \"contracts/CC/CCToken.sol\":3829:3851  i < teamMembers.length */\n  lt\n    /* \"contracts/CC/CCToken.sol\":3809:4090  for (uint256 i = 0; i < teamMembers.length; i++) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"contracts/CC/CCToken.sol\":3873:3886  uint256 share */\n  0x00\n    /* \"contracts/CC/CCToken.sol\":3934:3949  totalInvestment */\n  dup5\n    /* \"contracts/CC/CCToken.sol\":3924:3930  market */\n  dup5\n    /* \"contracts/CC/CCToken.sol\":3890:3901  teamMembers */\n  0x06\n    /* \"contracts/CC/CCToken.sol\":3902:3903  i */\n  dup5\n    /* \"contracts/CC/CCToken.sol\":3890:3904  teamMembers[i] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_39\n  jumpi\n  tag_40\n  tag_26\n  jump\t// in\ntag_40:\ntag_39:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n    /* \"contracts/CC/CCToken.sol\":3890:3921  teamMembers[i].investmentAmount */\n  0x01\n  add\n  sload\n    /* \"contracts/CC/CCToken.sol\":3890:3930  teamMembers[i].investmentAmount * market */\n  tag_42\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_42:\n    /* \"contracts/CC/CCToken.sol\":3889:3949  (teamMembers[i].investmentAmount * market) / totalInvestment */\n  tag_43\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_43:\n    /* \"contracts/CC/CCToken.sol\":3873:3949  uint256 share = (teamMembers[i].investmentAmount * market) / totalInvestment */\n  swap1\n  pop\n    /* \"contracts/CC/CCToken.sol\":3995:4037  _mint(teamMembers[i].memberAddress, share) */\n  tag_44\n    /* \"contracts/CC/CCToken.sol\":4001:4012  teamMembers */\n  0x06\n    /* \"contracts/CC/CCToken.sol\":4013:4014  i */\n  dup4\n    /* \"contracts/CC/CCToken.sol\":4001:4015  teamMembers[i] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_45\n  jumpi\n  tag_46\n  tag_26\n  jump\t// in\ntag_46:\ntag_45:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n    /* \"contracts/CC/CCToken.sol\":4001:4029  teamMembers[i].memberAddress */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CC/CCToken.sol\":4031:4036  share */\n  dup3\n    /* \"contracts/CC/CCToken.sol\":3995:4000  _mint */\n  shl(0x20, tag_48)\n    /* \"contracts/CC/CCToken.sol\":3995:4037  _mint(teamMembers[i].memberAddress, share) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"contracts/CC/CCToken.sol\":4073:4078  share */\n  dup1\n    /* \"contracts/CC/CCToken.sol\":4052:4078  totalDistribution += share */\n  dup4\n  tag_49\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_49:\n  swap3\n  pop\n    /* \"contracts/CC/CCToken.sol\":3858:4090  {... */\n  pop\n    /* \"contracts/CC/CCToken.sol\":3853:3856  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/CC/CCToken.sol\":3809:4090  for (uint256 i = 0; i < teamMembers.length; i++) {... */\n  jump(tag_36)\ntag_37:\n  pop\n    /* \"contracts/CC/CCToken.sol\":4189:4195  market */\n  dup2\n    /* \"contracts/CC/CCToken.sol\":4168:4185  totalDistribution */\n  dup2\n    /* \"contracts/CC/CCToken.sol\":4168:4195  totalDistribution <= market */\n  gt\n  iszero\n    /* \"contracts/CC/CCToken.sol\":4160:4233  require(totalDistribution <= market, \"Total distribution exceeds market\") */\n  tag_50\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_51\n  swap1\n  tag_52\n  jump\t// in\ntag_51:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_50:\n    /* \"contracts/CC/CCToken.sol\":4246:4291  _mint(msg.sender, market - totalDistribution) */\n  tag_53\n    /* \"contracts/CC/CCToken.sol\":4252:4262  msg.sender */\n  caller\n    /* \"contracts/CC/CCToken.sol\":4273:4290  totalDistribution */\n  dup3\n    /* \"contracts/CC/CCToken.sol\":4264:4270  market */\n  dup5\n    /* \"contracts/CC/CCToken.sol\":4264:4290  market - totalDistribution */\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n    /* \"contracts/CC/CCToken.sol\":4246:4251  _mint */\n  shl(0x20, tag_48)\n    /* \"contracts/CC/CCToken.sol\":4246:4291  _mint(msg.sender, market - totalDistribution) */\n  0x20\n  shr\n  jump\t// in\ntag_53:\n    /* \"contracts/CC/CCToken.sol\":4348:4393  _mint(address(this), TOTAL_SUPPLY * 10 / 100) */\n  tag_56\n    /* \"contracts/CC/CCToken.sol\":4362:4366  this */\n  address\n    /* \"contracts/CC/CCToken.sol\":4389:4392  100 */\n  0x64\n    /* \"contracts/CC/CCToken.sol\":4384:4386  10 */\n  0x0a\n    /* \"contracts/CC/CCToken.sol\":2695:2715  187_500_000 * 10**18 */\n  0x9b18ab5df7180b6b800000\n    /* \"contracts/CC/CCToken.sol\":4369:4386  TOTAL_SUPPLY * 10 */\n  tag_57\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_57:\n    /* \"contracts/CC/CCToken.sol\":4369:4392  TOTAL_SUPPLY * 10 / 100 */\n  tag_58\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_58:\n    /* \"contracts/CC/CCToken.sol\":4348:4353  _mint */\n  shl(0x20, tag_48)\n    /* \"contracts/CC/CCToken.sol\":4348:4393  _mint(address(this), TOTAL_SUPPLY * 10 / 100) */\n  0x20\n  shr\n  jump\t// in\ntag_56:\n    /* \"contracts/CC/CCToken.sol\":2780:2792  3 * 365 days */\n  0x05a39a80\n    /* \"contracts/CC/CCToken.sol\":4440:4455  block.timestamp */\n  timestamp\n    /* \"contracts/CC/CCToken.sol\":4440:4474  block.timestamp + TEAM_LOCK_PERIOD */\n  tag_59\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_59:\n    /* \"contracts/CC/CCToken.sol\":4422:4437  teamLockedUntil */\n  0x07\n    /* \"contracts/CC/CCToken.sol\":4422:4474  teamLockedUntil = block.timestamp + TEAM_LOCK_PERIOD */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CC/CCToken.sol\":3235:4763  {... */\n  pop\n  pop\n  pop\n    /* \"contracts/CC/CCToken.sol\":3101:4763  constructor(TeamMember[] memory _teamMembers, address _uniswapPool) ... */\n  pop\n  pop\n    /* \"contracts/CC/CCToken.sol\":2608:6286  contract CSYDToken is ERC20, Ownable {... */\n  jump(tag_60)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_48:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_63\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_64\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_64:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_63:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_65\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_66)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_65:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_66:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_68\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_69\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_69:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_70)\ntag_68:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_71\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_72\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_73\n  jump\t// in\ntag_72:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_71:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_70:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_74\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_75)\ntag_74:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_75:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_76\n  swap2\n  swap1\n  tag_77\n  jump\t// in\ntag_76:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_78:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_79:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_80:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_81:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:559   */\ntag_82:\n    /* \"#utility.yul\":498:504   */\n  0x00\n    /* \"#utility.yul\":549:551   */\n  0x1f\n    /* \"#utility.yul\":545:552   */\n  not\n    /* \"#utility.yul\":540:542   */\n  0x1f\n    /* \"#utility.yul\":533:538   */\n  dup4\n    /* \"#utility.yul\":529:543   */\n  add\n    /* \"#utility.yul\":525:553   */\n  and\n    /* \"#utility.yul\":515:553   */\n  swap1\n  pop\n    /* \"#utility.yul\":457:559   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":565:745   */\ntag_83:\n    /* \"#utility.yul\":613:690   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":610:611   */\n  0x00\n    /* \"#utility.yul\":603:691   */\n  mstore\n    /* \"#utility.yul\":710:714   */\n  0x41\n    /* \"#utility.yul\":707:708   */\n  0x04\n    /* \"#utility.yul\":700:715   */\n  mstore\n    /* \"#utility.yul\":734:738   */\n  0x24\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":724:739   */\n  revert\n    /* \"#utility.yul\":751:1032   */\ntag_84:\n    /* \"#utility.yul\":834:861   */\n  tag_135\n    /* \"#utility.yul\":856:860   */\n  dup3\n    /* \"#utility.yul\":834:861   */\n  tag_82\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":826:832   */\n  dup2\n    /* \"#utility.yul\":822:862   */\n  add\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":952:962   */\n  dup2\n    /* \"#utility.yul\":949:971   */\n  lt\n    /* \"#utility.yul\":928:946   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":916:926   */\n  dup3\n    /* \"#utility.yul\":913:947   */\n  gt\n    /* \"#utility.yul\":910:972   */\n  or\n    /* \"#utility.yul\":907:995   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":975:993   */\n  tag_137\n  tag_83\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":907:995   */\ntag_136:\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n    /* \"#utility.yul\":1011:1013   */\n  0x40\n    /* \"#utility.yul\":1004:1026   */\n  mstore\n    /* \"#utility.yul\":794:1032   */\n  pop\n    /* \"#utility.yul\":751:1032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1038:1167   */\ntag_85:\n    /* \"#utility.yul\":1072:1078   */\n  0x00\n    /* \"#utility.yul\":1099:1119   */\n  tag_139\n  tag_78\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":1089:1119   */\n  swap1\n  pop\n    /* \"#utility.yul\":1128:1161   */\n  tag_140\n    /* \"#utility.yul\":1156:1160   */\n  dup3\n    /* \"#utility.yul\":1148:1154   */\n  dup3\n    /* \"#utility.yul\":1128:1161   */\n  tag_84\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":1038:1167   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1173:1511   */\ntag_86:\n    /* \"#utility.yul\":1277:1281   */\n  0x00\n    /* \"#utility.yul\":1367:1385   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1359:1365   */\n  dup3\n    /* \"#utility.yul\":1356:1386   */\n  gt\n    /* \"#utility.yul\":1353:1409   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":1389:1407   */\n  tag_143\n  tag_83\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":1353:1409   */\ntag_142:\n    /* \"#utility.yul\":1439:1443   */\n  0x20\n    /* \"#utility.yul\":1431:1437   */\n  dup3\n    /* \"#utility.yul\":1427:1444   */\n  mul\n    /* \"#utility.yul\":1419:1444   */\n  swap1\n  pop\n    /* \"#utility.yul\":1499:1503   */\n  0x20\n    /* \"#utility.yul\":1493:1497   */\n  dup2\n    /* \"#utility.yul\":1489:1504   */\n  add\n    /* \"#utility.yul\":1481:1504   */\n  swap1\n  pop\n    /* \"#utility.yul\":1173:1511   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1517:1634   */\ntag_87:\n    /* \"#utility.yul\":1626:1627   */\n  0x00\n    /* \"#utility.yul\":1623:1624   */\n  0x00\n    /* \"#utility.yul\":1616:1628   */\n  revert\n    /* \"#utility.yul\":1640:1757   */\ntag_88:\n    /* \"#utility.yul\":1749:1750   */\n  0x00\n    /* \"#utility.yul\":1746:1747   */\n  0x00\n    /* \"#utility.yul\":1739:1751   */\n  revert\n    /* \"#utility.yul\":1886:2012   */\ntag_90:\n    /* \"#utility.yul\":1923:1930   */\n  0x00\n    /* \"#utility.yul\":1963:2005   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1956:1961   */\n  dup3\n    /* \"#utility.yul\":1952:2006   */\n  and\n    /* \"#utility.yul\":1941:2006   */\n  swap1\n  pop\n    /* \"#utility.yul\":1886:2012   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2018:2114   */\ntag_91:\n    /* \"#utility.yul\":2055:2062   */\n  0x00\n    /* \"#utility.yul\":2084:2108   */\n  tag_149\n    /* \"#utility.yul\":2102:2107   */\n  dup3\n    /* \"#utility.yul\":2084:2108   */\n  tag_90\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":2073:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":2018:2114   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2120:2242   */\ntag_92:\n    /* \"#utility.yul\":2193:2217   */\n  tag_151\n    /* \"#utility.yul\":2211:2216   */\n  dup2\n    /* \"#utility.yul\":2193:2217   */\n  tag_91\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":2186:2191   */\n  dup2\n    /* \"#utility.yul\":2183:2218   */\n  eq\n    /* \"#utility.yul\":2173:2236   */\n  tag_152\n  jumpi\n    /* \"#utility.yul\":2232:2233   */\n  0x00\n    /* \"#utility.yul\":2229:2230   */\n  0x00\n    /* \"#utility.yul\":2222:2234   */\n  revert\n    /* \"#utility.yul\":2173:2236   */\ntag_152:\n    /* \"#utility.yul\":2120:2242   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2248:2391   */\ntag_93:\n    /* \"#utility.yul\":2305:2310   */\n  0x00\n    /* \"#utility.yul\":2336:2342   */\n  dup2\n    /* \"#utility.yul\":2330:2343   */\n  mload\n    /* \"#utility.yul\":2321:2343   */\n  swap1\n  pop\n    /* \"#utility.yul\":2352:2385   */\n  tag_154\n    /* \"#utility.yul\":2379:2384   */\n  dup2\n    /* \"#utility.yul\":2352:2385   */\n  tag_92\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":2248:2391   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2397:2474   */\ntag_94:\n    /* \"#utility.yul\":2434:2441   */\n  0x00\n    /* \"#utility.yul\":2463:2468   */\n  dup2\n    /* \"#utility.yul\":2452:2468   */\n  swap1\n  pop\n    /* \"#utility.yul\":2397:2474   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2480:2602   */\ntag_95:\n    /* \"#utility.yul\":2553:2577   */\n  tag_157\n    /* \"#utility.yul\":2571:2576   */\n  dup2\n    /* \"#utility.yul\":2553:2577   */\n  tag_94\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":2546:2551   */\n  dup2\n    /* \"#utility.yul\":2543:2578   */\n  eq\n    /* \"#utility.yul\":2533:2596   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":2592:2593   */\n  0x00\n    /* \"#utility.yul\":2589:2590   */\n  0x00\n    /* \"#utility.yul\":2582:2594   */\n  revert\n    /* \"#utility.yul\":2533:2596   */\ntag_158:\n    /* \"#utility.yul\":2480:2602   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2608:2751   */\ntag_96:\n    /* \"#utility.yul\":2665:2670   */\n  0x00\n    /* \"#utility.yul\":2696:2702   */\n  dup2\n    /* \"#utility.yul\":2690:2703   */\n  mload\n    /* \"#utility.yul\":2681:2703   */\n  swap1\n  pop\n    /* \"#utility.yul\":2712:2745   */\n  tag_160\n    /* \"#utility.yul\":2739:2744   */\n  dup2\n    /* \"#utility.yul\":2712:2745   */\n  tag_95\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":2608:2751   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2792:3422   */\ntag_97:\n    /* \"#utility.yul\":2879:2884   */\n  0x00\n    /* \"#utility.yul\":2923:2927   */\n  0x40\n    /* \"#utility.yul\":2911:2920   */\n  dup3\n    /* \"#utility.yul\":2906:2909   */\n  dup5\n    /* \"#utility.yul\":2902:2921   */\n  sub\n    /* \"#utility.yul\":2898:2928   */\n  slt\n    /* \"#utility.yul\":2895:3012   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":2931:3010   */\n  tag_163\n  tag_88\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":2895:3012   */\ntag_162:\n    /* \"#utility.yul\":3030:3051   */\n  tag_164\n    /* \"#utility.yul\":3046:3050   */\n  0x40\n    /* \"#utility.yul\":3030:3051   */\n  tag_85\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":3021:3051   */\n  swap1\n  pop\n    /* \"#utility.yul\":3119:3120   */\n  0x00\n    /* \"#utility.yul\":3159:3219   */\n  tag_165\n    /* \"#utility.yul\":3215:3218   */\n  dup5\n    /* \"#utility.yul\":3206:3212   */\n  dup3\n    /* \"#utility.yul\":3195:3204   */\n  dup6\n    /* \"#utility.yul\":3191:3213   */\n  add\n    /* \"#utility.yul\":3159:3219   */\n  tag_93\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":3152:3156   */\n  0x00\n    /* \"#utility.yul\":3145:3150   */\n  dup4\n    /* \"#utility.yul\":3141:3157   */\n  add\n    /* \"#utility.yul\":3134:3220   */\n  mstore\n    /* \"#utility.yul\":3061:3231   */\n  pop\n    /* \"#utility.yul\":3302:3304   */\n  0x20\n    /* \"#utility.yul\":3343:3403   */\n  tag_166\n    /* \"#utility.yul\":3399:3402   */\n  dup5\n    /* \"#utility.yul\":3390:3396   */\n  dup3\n    /* \"#utility.yul\":3379:3388   */\n  dup6\n    /* \"#utility.yul\":3375:3397   */\n  add\n    /* \"#utility.yul\":3343:3403   */\n  tag_96\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":3336:3340   */\n  0x20\n    /* \"#utility.yul\":3329:3334   */\n  dup4\n    /* \"#utility.yul\":3325:3341   */\n  add\n    /* \"#utility.yul\":3318:3404   */\n  mstore\n    /* \"#utility.yul\":3241:3415   */\n  pop\n    /* \"#utility.yul\":2792:3422   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3465:4278   */\ntag_98:\n    /* \"#utility.yul\":3599:3604   */\n  0x00\n    /* \"#utility.yul\":3624:3732   */\n  tag_168\n    /* \"#utility.yul\":3640:3731   */\n  tag_169\n    /* \"#utility.yul\":3724:3730   */\n  dup5\n    /* \"#utility.yul\":3640:3731   */\n  tag_86\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":3624:3732   */\n  tag_85\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":3615:3732   */\n  swap1\n  pop\n    /* \"#utility.yul\":3752:3757   */\n  dup1\n    /* \"#utility.yul\":3781:3787   */\n  dup4\n    /* \"#utility.yul\":3774:3779   */\n  dup3\n    /* \"#utility.yul\":3767:3788   */\n  mstore\n    /* \"#utility.yul\":3815:3819   */\n  0x20\n    /* \"#utility.yul\":3808:3813   */\n  dup3\n    /* \"#utility.yul\":3804:3820   */\n  add\n    /* \"#utility.yul\":3797:3820   */\n  swap1\n  pop\n    /* \"#utility.yul\":3868:3872   */\n  0x40\n    /* \"#utility.yul\":3860:3866   */\n  dup5\n    /* \"#utility.yul\":3856:3873   */\n  mul\n    /* \"#utility.yul\":3848:3854   */\n  dup4\n    /* \"#utility.yul\":3844:3874   */\n  add\n    /* \"#utility.yul\":3897:3900   */\n  dup6\n    /* \"#utility.yul\":3889:3895   */\n  dup2\n    /* \"#utility.yul\":3886:3901   */\n  gt\n    /* \"#utility.yul\":3883:4005   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":3916:3995   */\n  tag_171\n  tag_87\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":3883:4005   */\ntag_170:\n    /* \"#utility.yul\":4031:4037   */\n  dup4\n    /* \"#utility.yul\":4014:4272   */\ntag_172:\n    /* \"#utility.yul\":4048:4054   */\n  dup2\n    /* \"#utility.yul\":4043:4046   */\n  dup2\n    /* \"#utility.yul\":4040:4055   */\n  lt\n    /* \"#utility.yul\":4014:4272   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":4123:4126   */\n  dup1\n    /* \"#utility.yul\":4152:4227   */\n  tag_175\n    /* \"#utility.yul\":4223:4226   */\n  dup9\n    /* \"#utility.yul\":4211:4221   */\n  dup3\n    /* \"#utility.yul\":4152:4227   */\n  tag_97\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":4147:4150   */\n  dup5\n    /* \"#utility.yul\":4140:4228   */\n  mstore\n    /* \"#utility.yul\":4257:4261   */\n  0x20\n    /* \"#utility.yul\":4252:4255   */\n  dup5\n    /* \"#utility.yul\":4248:4262   */\n  add\n    /* \"#utility.yul\":4241:4262   */\n  swap4\n  pop\n    /* \"#utility.yul\":4090:4272   */\n  pop\n    /* \"#utility.yul\":4074:4078   */\n  0x40\n    /* \"#utility.yul\":4069:4072   */\n  dup2\n    /* \"#utility.yul\":4065:4079   */\n  add\n    /* \"#utility.yul\":4058:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4014:4272   */\n  jump(tag_172)\ntag_174:\n    /* \"#utility.yul\":4018:4039   */\n  pop\n    /* \"#utility.yul\":3605:4278   */\n  pop\n  pop\n    /* \"#utility.yul\":3465:4278   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4321:4760   */\ntag_99:\n    /* \"#utility.yul\":4430:4435   */\n  0x00\n    /* \"#utility.yul\":4479:4482   */\n  dup3\n    /* \"#utility.yul\":4472:4476   */\n  0x1f\n    /* \"#utility.yul\":4464:4470   */\n  dup4\n    /* \"#utility.yul\":4460:4477   */\n  add\n    /* \"#utility.yul\":4456:4483   */\n  slt\n    /* \"#utility.yul\":4446:4568   */\n  tag_177\n  jumpi\n    /* \"#utility.yul\":4487:4566   */\n  tag_178\n  tag_81\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":4446:4568   */\ntag_177:\n    /* \"#utility.yul\":4597:4603   */\n  dup2\n    /* \"#utility.yul\":4591:4604   */\n  mload\n    /* \"#utility.yul\":4622:4754   */\n  tag_179\n    /* \"#utility.yul\":4750:4753   */\n  dup5\n    /* \"#utility.yul\":4742:4748   */\n  dup3\n    /* \"#utility.yul\":4735:4739   */\n  0x20\n    /* \"#utility.yul\":4727:4733   */\n  dup7\n    /* \"#utility.yul\":4723:4740   */\n  add\n    /* \"#utility.yul\":4622:4754   */\n  tag_98\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":4613:4754   */\n  swap2\n  pop\n    /* \"#utility.yul\":4436:4760   */\n  pop\n    /* \"#utility.yul\":4321:4760   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4766:5530   */\ntag_3:\n    /* \"#utility.yul\":4897:4903   */\n  0x00\n    /* \"#utility.yul\":4905:4911   */\n  0x00\n    /* \"#utility.yul\":4954:4956   */\n  0x40\n    /* \"#utility.yul\":4942:4951   */\n  dup4\n    /* \"#utility.yul\":4933:4940   */\n  dup6\n    /* \"#utility.yul\":4929:4952   */\n  sub\n    /* \"#utility.yul\":4925:4957   */\n  slt\n    /* \"#utility.yul\":4922:5041   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":4960:5039   */\n  tag_182\n  tag_79\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":4922:5041   */\ntag_181:\n    /* \"#utility.yul\":5101:5102   */\n  0x00\n    /* \"#utility.yul\":5090:5099   */\n  dup4\n    /* \"#utility.yul\":5086:5103   */\n  add\n    /* \"#utility.yul\":5080:5104   */\n  mload\n    /* \"#utility.yul\":5131:5149   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5123:5129   */\n  dup2\n    /* \"#utility.yul\":5120:5150   */\n  gt\n    /* \"#utility.yul\":5117:5234   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":5153:5232   */\n  tag_184\n  tag_80\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":5117:5234   */\ntag_183:\n    /* \"#utility.yul\":5258:5374   */\n  tag_185\n    /* \"#utility.yul\":5366:5373   */\n  dup6\n    /* \"#utility.yul\":5357:5363   */\n  dup3\n    /* \"#utility.yul\":5346:5355   */\n  dup7\n    /* \"#utility.yul\":5342:5364   */\n  add\n    /* \"#utility.yul\":5258:5374   */\n  tag_99\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":5248:5374   */\n  swap3\n  pop\n    /* \"#utility.yul\":5051:5384   */\n  pop\n    /* \"#utility.yul\":5423:5425   */\n  0x20\n    /* \"#utility.yul\":5449:5513   */\n  tag_186\n    /* \"#utility.yul\":5505:5512   */\n  dup6\n    /* \"#utility.yul\":5496:5502   */\n  dup3\n    /* \"#utility.yul\":5485:5494   */\n  dup7\n    /* \"#utility.yul\":5481:5503   */\n  add\n    /* \"#utility.yul\":5449:5513   */\n  tag_93\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":5439:5513   */\n  swap2\n  pop\n    /* \"#utility.yul\":5394:5523   */\n  pop\n    /* \"#utility.yul\":4766:5530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5536:5635   */\ntag_100:\n    /* \"#utility.yul\":5588:5594   */\n  0x00\n    /* \"#utility.yul\":5622:5627   */\n  dup2\n    /* \"#utility.yul\":5616:5628   */\n  mload\n    /* \"#utility.yul\":5606:5628   */\n  swap1\n  pop\n    /* \"#utility.yul\":5536:5635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5641:5821   */\ntag_101:\n    /* \"#utility.yul\":5689:5766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5686:5687   */\n  0x00\n    /* \"#utility.yul\":5679:5767   */\n  mstore\n    /* \"#utility.yul\":5786:5790   */\n  0x22\n    /* \"#utility.yul\":5783:5784   */\n  0x04\n    /* \"#utility.yul\":5776:5791   */\n  mstore\n    /* \"#utility.yul\":5810:5814   */\n  0x24\n    /* \"#utility.yul\":5807:5808   */\n  0x00\n    /* \"#utility.yul\":5800:5815   */\n  revert\n    /* \"#utility.yul\":5827:6147   */\ntag_102:\n    /* \"#utility.yul\":5871:5877   */\n  0x00\n    /* \"#utility.yul\":5908:5909   */\n  0x02\n    /* \"#utility.yul\":5902:5906   */\n  dup3\n    /* \"#utility.yul\":5898:5910   */\n  div\n    /* \"#utility.yul\":5888:5910   */\n  swap1\n  pop\n    /* \"#utility.yul\":5955:5956   */\n  0x01\n    /* \"#utility.yul\":5949:5953   */\n  dup3\n    /* \"#utility.yul\":5945:5957   */\n  and\n    /* \"#utility.yul\":5976:5994   */\n  dup1\n    /* \"#utility.yul\":5966:6047   */\n  tag_190\n  jumpi\n    /* \"#utility.yul\":6032:6036   */\n  0x7f\n    /* \"#utility.yul\":6024:6030   */\n  dup3\n    /* \"#utility.yul\":6020:6037   */\n  and\n    /* \"#utility.yul\":6010:6037   */\n  swap2\n  pop\n    /* \"#utility.yul\":5966:6047   */\ntag_190:\n    /* \"#utility.yul\":6094:6096   */\n  0x20\n    /* \"#utility.yul\":6086:6092   */\n  dup3\n    /* \"#utility.yul\":6083:6097   */\n  lt\n    /* \"#utility.yul\":6063:6081   */\n  dup2\n    /* \"#utility.yul\":6060:6098   */\n  sub\n    /* \"#utility.yul\":6057:6141   */\n  tag_191\n  jumpi\n    /* \"#utility.yul\":6113:6131   */\n  tag_192\n  tag_101\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":6057:6141   */\ntag_191:\n    /* \"#utility.yul\":5878:6147   */\n  pop\n    /* \"#utility.yul\":5827:6147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6153:6294   */\ntag_103:\n    /* \"#utility.yul\":6202:6206   */\n  0x00\n    /* \"#utility.yul\":6225:6228   */\n  dup2\n    /* \"#utility.yul\":6217:6228   */\n  swap1\n  pop\n    /* \"#utility.yul\":6248:6251   */\n  dup2\n    /* \"#utility.yul\":6245:6246   */\n  0x00\n    /* \"#utility.yul\":6238:6252   */\n  mstore\n    /* \"#utility.yul\":6282:6286   */\n  0x20\n    /* \"#utility.yul\":6279:6280   */\n  0x00\n    /* \"#utility.yul\":6269:6287   */\n  keccak256\n    /* \"#utility.yul\":6261:6287   */\n  swap1\n  pop\n    /* \"#utility.yul\":6153:6294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6300:6393   */\ntag_104:\n    /* \"#utility.yul\":6337:6343   */\n  0x00\n    /* \"#utility.yul\":6384:6386   */\n  0x20\n    /* \"#utility.yul\":6379:6381   */\n  0x1f\n    /* \"#utility.yul\":6372:6377   */\n  dup4\n    /* \"#utility.yul\":6368:6382   */\n  add\n    /* \"#utility.yul\":6364:6387   */\n  div\n    /* \"#utility.yul\":6354:6387   */\n  swap1\n  pop\n    /* \"#utility.yul\":6300:6393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6399:6506   */\ntag_105:\n    /* \"#utility.yul\":6443:6451   */\n  0x00\n    /* \"#utility.yul\":6493:6498   */\n  dup3\n    /* \"#utility.yul\":6487:6491   */\n  dup3\n    /* \"#utility.yul\":6483:6499   */\n  shl\n    /* \"#utility.yul\":6462:6499   */\n  swap1\n  pop\n    /* \"#utility.yul\":6399:6506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6512:6905   */\ntag_106:\n    /* \"#utility.yul\":6581:6587   */\n  0x00\n    /* \"#utility.yul\":6631:6632   */\n  0x08\n    /* \"#utility.yul\":6619:6629   */\n  dup4\n    /* \"#utility.yul\":6615:6633   */\n  mul\n    /* \"#utility.yul\":6654:6751   */\n  tag_197\n    /* \"#utility.yul\":6684:6750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6654:6751   */\n  tag_105\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":6772:6811   */\n  tag_198\n    /* \"#utility.yul\":6802:6810   */\n  dup7\n    /* \"#utility.yul\":6791:6800   */\n  dup4\n    /* \"#utility.yul\":6772:6811   */\n  tag_105\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":6760:6811   */\n  swap6\n  pop\n    /* \"#utility.yul\":6844:6848   */\n  dup1\n    /* \"#utility.yul\":6840:6849   */\n  not\n    /* \"#utility.yul\":6833:6838   */\n  dup5\n    /* \"#utility.yul\":6829:6850   */\n  and\n    /* \"#utility.yul\":6820:6850   */\n  swap4\n  pop\n    /* \"#utility.yul\":6893:6897   */\n  dup1\n    /* \"#utility.yul\":6883:6891   */\n  dup7\n    /* \"#utility.yul\":6879:6898   */\n  and\n    /* \"#utility.yul\":6872:6877   */\n  dup5\n    /* \"#utility.yul\":6869:6899   */\n  or\n    /* \"#utility.yul\":6859:6899   */\n  swap3\n  pop\n    /* \"#utility.yul\":6588:6905   */\n  pop\n  pop\n    /* \"#utility.yul\":6512:6905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6911:6971   */\ntag_107:\n    /* \"#utility.yul\":6939:6942   */\n  0x00\n    /* \"#utility.yul\":6960:6965   */\n  dup2\n    /* \"#utility.yul\":6953:6965   */\n  swap1\n  pop\n    /* \"#utility.yul\":6911:6971   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6977:7119   */\ntag_108:\n    /* \"#utility.yul\":7027:7036   */\n  0x00\n    /* \"#utility.yul\":7060:7113   */\n  tag_201\n    /* \"#utility.yul\":7078:7112   */\n  tag_202\n    /* \"#utility.yul\":7087:7111   */\n  tag_203\n    /* \"#utility.yul\":7105:7110   */\n  dup5\n    /* \"#utility.yul\":7087:7111   */\n  tag_94\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":7078:7112   */\n  tag_107\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":7060:7113   */\n  tag_94\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":7047:7113   */\n  swap1\n  pop\n    /* \"#utility.yul\":6977:7119   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7125:7200   */\ntag_109:\n    /* \"#utility.yul\":7168:7171   */\n  0x00\n    /* \"#utility.yul\":7189:7194   */\n  dup2\n    /* \"#utility.yul\":7182:7194   */\n  swap1\n  pop\n    /* \"#utility.yul\":7125:7200   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7206:7475   */\ntag_110:\n    /* \"#utility.yul\":7316:7355   */\n  tag_206\n    /* \"#utility.yul\":7347:7354   */\n  dup4\n    /* \"#utility.yul\":7316:7355   */\n  tag_108\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":7377:7468   */\n  tag_207\n    /* \"#utility.yul\":7426:7467   */\n  tag_208\n    /* \"#utility.yul\":7450:7466   */\n  dup3\n    /* \"#utility.yul\":7426:7467   */\n  tag_109\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":7418:7424   */\n  dup5\n    /* \"#utility.yul\":7411:7415   */\n  dup5\n    /* \"#utility.yul\":7405:7416   */\n  sload\n    /* \"#utility.yul\":7377:7468   */\n  tag_106\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":7371:7375   */\n  dup3\n    /* \"#utility.yul\":7364:7469   */\n  sstore\n    /* \"#utility.yul\":7282:7475   */\n  pop\n    /* \"#utility.yul\":7206:7475   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7481:7554   */\ntag_111:\n    /* \"#utility.yul\":7526:7529   */\n  0x00\n    /* \"#utility.yul\":7547:7548   */\n  0x00\n    /* \"#utility.yul\":7540:7548   */\n  swap1\n  pop\n    /* \"#utility.yul\":7481:7554   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7560:7749   */\ntag_112:\n    /* \"#utility.yul\":7637:7669   */\n  tag_211\n  tag_111\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":7678:7743   */\n  tag_212\n    /* \"#utility.yul\":7736:7742   */\n  dup2\n    /* \"#utility.yul\":7728:7734   */\n  dup5\n    /* \"#utility.yul\":7722:7726   */\n  dup5\n    /* \"#utility.yul\":7678:7743   */\n  tag_110\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":7613:7749   */\n  pop\n    /* \"#utility.yul\":7560:7749   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7755:7941   */\ntag_113:\n    /* \"#utility.yul\":7815:7935   */\ntag_214:\n    /* \"#utility.yul\":7832:7835   */\n  dup2\n    /* \"#utility.yul\":7825:7830   */\n  dup2\n    /* \"#utility.yul\":7822:7836   */\n  lt\n    /* \"#utility.yul\":7815:7935   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":7886:7925   */\n  tag_217\n    /* \"#utility.yul\":7923:7924   */\n  0x00\n    /* \"#utility.yul\":7916:7921   */\n  dup3\n    /* \"#utility.yul\":7886:7925   */\n  tag_112\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":7859:7860   */\n  0x01\n    /* \"#utility.yul\":7852:7857   */\n  dup2\n    /* \"#utility.yul\":7848:7861   */\n  add\n    /* \"#utility.yul\":7839:7861   */\n  swap1\n  pop\n    /* \"#utility.yul\":7815:7935   */\n  jump(tag_214)\ntag_216:\n    /* \"#utility.yul\":7755:7941   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7947:8490   */\ntag_114:\n    /* \"#utility.yul\":8048:8050   */\n  0x1f\n    /* \"#utility.yul\":8043:8046   */\n  dup3\n    /* \"#utility.yul\":8040:8051   */\n  gt\n    /* \"#utility.yul\":8037:8483   */\n  iszero\n  tag_219\n  jumpi\n    /* \"#utility.yul\":8082:8120   */\n  tag_220\n    /* \"#utility.yul\":8114:8119   */\n  dup2\n    /* \"#utility.yul\":8082:8120   */\n  tag_103\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":8166:8195   */\n  tag_221\n    /* \"#utility.yul\":8184:8194   */\n  dup5\n    /* \"#utility.yul\":8166:8195   */\n  tag_104\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":8156:8164   */\n  dup2\n    /* \"#utility.yul\":8152:8196   */\n  add\n    /* \"#utility.yul\":8349:8351   */\n  0x20\n    /* \"#utility.yul\":8337:8347   */\n  dup6\n    /* \"#utility.yul\":8334:8352   */\n  lt\n    /* \"#utility.yul\":8331:8380   */\n  iszero\n  tag_222\n  jumpi\n    /* \"#utility.yul\":8370:8378   */\n  dup2\n    /* \"#utility.yul\":8355:8378   */\n  swap1\n  pop\n    /* \"#utility.yul\":8331:8380   */\ntag_222:\n    /* \"#utility.yul\":8393:8473   */\n  tag_223\n    /* \"#utility.yul\":8449:8471   */\n  tag_224\n    /* \"#utility.yul\":8467:8470   */\n  dup6\n    /* \"#utility.yul\":8449:8471   */\n  tag_104\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":8439:8447   */\n  dup4\n    /* \"#utility.yul\":8435:8472   */\n  add\n    /* \"#utility.yul\":8422:8433   */\n  dup3\n    /* \"#utility.yul\":8393:8473   */\n  tag_113\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":8052:8483   */\n  pop\n  pop\n    /* \"#utility.yul\":8037:8483   */\ntag_219:\n    /* \"#utility.yul\":7947:8490   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8496:8613   */\ntag_115:\n    /* \"#utility.yul\":8550:8558   */\n  0x00\n    /* \"#utility.yul\":8600:8605   */\n  dup3\n    /* \"#utility.yul\":8594:8598   */\n  dup3\n    /* \"#utility.yul\":8590:8606   */\n  shr\n    /* \"#utility.yul\":8569:8606   */\n  swap1\n  pop\n    /* \"#utility.yul\":8496:8613   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8619:8788   */\ntag_116:\n    /* \"#utility.yul\":8663:8669   */\n  0x00\n    /* \"#utility.yul\":8696:8747   */\n  tag_227\n    /* \"#utility.yul\":8744:8745   */\n  0x00\n    /* \"#utility.yul\":8740:8746   */\n  not\n    /* \"#utility.yul\":8732:8737   */\n  dup5\n    /* \"#utility.yul\":8729:8730   */\n  0x08\n    /* \"#utility.yul\":8725:8738   */\n  mul\n    /* \"#utility.yul\":8696:8747   */\n  tag_115\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":8692:8748   */\n  not\n    /* \"#utility.yul\":8777:8781   */\n  dup1\n    /* \"#utility.yul\":8771:8775   */\n  dup4\n    /* \"#utility.yul\":8767:8782   */\n  and\n    /* \"#utility.yul\":8757:8782   */\n  swap2\n  pop\n    /* \"#utility.yul\":8670:8788   */\n  pop\n    /* \"#utility.yul\":8619:8788   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8793:9088   */\ntag_117:\n    /* \"#utility.yul\":8869:8873   */\n  0x00\n    /* \"#utility.yul\":9015:9044   */\n  tag_229\n    /* \"#utility.yul\":9040:9043   */\n  dup4\n    /* \"#utility.yul\":9034:9038   */\n  dup4\n    /* \"#utility.yul\":9015:9044   */\n  tag_116\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":9007:9044   */\n  swap2\n  pop\n    /* \"#utility.yul\":9077:9080   */\n  dup3\n    /* \"#utility.yul\":9074:9075   */\n  0x02\n    /* \"#utility.yul\":9070:9081   */\n  mul\n    /* \"#utility.yul\":9064:9068   */\n  dup3\n    /* \"#utility.yul\":9061:9082   */\n  or\n    /* \"#utility.yul\":9053:9082   */\n  swap1\n  pop\n    /* \"#utility.yul\":8793:9088   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9093:10488   */\ntag_9:\n    /* \"#utility.yul\":9210:9247   */\n  tag_231\n    /* \"#utility.yul\":9243:9246   */\n  dup3\n    /* \"#utility.yul\":9210:9247   */\n  tag_100\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":9312:9330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":9304:9310   */\n  dup2\n    /* \"#utility.yul\":9301:9331   */\n  gt\n    /* \"#utility.yul\":9298:9354   */\n  iszero\n  tag_232\n  jumpi\n    /* \"#utility.yul\":9334:9352   */\n  tag_233\n  tag_83\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":9298:9354   */\ntag_232:\n    /* \"#utility.yul\":9378:9416   */\n  tag_234\n    /* \"#utility.yul\":9410:9414   */\n  dup3\n    /* \"#utility.yul\":9404:9415   */\n  sload\n    /* \"#utility.yul\":9378:9416   */\n  tag_102\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":9463:9530   */\n  tag_235\n    /* \"#utility.yul\":9523:9529   */\n  dup3\n    /* \"#utility.yul\":9515:9521   */\n  dup3\n    /* \"#utility.yul\":9509:9513   */\n  dup6\n    /* \"#utility.yul\":9463:9530   */\n  tag_114\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":9557:9558   */\n  0x00\n    /* \"#utility.yul\":9581:9585   */\n  0x20\n    /* \"#utility.yul\":9568:9585   */\n  swap1\n  pop\n    /* \"#utility.yul\":9613:9615   */\n  0x1f\n    /* \"#utility.yul\":9605:9611   */\n  dup4\n    /* \"#utility.yul\":9602:9616   */\n  gt\n    /* \"#utility.yul\":9630:9631   */\n  0x01\n    /* \"#utility.yul\":9625:10243   */\n  dup2\n  eq\n  tag_237\n  jumpi\n    /* \"#utility.yul\":10287:10288   */\n  0x00\n    /* \"#utility.yul\":10304:10310   */\n  dup5\n    /* \"#utility.yul\":10301:10378   */\n  iszero\n  tag_238\n  jumpi\n    /* \"#utility.yul\":10353:10362   */\n  dup3\n    /* \"#utility.yul\":10348:10351   */\n  dup8\n    /* \"#utility.yul\":10344:10363   */\n  add\n    /* \"#utility.yul\":10338:10364   */\n  mload\n    /* \"#utility.yul\":10329:10364   */\n  swap1\n  pop\n    /* \"#utility.yul\":10301:10378   */\ntag_238:\n    /* \"#utility.yul\":10404:10471   */\n  tag_239\n    /* \"#utility.yul\":10464:10470   */\n  dup6\n    /* \"#utility.yul\":10457:10462   */\n  dup3\n    /* \"#utility.yul\":10404:10471   */\n  tag_117\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":10398:10402   */\n  dup7\n    /* \"#utility.yul\":10391:10472   */\n  sstore\n    /* \"#utility.yul\":10260:10482   */\n  pop\n    /* \"#utility.yul\":9595:10482   */\n  jump(tag_236)\n    /* \"#utility.yul\":9625:10243   */\ntag_237:\n    /* \"#utility.yul\":9677:9681   */\n  0x1f\n    /* \"#utility.yul\":9673:9682   */\n  not\n    /* \"#utility.yul\":9665:9671   */\n  dup5\n    /* \"#utility.yul\":9661:9683   */\n  and\n    /* \"#utility.yul\":9711:9748   */\n  tag_240\n    /* \"#utility.yul\":9743:9747   */\n  dup7\n    /* \"#utility.yul\":9711:9748   */\n  tag_103\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":9770:9771   */\n  0x00\n    /* \"#utility.yul\":9784:9992   */\ntag_241:\n    /* \"#utility.yul\":9798:9805   */\n  dup3\n    /* \"#utility.yul\":9795:9796   */\n  dup2\n    /* \"#utility.yul\":9792:9806   */\n  lt\n    /* \"#utility.yul\":9784:9992   */\n  iszero\n  tag_243\n  jumpi\n    /* \"#utility.yul\":9877:9886   */\n  dup5\n    /* \"#utility.yul\":9872:9875   */\n  dup10\n    /* \"#utility.yul\":9868:9887   */\n  add\n    /* \"#utility.yul\":9862:9888   */\n  mload\n    /* \"#utility.yul\":9854:9860   */\n  dup3\n    /* \"#utility.yul\":9847:9889   */\n  sstore\n    /* \"#utility.yul\":9928:9929   */\n  0x01\n    /* \"#utility.yul\":9920:9926   */\n  dup3\n    /* \"#utility.yul\":9916:9930   */\n  add\n    /* \"#utility.yul\":9906:9930   */\n  swap2\n  pop\n    /* \"#utility.yul\":9975:9977   */\n  0x20\n    /* \"#utility.yul\":9964:9973   */\n  dup6\n    /* \"#utility.yul\":9960:9978   */\n  add\n    /* \"#utility.yul\":9947:9978   */\n  swap5\n  pop\n    /* \"#utility.yul\":9821:9825   */\n  0x20\n    /* \"#utility.yul\":9818:9819   */\n  dup2\n    /* \"#utility.yul\":9814:9826   */\n  add\n    /* \"#utility.yul\":9809:9826   */\n  swap1\n  pop\n    /* \"#utility.yul\":9784:9992   */\n  jump(tag_241)\ntag_243:\n    /* \"#utility.yul\":10020:10026   */\n  dup7\n    /* \"#utility.yul\":10011:10018   */\n  dup4\n    /* \"#utility.yul\":10008:10027   */\n  lt\n    /* \"#utility.yul\":10005:10184   */\n  iszero\n  tag_244\n  jumpi\n    /* \"#utility.yul\":10078:10087   */\n  dup5\n    /* \"#utility.yul\":10073:10076   */\n  dup10\n    /* \"#utility.yul\":10069:10088   */\n  add\n    /* \"#utility.yul\":10063:10089   */\n  mload\n    /* \"#utility.yul\":10121:10169   */\n  tag_245\n    /* \"#utility.yul\":10163:10167   */\n  0x1f\n    /* \"#utility.yul\":10155:10161   */\n  dup10\n    /* \"#utility.yul\":10151:10168   */\n  and\n    /* \"#utility.yul\":10140:10149   */\n  dup3\n    /* \"#utility.yul\":10121:10169   */\n  tag_116\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":10113:10119   */\n  dup4\n    /* \"#utility.yul\":10106:10170   */\n  sstore\n    /* \"#utility.yul\":10028:10184   */\n  pop\n    /* \"#utility.yul\":10005:10184   */\ntag_244:\n    /* \"#utility.yul\":10230:10231   */\n  0x01\n    /* \"#utility.yul\":10226:10227   */\n  0x02\n    /* \"#utility.yul\":10218:10224   */\n  dup9\n    /* \"#utility.yul\":10214:10228   */\n  mul\n    /* \"#utility.yul\":10210:10232   */\n  add\n    /* \"#utility.yul\":10204:10208   */\n  dup9\n    /* \"#utility.yul\":10197:10233   */\n  sstore\n    /* \"#utility.yul\":9632:10243   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":9595:10482   */\ntag_236:\n  pop\n    /* \"#utility.yul\":9185:10488   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":9093:10488   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10494:10612   */\ntag_118:\n    /* \"#utility.yul\":10581:10605   */\n  tag_247\n    /* \"#utility.yul\":10599:10604   */\n  dup2\n    /* \"#utility.yul\":10581:10605   */\n  tag_91\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":10576:10579   */\n  dup3\n    /* \"#utility.yul\":10569:10606   */\n  mstore\n    /* \"#utility.yul\":10494:10612   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10618:10840   */\ntag_14:\n    /* \"#utility.yul\":10711:10715   */\n  0x00\n    /* \"#utility.yul\":10749:10751   */\n  0x20\n    /* \"#utility.yul\":10738:10747   */\n  dup3\n    /* \"#utility.yul\":10734:10752   */\n  add\n    /* \"#utility.yul\":10726:10752   */\n  swap1\n  pop\n    /* \"#utility.yul\":10762:10833   */\n  tag_249\n    /* \"#utility.yul\":10830:10831   */\n  0x00\n    /* \"#utility.yul\":10819:10828   */\n  dup4\n    /* \"#utility.yul\":10815:10832   */\n  add\n    /* \"#utility.yul\":10806:10812   */\n  dup5\n    /* \"#utility.yul\":10762:10833   */\n  tag_118\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":10618:10840   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10846:11015   */\ntag_119:\n    /* \"#utility.yul\":10930:10941   */\n  0x00\n    /* \"#utility.yul\":10964:10970   */\n  dup3\n    /* \"#utility.yul\":10959:10962   */\n  dup3\n    /* \"#utility.yul\":10952:10971   */\n  mstore\n    /* \"#utility.yul\":11004:11008   */\n  0x20\n    /* \"#utility.yul\":10999:11002   */\n  dup3\n    /* \"#utility.yul\":10995:11009   */\n  add\n    /* \"#utility.yul\":10980:11009   */\n  swap1\n  pop\n    /* \"#utility.yul\":10846:11015   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11021:11241   */\ntag_120:\n    /* \"#utility.yul\":11161:11195   */\n  0x4174206c65617374206f6e65207465616d206d656d6265722072657175697265\n    /* \"#utility.yul\":11157:11158   */\n  0x00\n    /* \"#utility.yul\":11149:11155   */\n  dup3\n    /* \"#utility.yul\":11145:11159   */\n  add\n    /* \"#utility.yul\":11138:11196   */\n  mstore\n    /* \"#utility.yul\":11230:11233   */\n  0x6400000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11225:11227   */\n  0x20\n    /* \"#utility.yul\":11217:11223   */\n  dup3\n    /* \"#utility.yul\":11213:11228   */\n  add\n    /* \"#utility.yul\":11206:11234   */\n  mstore\n    /* \"#utility.yul\":11021:11241   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11247:11613   */\ntag_121:\n    /* \"#utility.yul\":11389:11392   */\n  0x00\n    /* \"#utility.yul\":11410:11477   */\n  tag_253\n    /* \"#utility.yul\":11474:11476   */\n  0x21\n    /* \"#utility.yul\":11469:11472   */\n  dup4\n    /* \"#utility.yul\":11410:11477   */\n  tag_119\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":11403:11477   */\n  swap2\n  pop\n    /* \"#utility.yul\":11486:11579   */\n  tag_254\n    /* \"#utility.yul\":11575:11578   */\n  dup3\n    /* \"#utility.yul\":11486:11579   */\n  tag_120\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":11604:11606   */\n  0x40\n    /* \"#utility.yul\":11599:11602   */\n  dup3\n    /* \"#utility.yul\":11595:11607   */\n  add\n    /* \"#utility.yul\":11588:11607   */\n  swap1\n  pop\n    /* \"#utility.yul\":11247:11613   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11619:12038   */\ntag_20:\n    /* \"#utility.yul\":11785:11789   */\n  0x00\n    /* \"#utility.yul\":11823:11825   */\n  0x20\n    /* \"#utility.yul\":11812:11821   */\n  dup3\n    /* \"#utility.yul\":11808:11826   */\n  add\n    /* \"#utility.yul\":11800:11826   */\n  swap1\n  pop\n    /* \"#utility.yul\":11872:11881   */\n  dup2\n    /* \"#utility.yul\":11866:11870   */\n  dup2\n    /* \"#utility.yul\":11862:11882   */\n  sub\n    /* \"#utility.yul\":11858:11859   */\n  0x00\n    /* \"#utility.yul\":11847:11856   */\n  dup4\n    /* \"#utility.yul\":11843:11860   */\n  add\n    /* \"#utility.yul\":11836:11883   */\n  mstore\n    /* \"#utility.yul\":11900:12031   */\n  tag_256\n    /* \"#utility.yul\":12026:12030   */\n  dup2\n    /* \"#utility.yul\":11900:12031   */\n  tag_121\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":11892:12031   */\n  swap1\n  pop\n    /* \"#utility.yul\":11619:12038   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12044:12224   */\ntag_26:\n    /* \"#utility.yul\":12092:12169   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":12089:12090   */\n  0x00\n    /* \"#utility.yul\":12082:12170   */\n  mstore\n    /* \"#utility.yul\":12189:12193   */\n  0x32\n    /* \"#utility.yul\":12186:12187   */\n  0x04\n    /* \"#utility.yul\":12179:12194   */\n  mstore\n    /* \"#utility.yul\":12213:12217   */\n  0x24\n    /* \"#utility.yul\":12210:12211   */\n  0x00\n    /* \"#utility.yul\":12203:12218   */\n  revert\n    /* \"#utility.yul\":12230:12410   */\ntag_122:\n    /* \"#utility.yul\":12278:12355   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":12275:12276   */\n  0x00\n    /* \"#utility.yul\":12268:12356   */\n  mstore\n    /* \"#utility.yul\":12375:12379   */\n  0x11\n    /* \"#utility.yul\":12372:12373   */\n  0x04\n    /* \"#utility.yul\":12365:12380   */\n  mstore\n    /* \"#utility.yul\":12399:12403   */\n  0x24\n    /* \"#utility.yul\":12396:12397   */\n  0x00\n    /* \"#utility.yul\":12389:12404   */\n  revert\n    /* \"#utility.yul\":12416:12607   */\ntag_28:\n    /* \"#utility.yul\":12456:12459   */\n  0x00\n    /* \"#utility.yul\":12475:12495   */\n  tag_260\n    /* \"#utility.yul\":12493:12494   */\n  dup3\n    /* \"#utility.yul\":12475:12495   */\n  tag_94\n  jump\t// in\ntag_260:\n    /* \"#utility.yul\":12470:12495   */\n  swap2\n  pop\n    /* \"#utility.yul\":12509:12529   */\n  tag_261\n    /* \"#utility.yul\":12527:12528   */\n  dup4\n    /* \"#utility.yul\":12509:12529   */\n  tag_94\n  jump\t// in\ntag_261:\n    /* \"#utility.yul\":12504:12529   */\n  swap3\n  pop\n    /* \"#utility.yul\":12552:12553   */\n  dup3\n    /* \"#utility.yul\":12549:12550   */\n  dup3\n    /* \"#utility.yul\":12545:12554   */\n  add\n    /* \"#utility.yul\":12538:12554   */\n  swap1\n  pop\n    /* \"#utility.yul\":12573:12576   */\n  dup1\n    /* \"#utility.yul\":12570:12571   */\n  dup3\n    /* \"#utility.yul\":12567:12577   */\n  gt\n    /* \"#utility.yul\":12564:12600   */\n  iszero\n  tag_262\n  jumpi\n    /* \"#utility.yul\":12580:12598   */\n  tag_263\n  tag_122\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":12564:12600   */\ntag_262:\n    /* \"#utility.yul\":12416:12607   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12613:13023   */\ntag_33:\n    /* \"#utility.yul\":12653:12660   */\n  0x00\n    /* \"#utility.yul\":12676:12696   */\n  tag_265\n    /* \"#utility.yul\":12694:12695   */\n  dup3\n    /* \"#utility.yul\":12676:12696   */\n  tag_94\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":12671:12696   */\n  swap2\n  pop\n    /* \"#utility.yul\":12710:12730   */\n  tag_266\n    /* \"#utility.yul\":12728:12729   */\n  dup4\n    /* \"#utility.yul\":12710:12730   */\n  tag_94\n  jump\t// in\ntag_266:\n    /* \"#utility.yul\":12705:12730   */\n  swap3\n  pop\n    /* \"#utility.yul\":12765:12766   */\n  dup3\n    /* \"#utility.yul\":12762:12763   */\n  dup3\n    /* \"#utility.yul\":12758:12767   */\n  mul\n    /* \"#utility.yul\":12787:12817   */\n  tag_267\n    /* \"#utility.yul\":12805:12816   */\n  dup2\n    /* \"#utility.yul\":12787:12817   */\n  tag_94\n  jump\t// in\ntag_267:\n    /* \"#utility.yul\":12776:12817   */\n  swap2\n  pop\n    /* \"#utility.yul\":12966:12967   */\n  dup3\n    /* \"#utility.yul\":12957:12964   */\n  dup3\n    /* \"#utility.yul\":12953:12968   */\n  div\n    /* \"#utility.yul\":12950:12951   */\n  dup5\n    /* \"#utility.yul\":12947:12969   */\n  eq\n    /* \"#utility.yul\":12927:12928   */\n  dup4\n    /* \"#utility.yul\":12920:12929   */\n  iszero\n    /* \"#utility.yul\":12900:12983   */\n  or\n    /* \"#utility.yul\":12877:13016   */\n  tag_268\n  jumpi\n    /* \"#utility.yul\":12996:13014   */\n  tag_269\n  tag_122\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":12877:13016   */\ntag_268:\n    /* \"#utility.yul\":12661:13023   */\n  pop\n    /* \"#utility.yul\":12613:13023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13029:13209   */\ntag_123:\n    /* \"#utility.yul\":13077:13154   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":13074:13075   */\n  0x00\n    /* \"#utility.yul\":13067:13155   */\n  mstore\n    /* \"#utility.yul\":13174:13178   */\n  0x12\n    /* \"#utility.yul\":13171:13172   */\n  0x04\n    /* \"#utility.yul\":13164:13179   */\n  mstore\n    /* \"#utility.yul\":13198:13202   */\n  0x24\n    /* \"#utility.yul\":13195:13196   */\n  0x00\n    /* \"#utility.yul\":13188:13203   */\n  revert\n    /* \"#utility.yul\":13215:13400   */\ntag_35:\n    /* \"#utility.yul\":13255:13256   */\n  0x00\n    /* \"#utility.yul\":13272:13292   */\n  tag_272\n    /* \"#utility.yul\":13290:13291   */\n  dup3\n    /* \"#utility.yul\":13272:13292   */\n  tag_94\n  jump\t// in\ntag_272:\n    /* \"#utility.yul\":13267:13292   */\n  swap2\n  pop\n    /* \"#utility.yul\":13306:13326   */\n  tag_273\n    /* \"#utility.yul\":13324:13325   */\n  dup4\n    /* \"#utility.yul\":13306:13326   */\n  tag_94\n  jump\t// in\ntag_273:\n    /* \"#utility.yul\":13301:13326   */\n  swap3\n  pop\n    /* \"#utility.yul\":13345:13346   */\n  dup3\n    /* \"#utility.yul\":13335:13370   */\n  tag_274\n  jumpi\n    /* \"#utility.yul\":13350:13368   */\n  tag_275\n  tag_123\n  jump\t// in\ntag_275:\n    /* \"#utility.yul\":13335:13370   */\ntag_274:\n    /* \"#utility.yul\":13392:13393   */\n  dup3\n    /* \"#utility.yul\":13389:13390   */\n  dup3\n    /* \"#utility.yul\":13385:13394   */\n  div\n    /* \"#utility.yul\":13380:13394   */\n  swap1\n  pop\n    /* \"#utility.yul\":13215:13400   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13406:13626   */\ntag_124:\n    /* \"#utility.yul\":13546:13580   */\n  0x546f74616c20646973747269627574696f6e2065786365656473206d61726b65\n    /* \"#utility.yul\":13542:13543   */\n  0x00\n    /* \"#utility.yul\":13534:13540   */\n  dup3\n    /* \"#utility.yul\":13530:13544   */\n  add\n    /* \"#utility.yul\":13523:13581   */\n  mstore\n    /* \"#utility.yul\":13615:13618   */\n  0x7400000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":13610:13612   */\n  0x20\n    /* \"#utility.yul\":13602:13608   */\n  dup3\n    /* \"#utility.yul\":13598:13613   */\n  add\n    /* \"#utility.yul\":13591:13619   */\n  mstore\n    /* \"#utility.yul\":13406:13626   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13632:13998   */\ntag_125:\n    /* \"#utility.yul\":13774:13777   */\n  0x00\n    /* \"#utility.yul\":13795:13862   */\n  tag_278\n    /* \"#utility.yul\":13859:13861   */\n  0x21\n    /* \"#utility.yul\":13854:13857   */\n  dup4\n    /* \"#utility.yul\":13795:13862   */\n  tag_119\n  jump\t// in\ntag_278:\n    /* \"#utility.yul\":13788:13862   */\n  swap2\n  pop\n    /* \"#utility.yul\":13871:13964   */\n  tag_279\n    /* \"#utility.yul\":13960:13963   */\n  dup3\n    /* \"#utility.yul\":13871:13964   */\n  tag_124\n  jump\t// in\ntag_279:\n    /* \"#utility.yul\":13989:13991   */\n  0x40\n    /* \"#utility.yul\":13984:13987   */\n  dup3\n    /* \"#utility.yul\":13980:13992   */\n  add\n    /* \"#utility.yul\":13973:13992   */\n  swap1\n  pop\n    /* \"#utility.yul\":13632:13998   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14004:14423   */\ntag_52:\n    /* \"#utility.yul\":14170:14174   */\n  0x00\n    /* \"#utility.yul\":14208:14210   */\n  0x20\n    /* \"#utility.yul\":14197:14206   */\n  dup3\n    /* \"#utility.yul\":14193:14211   */\n  add\n    /* \"#utility.yul\":14185:14211   */\n  swap1\n  pop\n    /* \"#utility.yul\":14257:14266   */\n  dup2\n    /* \"#utility.yul\":14251:14255   */\n  dup2\n    /* \"#utility.yul\":14247:14267   */\n  sub\n    /* \"#utility.yul\":14243:14244   */\n  0x00\n    /* \"#utility.yul\":14232:14241   */\n  dup4\n    /* \"#utility.yul\":14228:14245   */\n  add\n    /* \"#utility.yul\":14221:14268   */\n  mstore\n    /* \"#utility.yul\":14285:14416   */\n  tag_281\n    /* \"#utility.yul\":14411:14415   */\n  dup2\n    /* \"#utility.yul\":14285:14416   */\n  tag_125\n  jump\t// in\ntag_281:\n    /* \"#utility.yul\":14277:14416   */\n  swap1\n  pop\n    /* \"#utility.yul\":14004:14423   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14429:14623   */\ntag_55:\n    /* \"#utility.yul\":14469:14473   */\n  0x00\n    /* \"#utility.yul\":14489:14509   */\n  tag_283\n    /* \"#utility.yul\":14507:14508   */\n  dup3\n    /* \"#utility.yul\":14489:14509   */\n  tag_94\n  jump\t// in\ntag_283:\n    /* \"#utility.yul\":14484:14509   */\n  swap2\n  pop\n    /* \"#utility.yul\":14523:14543   */\n  tag_284\n    /* \"#utility.yul\":14541:14542   */\n  dup4\n    /* \"#utility.yul\":14523:14543   */\n  tag_94\n  jump\t// in\ntag_284:\n    /* \"#utility.yul\":14518:14543   */\n  swap3\n  pop\n    /* \"#utility.yul\":14567:14568   */\n  dup3\n    /* \"#utility.yul\":14564:14565   */\n  dup3\n    /* \"#utility.yul\":14560:14569   */\n  sub\n    /* \"#utility.yul\":14552:14569   */\n  swap1\n  pop\n    /* \"#utility.yul\":14591:14592   */\n  dup2\n    /* \"#utility.yul\":14585:14589   */\n  dup2\n    /* \"#utility.yul\":14582:14593   */\n  gt\n    /* \"#utility.yul\":14579:14616   */\n  iszero\n  tag_285\n  jumpi\n    /* \"#utility.yul\":14596:14614   */\n  tag_286\n  tag_122\n  jump\t// in\ntag_286:\n    /* \"#utility.yul\":14579:14616   */\ntag_285:\n    /* \"#utility.yul\":14429:14623   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14629:14747   */\ntag_126:\n    /* \"#utility.yul\":14716:14740   */\n  tag_288\n    /* \"#utility.yul\":14734:14739   */\n  dup2\n    /* \"#utility.yul\":14716:14740   */\n  tag_94\n  jump\t// in\ntag_288:\n    /* \"#utility.yul\":14711:14714   */\n  dup3\n    /* \"#utility.yul\":14704:14741   */\n  mstore\n    /* \"#utility.yul\":14629:14747   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14753:15195   */\ntag_73:\n    /* \"#utility.yul\":14902:14906   */\n  0x00\n    /* \"#utility.yul\":14940:14942   */\n  0x60\n    /* \"#utility.yul\":14929:14938   */\n  dup3\n    /* \"#utility.yul\":14925:14943   */\n  add\n    /* \"#utility.yul\":14917:14943   */\n  swap1\n  pop\n    /* \"#utility.yul\":14953:15024   */\n  tag_290\n    /* \"#utility.yul\":15021:15022   */\n  0x00\n    /* \"#utility.yul\":15010:15019   */\n  dup4\n    /* \"#utility.yul\":15006:15023   */\n  add\n    /* \"#utility.yul\":14997:15003   */\n  dup7\n    /* \"#utility.yul\":14953:15024   */\n  tag_118\n  jump\t// in\ntag_290:\n    /* \"#utility.yul\":15034:15106   */\n  tag_291\n    /* \"#utility.yul\":15102:15104   */\n  0x20\n    /* \"#utility.yul\":15091:15100   */\n  dup4\n    /* \"#utility.yul\":15087:15105   */\n  add\n    /* \"#utility.yul\":15078:15084   */\n  dup6\n    /* \"#utility.yul\":15034:15106   */\n  tag_126\n  jump\t// in\ntag_291:\n    /* \"#utility.yul\":15116:15188   */\n  tag_292\n    /* \"#utility.yul\":15184:15186   */\n  0x40\n    /* \"#utility.yul\":15173:15182   */\n  dup4\n    /* \"#utility.yul\":15169:15187   */\n  add\n    /* \"#utility.yul\":15160:15166   */\n  dup5\n    /* \"#utility.yul\":15116:15188   */\n  tag_126\n  jump\t// in\ntag_292:\n    /* \"#utility.yul\":14753:15195   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15201:15423   */\ntag_77:\n    /* \"#utility.yul\":15294:15298   */\n  0x00\n    /* \"#utility.yul\":15332:15334   */\n  0x20\n    /* \"#utility.yul\":15321:15330   */\n  dup3\n    /* \"#utility.yul\":15317:15335   */\n  add\n    /* \"#utility.yul\":15309:15335   */\n  swap1\n  pop\n    /* \"#utility.yul\":15345:15416   */\n  tag_294\n    /* \"#utility.yul\":15413:15414   */\n  0x00\n    /* \"#utility.yul\":15402:15411   */\n  dup4\n    /* \"#utility.yul\":15398:15415   */\n  add\n    /* \"#utility.yul\":15389:15395   */\n  dup5\n    /* \"#utility.yul\":15345:15416   */\n  tag_126\n  jump\t// in\ntag_294:\n    /* \"#utility.yul\":15201:15423   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CC/CCToken.sol\":2608:6286  contract CSYDToken is ERC20, Ownable {... */\ntag_60:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CC/CCToken.sol\":2608:6286  contract CSYDToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x88e56ec6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xbdd3d825\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xbdd3d825\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xeb91d37e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xefded147\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x88e56ec6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x313ce567\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x35928998\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x76ae9b2d\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x19ca43ab\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CC/CCToken.sol\":6148:6283  function getTeamMemberCount() public view returns (uint256) {... */\n    tag_6:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CC/CCToken.sol\":5173:5367  function transferFrom(address sender, address recipient, uint256 amount) public override teamLocked(amount) returns (bool) {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CC/CCToken.sol\":2737:2792  uint256 public constant TEAM_LOCK_PERIOD = 3 * 365 days */\n    tag_9:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/CC/CCToken.sol\":3027:3057  uint256 public teamLockedUntil */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CC/CCToken.sol\":5812:6140  function getTeamMember(uint256 index) public view returns (address, uint256) {... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CC/CCToken.sol\":2656:2715  uint256 public constant TOTAL_SUPPLY = 187_500_000 * 10**18 */\n    tag_15:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CC/CCToken.sol\":4973:5135  function transfer(address recipient, uint256 amount) public override teamLocked(amount) returns (bool) {... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CC/CCToken.sol\":3064:3090  address public uniswapPool */\n    tag_18:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CC/CCToken.sol\":5375:5657  function getCurrentPrice() public view returns (uint256 price) {... */\n    tag_20:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CC/CCToken.sol\":5665:5804  function getTeamMembers() public view returns (TeamMember[] memory) {... */\n    tag_21:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_105\n      jump\t// in\n    tag_106:\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_108\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_107)\n    tag_108:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_109:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_109\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_114\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CC/CCToken.sol\":6148:6283  function getTeamMemberCount() public view returns (uint256) {... */\n    tag_41:\n        /* \"contracts/CC/CCToken.sol\":6199:6206  uint256 */\n      0x00\n        /* \"contracts/CC/CCToken.sol\":6226:6237  teamMembers */\n      0x06\n        /* \"contracts/CC/CCToken.sol\":6226:6244  teamMembers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/CC/CCToken.sol\":6219:6244  return teamMembers.length */\n      swap1\n      pop\n        /* \"contracts/CC/CCToken.sol\":6148:6283  function getTeamMemberCount() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CC/CCToken.sol\":5173:5367  function transferFrom(address sender, address recipient, uint256 amount) public override teamLocked(amount) returns (bool) {... */\n    tag_46:\n        /* \"contracts/CC/CCToken.sol\":5290:5294  bool */\n      0x00\n        /* \"contracts/CC/CCToken.sol\":5273:5279  amount */\n      dup2\n        /* \"contracts/CC/CCToken.sol\":4847:4862  teamLockedUntil */\n      sload(0x07)\n        /* \"contracts/CC/CCToken.sol\":4828:4843  block.timestamp */\n      timestamp\n        /* \"contracts/CC/CCToken.sol\":4828:4862  block.timestamp >= teamLockedUntil */\n      lt\n      iszero\n        /* \"contracts/CC/CCToken.sol\":4828:4897  block.timestamp >= teamLockedUntil || balanceOf(msg.sender) >= amount */\n      dup1\n      tag_118\n      jumpi\n      pop\n        /* \"contracts/CC/CCToken.sol\":4891:4897  amount */\n      dup1\n        /* \"contracts/CC/CCToken.sol\":4866:4887  balanceOf(msg.sender) */\n      tag_119\n        /* \"contracts/CC/CCToken.sol\":4876:4886  msg.sender */\n      caller\n        /* \"contracts/CC/CCToken.sol\":4866:4875  balanceOf */\n      tag_58\n        /* \"contracts/CC/CCToken.sol\":4866:4887  balanceOf(msg.sender) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/CC/CCToken.sol\":4866:4897  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/CC/CCToken.sol\":4828:4897  block.timestamp >= teamLockedUntil || balanceOf(msg.sender) >= amount */\n    tag_118:\n        /* \"contracts/CC/CCToken.sol\":4820:4924  require(block.timestamp >= teamLockedUntil || balanceOf(msg.sender) >= amount, \"Team tokens are locked\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/CC/CCToken.sol\":5314:5359  super.transferFrom(sender, recipient, amount) */\n      tag_124\n        /* \"contracts/CC/CCToken.sol\":5333:5339  sender */\n      dup6\n        /* \"contracts/CC/CCToken.sol\":5341:5350  recipient */\n      dup6\n        /* \"contracts/CC/CCToken.sol\":5352:5358  amount */\n      dup6\n        /* \"contracts/CC/CCToken.sol\":5314:5332  super.transferFrom */\n      tag_125\n        /* \"contracts/CC/CCToken.sol\":5314:5359  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/CC/CCToken.sol\":5307:5359  return super.transferFrom(sender, recipient, amount) */\n      swap2\n      pop\n        /* \"contracts/CC/CCToken.sol\":5173:5367  function transferFrom(address sender, address recipient, uint256 amount) public override teamLocked(amount) returns (bool) {... */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CC/CCToken.sol\":2737:2792  uint256 public constant TEAM_LOCK_PERIOD = 3 * 365 days */\n    tag_53:\n        /* \"contracts/CC/CCToken.sol\":2780:2792  3 * 365 days */\n      0x05a39a80\n        /* \"contracts/CC/CCToken.sol\":2737:2792  uint256 public constant TEAM_LOCK_PERIOD = 3 * 365 days */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_132\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_133\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_132:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CC/CCToken.sol\":3027:3057  uint256 public teamLockedUntil */\n    tag_63:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/CC/CCToken.sol\":5812:6140  function getTeamMember(uint256 index) public view returns (address, uint256) {... */\n    tag_68:\n        /* \"contracts/CC/CCToken.sol\":5871:5878  address */\n      0x00\n        /* \"contracts/CC/CCToken.sol\":5880:5887  uint256 */\n      0x00\n        /* \"contracts/CC/CCToken.sol\":5916:5927  teamMembers */\n      0x06\n        /* \"contracts/CC/CCToken.sol\":5916:5934  teamMembers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/CC/CCToken.sol\":5908:5913  index */\n      dup4\n        /* \"contracts/CC/CCToken.sol\":5908:5934  index < teamMembers.length */\n      lt\n        /* \"contracts/CC/CCToken.sol\":5900:5958  require(index < teamMembers.length, \"Index out of bounds\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/CC/CCToken.sol\":5991:6015  TeamMember memory member */\n      0x00\n        /* \"contracts/CC/CCToken.sol\":6018:6029  teamMembers */\n      0x06\n        /* \"contracts/CC/CCToken.sol\":6030:6035  index */\n      dup5\n        /* \"contracts/CC/CCToken.sol\":6018:6036  teamMembers[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_138\n      jumpi\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n    tag_138:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/CC/CCToken.sol\":5991:6036  TeamMember memory member = teamMembers[index] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CC/CCToken.sol\":6055:6061  member */\n      dup1\n        /* \"contracts/CC/CCToken.sol\":6055:6075  member.memberAddress */\n      0x00\n      add\n      mload\n        /* \"contracts/CC/CCToken.sol\":6077:6083  member */\n      dup2\n        /* \"contracts/CC/CCToken.sol\":6077:6100  member.investmentAmount */\n      0x20\n      add\n      mload\n        /* \"contracts/CC/CCToken.sol\":6047:6101  return (member.memberAddress, member.investmentAmount) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/CC/CCToken.sol\":5812:6140  function getTeamMember(uint256 index) public view returns (address, uint256) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CC/CCToken.sol\":2656:2715  uint256 public constant TOTAL_SUPPLY = 187_500_000 * 10**18 */\n    tag_76:\n        /* \"contracts/CC/CCToken.sol\":2695:2715  187_500_000 * 10**18 */\n      0x9b18ab5df7180b6b800000\n        /* \"contracts/CC/CCToken.sol\":2656:2715  uint256 public constant TOTAL_SUPPLY = 187_500_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_105\n      jump\t// in\n    tag_144:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_105\n      jump\t// in\n    tag_145:\n      dup1\n      iszero\n      tag_146\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_147\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_146)\n    tag_147:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_148:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_148\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CC/CCToken.sol\":4973:5135  function transfer(address recipient, uint256 amount) public override teamLocked(amount) returns (bool) {... */\n    tag_83:\n        /* \"contracts/CC/CCToken.sol\":5070:5074  bool */\n      0x00\n        /* \"contracts/CC/CCToken.sol\":5053:5059  amount */\n      dup2\n        /* \"contracts/CC/CCToken.sol\":4847:4862  teamLockedUntil */\n      sload(0x07)\n        /* \"contracts/CC/CCToken.sol\":4828:4843  block.timestamp */\n      timestamp\n        /* \"contracts/CC/CCToken.sol\":4828:4862  block.timestamp >= teamLockedUntil */\n      lt\n      iszero\n        /* \"contracts/CC/CCToken.sol\":4828:4897  block.timestamp >= teamLockedUntil || balanceOf(msg.sender) >= amount */\n      dup1\n      tag_150\n      jumpi\n      pop\n        /* \"contracts/CC/CCToken.sol\":4891:4897  amount */\n      dup1\n        /* \"contracts/CC/CCToken.sol\":4866:4887  balanceOf(msg.sender) */\n      tag_151\n        /* \"contracts/CC/CCToken.sol\":4876:4886  msg.sender */\n      caller\n        /* \"contracts/CC/CCToken.sol\":4866:4875  balanceOf */\n      tag_58\n        /* \"contracts/CC/CCToken.sol\":4866:4887  balanceOf(msg.sender) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/CC/CCToken.sol\":4866:4897  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/CC/CCToken.sol\":4828:4897  block.timestamp >= teamLockedUntil || balanceOf(msg.sender) >= amount */\n    tag_150:\n        /* \"contracts/CC/CCToken.sol\":4820:4924  require(block.timestamp >= teamLockedUntil || balanceOf(msg.sender) >= amount, \"Team tokens are locked\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_122\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/CC/CCToken.sol\":5094:5127  super.transfer(recipient, amount) */\n      tag_155\n        /* \"contracts/CC/CCToken.sol\":5109:5118  recipient */\n      dup5\n        /* \"contracts/CC/CCToken.sol\":5120:5126  amount */\n      dup5\n        /* \"contracts/CC/CCToken.sol\":5094:5108  super.transfer */\n      tag_156\n        /* \"contracts/CC/CCToken.sol\":5094:5127  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/CC/CCToken.sol\":5087:5127  return super.transfer(recipient, amount) */\n      swap2\n      pop\n        /* \"contracts/CC/CCToken.sol\":4973:5135  function transfer(address recipient, uint256 amount) public override teamLocked(amount) returns (bool) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CC/CCToken.sol\":3064:3090  address public uniswapPool */\n    tag_86:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CC/CCToken.sol\":5375:5657  function getCurrentPrice() public view returns (uint256 price) {... */\n    tag_94:\n        /* \"contracts/CC/CCToken.sol\":5423:5436  uint256 price */\n      0x00\n        /* \"contracts/CC/CCToken.sol\":5449:5468  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/CC/CCToken.sol\":5486:5497  uniswapPool */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CC/CCToken.sol\":5449:5498  IUniswapV3Pool pool = IUniswapV3Pool(uniswapPool) */\n      swap1\n      pop\n        /* \"contracts/CC/CCToken.sol\":5510:5530  uint160 sqrtPriceX96 */\n      0x00\n        /* \"contracts/CC/CCToken.sol\":5546:5550  pool */\n      dup2\n        /* \"contracts/CC/CCToken.sol\":5546:5556  pool.slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/CC/CCToken.sol\":5546:5558  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"contracts/CC/CCToken.sol\":5509:5558  (uint160 sqrtPriceX96, , , , , , ) = pool.slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CC/CCToken.sol\":5626:5632  2**192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"contracts/CC/CCToken.sol\":5609:5621  sqrtPriceX96 */\n      dup2\n        /* \"contracts/CC/CCToken.sol\":5601:5622  uint256(sqrtPriceX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CC/CCToken.sol\":5585:5597  sqrtPriceX96 */\n      dup3\n        /* \"contracts/CC/CCToken.sol\":5577:5598  uint256(sqrtPriceX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CC/CCToken.sol\":5577:5622  uint256(sqrtPriceX96) * uint256(sqrtPriceX96) */\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"contracts/CC/CCToken.sol\":5577:5633  uint256(sqrtPriceX96) * uint256(sqrtPriceX96) / (2**192) */\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"contracts/CC/CCToken.sol\":5569:5633  price = uint256(sqrtPriceX96) * uint256(sqrtPriceX96) / (2**192) */\n      swap3\n      pop\n        /* \"contracts/CC/CCToken.sol\":5438:5657  {... */\n      pop\n      pop\n        /* \"contracts/CC/CCToken.sol\":5375:5657  function getCurrentPrice() public view returns (uint256 price) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CC/CCToken.sol\":5665:5804  function getTeamMembers() public view returns (TeamMember[] memory) {... */\n    tag_97:\n        /* \"contracts/CC/CCToken.sol\":5712:5731  TeamMember[] memory */\n      0x60\n        /* \"contracts/CC/CCToken.sol\":5751:5762  teamMembers */\n      0x06\n        /* \"contracts/CC/CCToken.sol\":5744:5762  return teamMembers */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_168:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_169\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_168)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CC/CCToken.sol\":5665:5804  function getTeamMembers() public view returns (TeamMember[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_172\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_172:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_174\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_174:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_176\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_133\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_176:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_114:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_179\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_180\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_179:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_182\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_183\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_184\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_183:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_185\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_186\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_185:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_130:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_188\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_189\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_189:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_190\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_191\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_190:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_195\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_196\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_186\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_196:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_180:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_198:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_200:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_203\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_202:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_184:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_205\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_91\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_205:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_207:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_210\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_180\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_210:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_206:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_186:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_212\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_212:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_214:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_216\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_217\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_217:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_222)\n    tag_219:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_223:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_222:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_226)\n    tag_225:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_226:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_228:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_229:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_230:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_231:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_232:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_283\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_228\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":711:782   */\n      tag_284\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_229\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_285\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_230\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":881:910   */\n      tag_286\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_231\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_29:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_288\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_232\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_234:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_236:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_237:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_294\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_236\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_238:\n        /* \"#utility.yul\":1876:1900   */\n      tag_296\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_237\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_297:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_239:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_299\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_238\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_240:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_241:\n        /* \"#utility.yul\":2232:2256   */\n      tag_302\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_240\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_303:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_242:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_305\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_241\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_32:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_308\n      tag_234\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2525:2644   */\n    tag_307:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_309\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_239\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_310\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_242\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_243:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_244:\n        /* \"#utility.yul\":3089:3110   */\n      tag_313\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_243\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_35:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_315\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_244\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_245:\n        /* \"#utility.yul\":3426:3450   */\n      tag_317\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_240\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_39:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_319\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_245\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_45:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_322\n      tag_234\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3801:3920   */\n    tag_321:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_323\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_239\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_324\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_239\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_325\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_242\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_246:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_247:\n        /* \"#utility.yul\":4491:4513   */\n      tag_328\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_246\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_51:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_330\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_247\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_57:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_333\n      tag_234\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4822:4941   */\n    tag_332:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_334\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_239\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_67:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_337\n      tag_234\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5157:5276   */\n    tag_336:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_338\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_242\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_248:\n        /* \"#utility.yul\":5503:5527   */\n      tag_340\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_237\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5872   */\n    tag_70:\n        /* \"#utility.yul\":5661:5665   */\n      0x00\n        /* \"#utility.yul\":5699:5701   */\n      0x40\n        /* \"#utility.yul\":5688:5697   */\n      dup3\n        /* \"#utility.yul\":5684:5702   */\n      add\n        /* \"#utility.yul\":5676:5702   */\n      swap1\n      pop\n        /* \"#utility.yul\":5712:5783   */\n      tag_342\n        /* \"#utility.yul\":5780:5781   */\n      0x00\n        /* \"#utility.yul\":5769:5778   */\n      dup4\n        /* \"#utility.yul\":5765:5782   */\n      add\n        /* \"#utility.yul\":5756:5762   */\n      dup6\n        /* \"#utility.yul\":5712:5783   */\n      tag_248\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5793:5865   */\n      tag_343\n        /* \"#utility.yul\":5861:5863   */\n      0x20\n        /* \"#utility.yul\":5850:5859   */\n      dup4\n        /* \"#utility.yul\":5846:5864   */\n      add\n        /* \"#utility.yul\":5837:5843   */\n      dup5\n        /* \"#utility.yul\":5793:5865   */\n      tag_245\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5540:5872   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5878:6100   */\n    tag_74:\n        /* \"#utility.yul\":5971:5975   */\n      0x00\n        /* \"#utility.yul\":6009:6011   */\n      0x20\n        /* \"#utility.yul\":5998:6007   */\n      dup3\n        /* \"#utility.yul\":5994:6012   */\n      add\n        /* \"#utility.yul\":5986:6012   */\n      swap1\n      pop\n        /* \"#utility.yul\":6022:6093   */\n      tag_345\n        /* \"#utility.yul\":6090:6091   */\n      0x00\n        /* \"#utility.yul\":6079:6088   */\n      dup4\n        /* \"#utility.yul\":6075:6092   */\n      add\n        /* \"#utility.yul\":6066:6072   */\n      dup5\n        /* \"#utility.yul\":6022:6093   */\n      tag_248\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":5878:6100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6106:6580   */\n    tag_90:\n        /* \"#utility.yul\":6174:6180   */\n      0x00\n        /* \"#utility.yul\":6182:6188   */\n      0x00\n        /* \"#utility.yul\":6231:6233   */\n      0x40\n        /* \"#utility.yul\":6219:6228   */\n      dup4\n        /* \"#utility.yul\":6210:6217   */\n      dup6\n        /* \"#utility.yul\":6206:6229   */\n      sub\n        /* \"#utility.yul\":6202:6234   */\n      slt\n        /* \"#utility.yul\":6199:6318   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":6237:6316   */\n      tag_348\n      tag_234\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6199:6318   */\n    tag_347:\n        /* \"#utility.yul\":6357:6358   */\n      0x00\n        /* \"#utility.yul\":6382:6435   */\n      tag_349\n        /* \"#utility.yul\":6427:6434   */\n      dup6\n        /* \"#utility.yul\":6418:6424   */\n      dup3\n        /* \"#utility.yul\":6407:6416   */\n      dup7\n        /* \"#utility.yul\":6403:6425   */\n      add\n        /* \"#utility.yul\":6382:6435   */\n      tag_239\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":6372:6435   */\n      swap3\n      pop\n        /* \"#utility.yul\":6328:6445   */\n      pop\n        /* \"#utility.yul\":6484:6486   */\n      0x20\n        /* \"#utility.yul\":6510:6563   */\n      tag_350\n        /* \"#utility.yul\":6555:6562   */\n      dup6\n        /* \"#utility.yul\":6546:6552   */\n      dup3\n        /* \"#utility.yul\":6535:6544   */\n      dup7\n        /* \"#utility.yul\":6531:6553   */\n      add\n        /* \"#utility.yul\":6510:6563   */\n      tag_239\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6500:6563   */\n      swap2\n      pop\n        /* \"#utility.yul\":6455:6573   */\n      pop\n        /* \"#utility.yul\":6106:6580   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6586:6727   */\n    tag_249:\n        /* \"#utility.yul\":6680:6686   */\n      0x00\n        /* \"#utility.yul\":6714:6719   */\n      dup2\n        /* \"#utility.yul\":6708:6720   */\n      mload\n        /* \"#utility.yul\":6698:6720   */\n      swap1\n      pop\n        /* \"#utility.yul\":6586:6727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6733:6944   */\n    tag_250:\n        /* \"#utility.yul\":6859:6870   */\n      0x00\n        /* \"#utility.yul\":6893:6899   */\n      dup3\n        /* \"#utility.yul\":6888:6891   */\n      dup3\n        /* \"#utility.yul\":6881:6900   */\n      mstore\n        /* \"#utility.yul\":6933:6937   */\n      0x20\n        /* \"#utility.yul\":6928:6931   */\n      dup3\n        /* \"#utility.yul\":6924:6938   */\n      add\n        /* \"#utility.yul\":6909:6938   */\n      swap1\n      pop\n        /* \"#utility.yul\":6733:6944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6950:7109   */\n    tag_251:\n        /* \"#utility.yul\":7044:7048   */\n      0x00\n        /* \"#utility.yul\":7067:7070   */\n      dup2\n        /* \"#utility.yul\":7059:7070   */\n      swap1\n      pop\n        /* \"#utility.yul\":7097:7101   */\n      0x20\n        /* \"#utility.yul\":7092:7095   */\n      dup3\n        /* \"#utility.yul\":7088:7102   */\n      add\n        /* \"#utility.yul\":7080:7102   */\n      swap1\n      pop\n        /* \"#utility.yul\":6950:7109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7115:7223   */\n    tag_252:\n        /* \"#utility.yul\":7192:7216   */\n      tag_355\n        /* \"#utility.yul\":7210:7215   */\n      dup2\n        /* \"#utility.yul\":7192:7216   */\n      tag_237\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7187:7190   */\n      dup3\n        /* \"#utility.yul\":7180:7217   */\n      mstore\n        /* \"#utility.yul\":7115:7223   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7229:7337   */\n    tag_253:\n        /* \"#utility.yul\":7306:7330   */\n      tag_357\n        /* \"#utility.yul\":7324:7329   */\n      dup2\n        /* \"#utility.yul\":7306:7330   */\n      tag_240\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7301:7304   */\n      dup3\n        /* \"#utility.yul\":7294:7331   */\n      mstore\n        /* \"#utility.yul\":7229:7337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7409:7931   */\n    tag_254:\n        /* \"#utility.yul\":7550:7554   */\n      0x40\n        /* \"#utility.yul\":7545:7548   */\n      dup3\n        /* \"#utility.yul\":7541:7555   */\n      add\n        /* \"#utility.yul\":7646:7650   */\n      0x00\n        /* \"#utility.yul\":7639:7644   */\n      dup3\n        /* \"#utility.yul\":7635:7651   */\n      add\n        /* \"#utility.yul\":7629:7652   */\n      mload\n        /* \"#utility.yul\":7665:7728   */\n      tag_359\n        /* \"#utility.yul\":7722:7726   */\n      0x00\n        /* \"#utility.yul\":7717:7720   */\n      dup6\n        /* \"#utility.yul\":7713:7727   */\n      add\n        /* \"#utility.yul\":7699:7711   */\n      dup3\n        /* \"#utility.yul\":7665:7728   */\n      tag_252\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7565:7738   */\n      pop\n        /* \"#utility.yul\":7832:7836   */\n      0x20\n        /* \"#utility.yul\":7825:7830   */\n      dup3\n        /* \"#utility.yul\":7821:7837   */\n      add\n        /* \"#utility.yul\":7815:7838   */\n      mload\n        /* \"#utility.yul\":7851:7914   */\n      tag_360\n        /* \"#utility.yul\":7908:7912   */\n      0x20\n        /* \"#utility.yul\":7903:7906   */\n      dup6\n        /* \"#utility.yul\":7899:7913   */\n      add\n        /* \"#utility.yul\":7885:7897   */\n      dup3\n        /* \"#utility.yul\":7851:7914   */\n      tag_253\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":7748:7924   */\n      pop\n        /* \"#utility.yul\":7519:7931   */\n      pop\n        /* \"#utility.yul\":7409:7931   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7937:8224   */\n    tag_255:\n        /* \"#utility.yul\":8060:8070   */\n      0x00\n        /* \"#utility.yul\":8081:8181   */\n      tag_362\n        /* \"#utility.yul\":8177:8180   */\n      dup4\n        /* \"#utility.yul\":8169:8175   */\n      dup4\n        /* \"#utility.yul\":8081:8181   */\n      tag_254\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8213:8217   */\n      0x40\n        /* \"#utility.yul\":8208:8211   */\n      dup4\n        /* \"#utility.yul\":8204:8218   */\n      add\n        /* \"#utility.yul\":8190:8218   */\n      swap1\n      pop\n        /* \"#utility.yul\":7937:8224   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8230:8370   */\n    tag_256:\n        /* \"#utility.yul\":8327:8331   */\n      0x00\n        /* \"#utility.yul\":8359:8363   */\n      0x20\n        /* \"#utility.yul\":8354:8357   */\n      dup3\n        /* \"#utility.yul\":8350:8364   */\n      add\n        /* \"#utility.yul\":8342:8364   */\n      swap1\n      pop\n        /* \"#utility.yul\":8230:8370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8446:9394   */\n    tag_257:\n        /* \"#utility.yul\":8619:8622   */\n      0x00\n        /* \"#utility.yul\":8648:8729   */\n      tag_365\n        /* \"#utility.yul\":8723:8728   */\n      dup3\n        /* \"#utility.yul\":8648:8729   */\n      tag_249\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":8745:8858   */\n      tag_366\n        /* \"#utility.yul\":8851:8857   */\n      dup2\n        /* \"#utility.yul\":8846:8849   */\n      dup6\n        /* \"#utility.yul\":8745:8858   */\n      tag_250\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8738:8858   */\n      swap4\n      pop\n        /* \"#utility.yul\":8882:8965   */\n      tag_367\n        /* \"#utility.yul\":8959:8964   */\n      dup4\n        /* \"#utility.yul\":8882:8965   */\n      tag_251\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8988:8995   */\n      dup1\n        /* \"#utility.yul\":9019:9020   */\n      0x00\n        /* \"#utility.yul\":9004:9369   */\n    tag_368:\n        /* \"#utility.yul\":9029:9035   */\n      dup4\n        /* \"#utility.yul\":9026:9027   */\n      dup2\n        /* \"#utility.yul\":9023:9036   */\n      lt\n        /* \"#utility.yul\":9004:9369   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":9105:9111   */\n      dup2\n        /* \"#utility.yul\":9099:9112   */\n      mload\n        /* \"#utility.yul\":9132:9249   */\n      tag_371\n        /* \"#utility.yul\":9245:9248   */\n      dup9\n        /* \"#utility.yul\":9230:9243   */\n      dup3\n        /* \"#utility.yul\":9132:9249   */\n      tag_255\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":9125:9249   */\n      swap8\n      pop\n        /* \"#utility.yul\":9272:9359   */\n      tag_372\n        /* \"#utility.yul\":9352:9358   */\n      dup4\n        /* \"#utility.yul\":9272:9359   */\n      tag_256\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9262:9359   */\n      swap3\n      pop\n        /* \"#utility.yul\":9064:9369   */\n      pop\n        /* \"#utility.yul\":9051:9052   */\n      0x01\n        /* \"#utility.yul\":9048:9049   */\n      dup2\n        /* \"#utility.yul\":9044:9053   */\n      add\n        /* \"#utility.yul\":9039:9053   */\n      swap1\n      pop\n        /* \"#utility.yul\":9004:9369   */\n      jump(tag_368)\n    tag_370:\n        /* \"#utility.yul\":9008:9022   */\n      pop\n        /* \"#utility.yul\":9385:9388   */\n      dup6\n        /* \"#utility.yul\":9378:9388   */\n      swap4\n      pop\n        /* \"#utility.yul\":8624:9394   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8446:9394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9400:9881   */\n    tag_99:\n        /* \"#utility.yul\":9597:9601   */\n      0x00\n        /* \"#utility.yul\":9635:9637   */\n      0x20\n        /* \"#utility.yul\":9624:9633   */\n      dup3\n        /* \"#utility.yul\":9620:9638   */\n      add\n        /* \"#utility.yul\":9612:9638   */\n      swap1\n      pop\n        /* \"#utility.yul\":9684:9693   */\n      dup2\n        /* \"#utility.yul\":9678:9682   */\n      dup2\n        /* \"#utility.yul\":9674:9694   */\n      sub\n        /* \"#utility.yul\":9670:9671   */\n      0x00\n        /* \"#utility.yul\":9659:9668   */\n      dup4\n        /* \"#utility.yul\":9655:9672   */\n      add\n        /* \"#utility.yul\":9648:9695   */\n      mstore\n        /* \"#utility.yul\":9712:9874   */\n      tag_374\n        /* \"#utility.yul\":9869:9873   */\n      dup2\n        /* \"#utility.yul\":9860:9866   */\n      dup5\n        /* \"#utility.yul\":9712:9874   */\n      tag_257\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9704:9874   */\n      swap1\n      pop\n        /* \"#utility.yul\":9400:9881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9887:10067   */\n    tag_258:\n        /* \"#utility.yul\":9935:10012   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9932:9933   */\n      0x00\n        /* \"#utility.yul\":9925:10013   */\n      mstore\n        /* \"#utility.yul\":10032:10036   */\n      0x22\n        /* \"#utility.yul\":10029:10030   */\n      0x04\n        /* \"#utility.yul\":10022:10037   */\n      mstore\n        /* \"#utility.yul\":10056:10060   */\n      0x24\n        /* \"#utility.yul\":10053:10054   */\n      0x00\n        /* \"#utility.yul\":10046:10061   */\n      revert\n        /* \"#utility.yul\":10073:10393   */\n    tag_105:\n        /* \"#utility.yul\":10117:10123   */\n      0x00\n        /* \"#utility.yul\":10154:10155   */\n      0x02\n        /* \"#utility.yul\":10148:10152   */\n      dup3\n        /* \"#utility.yul\":10144:10156   */\n      div\n        /* \"#utility.yul\":10134:10156   */\n      swap1\n      pop\n        /* \"#utility.yul\":10201:10202   */\n      0x01\n        /* \"#utility.yul\":10195:10199   */\n      dup3\n        /* \"#utility.yul\":10191:10203   */\n      and\n        /* \"#utility.yul\":10222:10240   */\n      dup1\n        /* \"#utility.yul\":10212:10293   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":10278:10282   */\n      0x7f\n        /* \"#utility.yul\":10270:10276   */\n      dup3\n        /* \"#utility.yul\":10266:10283   */\n      and\n        /* \"#utility.yul\":10256:10283   */\n      swap2\n      pop\n        /* \"#utility.yul\":10212:10293   */\n    tag_377:\n        /* \"#utility.yul\":10340:10342   */\n      0x20\n        /* \"#utility.yul\":10332:10338   */\n      dup3\n        /* \"#utility.yul\":10329:10343   */\n      lt\n        /* \"#utility.yul\":10309:10327   */\n      dup2\n        /* \"#utility.yul\":10306:10344   */\n      sub\n        /* \"#utility.yul\":10303:10387   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":10359:10377   */\n      tag_379\n      tag_258\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10303:10387   */\n    tag_378:\n        /* \"#utility.yul\":10124:10393   */\n      pop\n        /* \"#utility.yul\":10073:10393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10399:10571   */\n    tag_259:\n        /* \"#utility.yul\":10539:10563   */\n      0x5465616d20746f6b656e7320617265206c6f636b656400000000000000000000\n        /* \"#utility.yul\":10535:10536   */\n      0x00\n        /* \"#utility.yul\":10527:10533   */\n      dup3\n        /* \"#utility.yul\":10523:10537   */\n      add\n        /* \"#utility.yul\":10516:10564   */\n      mstore\n        /* \"#utility.yul\":10399:10571   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10577:10943   */\n    tag_260:\n        /* \"#utility.yul\":10719:10722   */\n      0x00\n        /* \"#utility.yul\":10740:10807   */\n      tag_382\n        /* \"#utility.yul\":10804:10806   */\n      0x16\n        /* \"#utility.yul\":10799:10802   */\n      dup4\n        /* \"#utility.yul\":10740:10807   */\n      tag_229\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":10733:10807   */\n      swap2\n      pop\n        /* \"#utility.yul\":10816:10909   */\n      tag_383\n        /* \"#utility.yul\":10905:10908   */\n      dup3\n        /* \"#utility.yul\":10816:10909   */\n      tag_259\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":10934:10936   */\n      0x20\n        /* \"#utility.yul\":10929:10932   */\n      dup3\n        /* \"#utility.yul\":10925:10937   */\n      add\n        /* \"#utility.yul\":10918:10937   */\n      swap1\n      pop\n        /* \"#utility.yul\":10577:10943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10949:11368   */\n    tag_122:\n        /* \"#utility.yul\":11115:11119   */\n      0x00\n        /* \"#utility.yul\":11153:11155   */\n      0x20\n        /* \"#utility.yul\":11142:11151   */\n      dup3\n        /* \"#utility.yul\":11138:11156   */\n      add\n        /* \"#utility.yul\":11130:11156   */\n      swap1\n      pop\n        /* \"#utility.yul\":11202:11211   */\n      dup2\n        /* \"#utility.yul\":11196:11200   */\n      dup2\n        /* \"#utility.yul\":11192:11212   */\n      sub\n        /* \"#utility.yul\":11188:11189   */\n      0x00\n        /* \"#utility.yul\":11177:11186   */\n      dup4\n        /* \"#utility.yul\":11173:11190   */\n      add\n        /* \"#utility.yul\":11166:11213   */\n      mstore\n        /* \"#utility.yul\":11230:11361   */\n      tag_385\n        /* \"#utility.yul\":11356:11360   */\n      dup2\n        /* \"#utility.yul\":11230:11361   */\n      tag_260\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11222:11361   */\n      swap1\n      pop\n        /* \"#utility.yul\":10949:11368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11374:11543   */\n    tag_261:\n        /* \"#utility.yul\":11514:11535   */\n      0x496e646578206f7574206f6620626f756e647300000000000000000000000000\n        /* \"#utility.yul\":11510:11511   */\n      0x00\n        /* \"#utility.yul\":11502:11508   */\n      dup3\n        /* \"#utility.yul\":11498:11512   */\n      add\n        /* \"#utility.yul\":11491:11536   */\n      mstore\n        /* \"#utility.yul\":11374:11543   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11549:11915   */\n    tag_262:\n        /* \"#utility.yul\":11691:11694   */\n      0x00\n        /* \"#utility.yul\":11712:11779   */\n      tag_388\n        /* \"#utility.yul\":11776:11778   */\n      0x13\n        /* \"#utility.yul\":11771:11774   */\n      dup4\n        /* \"#utility.yul\":11712:11779   */\n      tag_229\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11705:11779   */\n      swap2\n      pop\n        /* \"#utility.yul\":11788:11881   */\n      tag_389\n        /* \"#utility.yul\":11877:11880   */\n      dup3\n        /* \"#utility.yul\":11788:11881   */\n      tag_261\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11906:11908   */\n      0x20\n        /* \"#utility.yul\":11901:11904   */\n      dup3\n        /* \"#utility.yul\":11897:11909   */\n      add\n        /* \"#utility.yul\":11890:11909   */\n      swap1\n      pop\n        /* \"#utility.yul\":11549:11915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11921:12340   */\n    tag_137:\n        /* \"#utility.yul\":12087:12091   */\n      0x00\n        /* \"#utility.yul\":12125:12127   */\n      0x20\n        /* \"#utility.yul\":12114:12123   */\n      dup3\n        /* \"#utility.yul\":12110:12128   */\n      add\n        /* \"#utility.yul\":12102:12128   */\n      swap1\n      pop\n        /* \"#utility.yul\":12174:12183   */\n      dup2\n        /* \"#utility.yul\":12168:12172   */\n      dup2\n        /* \"#utility.yul\":12164:12184   */\n      sub\n        /* \"#utility.yul\":12160:12161   */\n      0x00\n        /* \"#utility.yul\":12149:12158   */\n      dup4\n        /* \"#utility.yul\":12145:12162   */\n      add\n        /* \"#utility.yul\":12138:12185   */\n      mstore\n        /* \"#utility.yul\":12202:12333   */\n      tag_391\n        /* \"#utility.yul\":12328:12332   */\n      dup2\n        /* \"#utility.yul\":12202:12333   */\n      tag_262\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":12194:12333   */\n      swap1\n      pop\n        /* \"#utility.yul\":11921:12340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12346:12526   */\n    tag_140:\n        /* \"#utility.yul\":12394:12471   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12391:12392   */\n      0x00\n        /* \"#utility.yul\":12384:12472   */\n      mstore\n        /* \"#utility.yul\":12491:12495   */\n      0x32\n        /* \"#utility.yul\":12488:12489   */\n      0x04\n        /* \"#utility.yul\":12481:12496   */\n      mstore\n        /* \"#utility.yul\":12515:12519   */\n      0x24\n        /* \"#utility.yul\":12512:12513   */\n      0x00\n        /* \"#utility.yul\":12505:12520   */\n      revert\n        /* \"#utility.yul\":12532:12654   */\n    tag_263:\n        /* \"#utility.yul\":12605:12629   */\n      tag_394\n        /* \"#utility.yul\":12623:12628   */\n      dup2\n        /* \"#utility.yul\":12605:12629   */\n      tag_236\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":12598:12603   */\n      dup2\n        /* \"#utility.yul\":12595:12630   */\n      eq\n        /* \"#utility.yul\":12585:12648   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":12644:12645   */\n      0x00\n        /* \"#utility.yul\":12641:12642   */\n      0x00\n        /* \"#utility.yul\":12634:12646   */\n      revert\n        /* \"#utility.yul\":12585:12648   */\n    tag_395:\n        /* \"#utility.yul\":12532:12654   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12660:12803   */\n    tag_264:\n        /* \"#utility.yul\":12717:12722   */\n      0x00\n        /* \"#utility.yul\":12748:12754   */\n      dup2\n        /* \"#utility.yul\":12742:12755   */\n      mload\n        /* \"#utility.yul\":12733:12755   */\n      swap1\n      pop\n        /* \"#utility.yul\":12764:12797   */\n      tag_397\n        /* \"#utility.yul\":12791:12796   */\n      dup2\n        /* \"#utility.yul\":12764:12797   */\n      tag_263\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":12660:12803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12809:12899   */\n    tag_265:\n        /* \"#utility.yul\":12844:12851   */\n      0x00\n        /* \"#utility.yul\":12887:12892   */\n      dup2\n        /* \"#utility.yul\":12884:12885   */\n      0x02\n        /* \"#utility.yul\":12873:12893   */\n      signextend\n        /* \"#utility.yul\":12862:12893   */\n      swap1\n      pop\n        /* \"#utility.yul\":12809:12899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12905:13023   */\n    tag_266:\n        /* \"#utility.yul\":12976:12998   */\n      tag_400\n        /* \"#utility.yul\":12992:12997   */\n      dup2\n        /* \"#utility.yul\":12976:12998   */\n      tag_265\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12969:12974   */\n      dup2\n        /* \"#utility.yul\":12966:12999   */\n      eq\n        /* \"#utility.yul\":12956:13017   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":13013:13014   */\n      0x00\n        /* \"#utility.yul\":13010:13011   */\n      0x00\n        /* \"#utility.yul\":13003:13015   */\n      revert\n        /* \"#utility.yul\":12956:13017   */\n    tag_401:\n        /* \"#utility.yul\":12905:13023   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13029:13168   */\n    tag_267:\n        /* \"#utility.yul\":13084:13089   */\n      0x00\n        /* \"#utility.yul\":13115:13121   */\n      dup2\n        /* \"#utility.yul\":13109:13122   */\n      mload\n        /* \"#utility.yul\":13100:13122   */\n      swap1\n      pop\n        /* \"#utility.yul\":13131:13162   */\n      tag_403\n        /* \"#utility.yul\":13156:13161   */\n      dup2\n        /* \"#utility.yul\":13131:13162   */\n      tag_266\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13029:13168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13174:13263   */\n    tag_268:\n        /* \"#utility.yul\":13210:13217   */\n      0x00\n        /* \"#utility.yul\":13250:13256   */\n      0xffff\n        /* \"#utility.yul\":13243:13248   */\n      dup3\n        /* \"#utility.yul\":13239:13257   */\n      and\n        /* \"#utility.yul\":13228:13257   */\n      swap1\n      pop\n        /* \"#utility.yul\":13174:13263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13269:13389   */\n    tag_269:\n        /* \"#utility.yul\":13341:13364   */\n      tag_406\n        /* \"#utility.yul\":13358:13363   */\n      dup2\n        /* \"#utility.yul\":13341:13364   */\n      tag_268\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":13334:13339   */\n      dup2\n        /* \"#utility.yul\":13331:13365   */\n      eq\n        /* \"#utility.yul\":13321:13383   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":13379:13380   */\n      0x00\n        /* \"#utility.yul\":13376:13377   */\n      0x00\n        /* \"#utility.yul\":13369:13381   */\n      revert\n        /* \"#utility.yul\":13321:13383   */\n    tag_407:\n        /* \"#utility.yul\":13269:13389   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13395:13536   */\n    tag_270:\n        /* \"#utility.yul\":13451:13456   */\n      0x00\n        /* \"#utility.yul\":13482:13488   */\n      dup2\n        /* \"#utility.yul\":13476:13489   */\n      mload\n        /* \"#utility.yul\":13467:13489   */\n      swap1\n      pop\n        /* \"#utility.yul\":13498:13530   */\n      tag_409\n        /* \"#utility.yul\":13524:13529   */\n      dup2\n        /* \"#utility.yul\":13498:13530   */\n      tag_269\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":13395:13536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13542:13660   */\n    tag_271:\n        /* \"#utility.yul\":13613:13635   */\n      tag_411\n        /* \"#utility.yul\":13629:13634   */\n      dup2\n        /* \"#utility.yul\":13613:13635   */\n      tag_246\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":13606:13611   */\n      dup2\n        /* \"#utility.yul\":13603:13636   */\n      eq\n        /* \"#utility.yul\":13593:13654   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":13650:13651   */\n      0x00\n        /* \"#utility.yul\":13647:13648   */\n      0x00\n        /* \"#utility.yul\":13640:13652   */\n      revert\n        /* \"#utility.yul\":13593:13654   */\n    tag_412:\n        /* \"#utility.yul\":13542:13660   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13666:13805   */\n    tag_272:\n        /* \"#utility.yul\":13721:13726   */\n      0x00\n        /* \"#utility.yul\":13752:13758   */\n      dup2\n        /* \"#utility.yul\":13746:13759   */\n      mload\n        /* \"#utility.yul\":13737:13759   */\n      swap1\n      pop\n        /* \"#utility.yul\":13768:13799   */\n      tag_414\n        /* \"#utility.yul\":13793:13798   */\n      dup2\n        /* \"#utility.yul\":13768:13799   */\n      tag_271\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":13666:13805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13811:13927   */\n    tag_273:\n        /* \"#utility.yul\":13881:13902   */\n      tag_416\n        /* \"#utility.yul\":13896:13901   */\n      dup2\n        /* \"#utility.yul\":13881:13902   */\n      tag_243\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":13874:13879   */\n      dup2\n        /* \"#utility.yul\":13871:13903   */\n      eq\n        /* \"#utility.yul\":13861:13921   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":13917:13918   */\n      0x00\n        /* \"#utility.yul\":13914:13915   */\n      0x00\n        /* \"#utility.yul\":13907:13919   */\n      revert\n        /* \"#utility.yul\":13861:13921   */\n    tag_417:\n        /* \"#utility.yul\":13811:13927   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13933:14070   */\n    tag_274:\n        /* \"#utility.yul\":13987:13992   */\n      0x00\n        /* \"#utility.yul\":14018:14024   */\n      dup2\n        /* \"#utility.yul\":14012:14025   */\n      mload\n        /* \"#utility.yul\":14003:14025   */\n      swap1\n      pop\n        /* \"#utility.yul\":14034:14064   */\n      tag_419\n        /* \"#utility.yul\":14058:14063   */\n      dup2\n        /* \"#utility.yul\":14034:14064   */\n      tag_273\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":13933:14070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14076:15347   */\n    tag_162:\n        /* \"#utility.yul\":14190:14196   */\n      0x00\n        /* \"#utility.yul\":14198:14204   */\n      0x00\n        /* \"#utility.yul\":14206:14212   */\n      0x00\n        /* \"#utility.yul\":14214:14220   */\n      0x00\n        /* \"#utility.yul\":14222:14228   */\n      0x00\n        /* \"#utility.yul\":14230:14236   */\n      0x00\n        /* \"#utility.yul\":14238:14244   */\n      0x00\n        /* \"#utility.yul\":14287:14290   */\n      0xe0\n        /* \"#utility.yul\":14275:14284   */\n      dup9\n        /* \"#utility.yul\":14266:14273   */\n      dup11\n        /* \"#utility.yul\":14262:14285   */\n      sub\n        /* \"#utility.yul\":14258:14291   */\n      slt\n        /* \"#utility.yul\":14255:14375   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":14294:14373   */\n      tag_422\n      tag_234\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":14255:14375   */\n    tag_421:\n        /* \"#utility.yul\":14414:14415   */\n      0x00\n        /* \"#utility.yul\":14439:14503   */\n      tag_423\n        /* \"#utility.yul\":14495:14502   */\n      dup11\n        /* \"#utility.yul\":14486:14492   */\n      dup3\n        /* \"#utility.yul\":14475:14484   */\n      dup12\n        /* \"#utility.yul\":14471:14493   */\n      add\n        /* \"#utility.yul\":14439:14503   */\n      tag_264\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":14429:14503   */\n      swap8\n      pop\n        /* \"#utility.yul\":14385:14513   */\n      pop\n        /* \"#utility.yul\":14552:14554   */\n      0x20\n        /* \"#utility.yul\":14578:14640   */\n      tag_424\n        /* \"#utility.yul\":14632:14639   */\n      dup11\n        /* \"#utility.yul\":14623:14629   */\n      dup3\n        /* \"#utility.yul\":14612:14621   */\n      dup12\n        /* \"#utility.yul\":14608:14630   */\n      add\n        /* \"#utility.yul\":14578:14640   */\n      tag_267\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":14568:14640   */\n      swap7\n      pop\n        /* \"#utility.yul\":14523:14650   */\n      pop\n        /* \"#utility.yul\":14689:14691   */\n      0x40\n        /* \"#utility.yul\":14715:14778   */\n      tag_425\n        /* \"#utility.yul\":14770:14777   */\n      dup11\n        /* \"#utility.yul\":14761:14767   */\n      dup3\n        /* \"#utility.yul\":14750:14759   */\n      dup12\n        /* \"#utility.yul\":14746:14768   */\n      add\n        /* \"#utility.yul\":14715:14778   */\n      tag_270\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":14705:14778   */\n      swap6\n      pop\n        /* \"#utility.yul\":14660:14788   */\n      pop\n        /* \"#utility.yul\":14827:14829   */\n      0x60\n        /* \"#utility.yul\":14853:14916   */\n      tag_426\n        /* \"#utility.yul\":14908:14915   */\n      dup11\n        /* \"#utility.yul\":14899:14905   */\n      dup3\n        /* \"#utility.yul\":14888:14897   */\n      dup12\n        /* \"#utility.yul\":14884:14906   */\n      add\n        /* \"#utility.yul\":14853:14916   */\n      tag_270\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":14843:14916   */\n      swap5\n      pop\n        /* \"#utility.yul\":14798:14926   */\n      pop\n        /* \"#utility.yul\":14965:14968   */\n      0x80\n        /* \"#utility.yul\":14992:15055   */\n      tag_427\n        /* \"#utility.yul\":15047:15054   */\n      dup11\n        /* \"#utility.yul\":15038:15044   */\n      dup3\n        /* \"#utility.yul\":15027:15036   */\n      dup12\n        /* \"#utility.yul\":15023:15045   */\n      add\n        /* \"#utility.yul\":14992:15055   */\n      tag_270\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":14982:15055   */\n      swap4\n      pop\n        /* \"#utility.yul\":14936:15065   */\n      pop\n        /* \"#utility.yul\":15104:15107   */\n      0xa0\n        /* \"#utility.yul\":15131:15193   */\n      tag_428\n        /* \"#utility.yul\":15185:15192   */\n      dup11\n        /* \"#utility.yul\":15176:15182   */\n      dup3\n        /* \"#utility.yul\":15165:15174   */\n      dup12\n        /* \"#utility.yul\":15161:15183   */\n      add\n        /* \"#utility.yul\":15131:15193   */\n      tag_272\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":15121:15193   */\n      swap3\n      pop\n        /* \"#utility.yul\":15075:15203   */\n      pop\n        /* \"#utility.yul\":15242:15245   */\n      0xc0\n        /* \"#utility.yul\":15269:15330   */\n      tag_429\n        /* \"#utility.yul\":15322:15329   */\n      dup11\n        /* \"#utility.yul\":15313:15319   */\n      dup3\n        /* \"#utility.yul\":15302:15311   */\n      dup12\n        /* \"#utility.yul\":15298:15320   */\n      add\n        /* \"#utility.yul\":15269:15330   */\n      tag_274\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":15259:15330   */\n      swap2\n      pop\n        /* \"#utility.yul\":15213:15340   */\n      pop\n        /* \"#utility.yul\":14076:15347   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15353:15533   */\n    tag_275:\n        /* \"#utility.yul\":15401:15478   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15398:15399   */\n      0x00\n        /* \"#utility.yul\":15391:15479   */\n      mstore\n        /* \"#utility.yul\":15498:15502   */\n      0x11\n        /* \"#utility.yul\":15495:15496   */\n      0x04\n        /* \"#utility.yul\":15488:15503   */\n      mstore\n        /* \"#utility.yul\":15522:15526   */\n      0x24\n        /* \"#utility.yul\":15519:15520   */\n      0x00\n        /* \"#utility.yul\":15512:15527   */\n      revert\n        /* \"#utility.yul\":15539:15949   */\n    tag_164:\n        /* \"#utility.yul\":15579:15586   */\n      0x00\n        /* \"#utility.yul\":15602:15622   */\n      tag_432\n        /* \"#utility.yul\":15620:15621   */\n      dup3\n        /* \"#utility.yul\":15602:15622   */\n      tag_240\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":15597:15622   */\n      swap2\n      pop\n        /* \"#utility.yul\":15636:15656   */\n      tag_433\n        /* \"#utility.yul\":15654:15655   */\n      dup4\n        /* \"#utility.yul\":15636:15656   */\n      tag_240\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":15631:15656   */\n      swap3\n      pop\n        /* \"#utility.yul\":15691:15692   */\n      dup3\n        /* \"#utility.yul\":15688:15689   */\n      dup3\n        /* \"#utility.yul\":15684:15693   */\n      mul\n        /* \"#utility.yul\":15713:15743   */\n      tag_434\n        /* \"#utility.yul\":15731:15742   */\n      dup2\n        /* \"#utility.yul\":15713:15743   */\n      tag_240\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":15702:15743   */\n      swap2\n      pop\n        /* \"#utility.yul\":15892:15893   */\n      dup3\n        /* \"#utility.yul\":15883:15890   */\n      dup3\n        /* \"#utility.yul\":15879:15894   */\n      div\n        /* \"#utility.yul\":15876:15877   */\n      dup5\n        /* \"#utility.yul\":15873:15895   */\n      eq\n        /* \"#utility.yul\":15853:15854   */\n      dup4\n        /* \"#utility.yul\":15846:15855   */\n      iszero\n        /* \"#utility.yul\":15826:15909   */\n      or\n        /* \"#utility.yul\":15803:15942   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":15922:15940   */\n      tag_436\n      tag_275\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":15803:15942   */\n    tag_435:\n        /* \"#utility.yul\":15587:15949   */\n      pop\n        /* \"#utility.yul\":15539:15949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15955:16135   */\n    tag_276:\n        /* \"#utility.yul\":16003:16080   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16000:16001   */\n      0x00\n        /* \"#utility.yul\":15993:16081   */\n      mstore\n        /* \"#utility.yul\":16100:16104   */\n      0x12\n        /* \"#utility.yul\":16097:16098   */\n      0x04\n        /* \"#utility.yul\":16090:16105   */\n      mstore\n        /* \"#utility.yul\":16124:16128   */\n      0x24\n        /* \"#utility.yul\":16121:16122   */\n      0x00\n        /* \"#utility.yul\":16114:16129   */\n      revert\n        /* \"#utility.yul\":16141:16326   */\n    tag_166:\n        /* \"#utility.yul\":16181:16182   */\n      0x00\n        /* \"#utility.yul\":16198:16218   */\n      tag_439\n        /* \"#utility.yul\":16216:16217   */\n      dup3\n        /* \"#utility.yul\":16198:16218   */\n      tag_240\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":16193:16218   */\n      swap2\n      pop\n        /* \"#utility.yul\":16232:16252   */\n      tag_440\n        /* \"#utility.yul\":16250:16251   */\n      dup4\n        /* \"#utility.yul\":16232:16252   */\n      tag_240\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":16227:16252   */\n      swap3\n      pop\n        /* \"#utility.yul\":16271:16272   */\n      dup3\n        /* \"#utility.yul\":16261:16296   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":16276:16294   */\n      tag_442\n      tag_276\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":16261:16296   */\n    tag_441:\n        /* \"#utility.yul\":16318:16319   */\n      dup3\n        /* \"#utility.yul\":16315:16316   */\n      dup3\n        /* \"#utility.yul\":16311:16320   */\n      div\n        /* \"#utility.yul\":16306:16320   */\n      swap1\n      pop\n        /* \"#utility.yul\":16141:16326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16332:16774   */\n    tag_209:\n        /* \"#utility.yul\":16481:16485   */\n      0x00\n        /* \"#utility.yul\":16519:16521   */\n      0x60\n        /* \"#utility.yul\":16508:16517   */\n      dup3\n        /* \"#utility.yul\":16504:16522   */\n      add\n        /* \"#utility.yul\":16496:16522   */\n      swap1\n      pop\n        /* \"#utility.yul\":16532:16603   */\n      tag_444\n        /* \"#utility.yul\":16600:16601   */\n      0x00\n        /* \"#utility.yul\":16589:16598   */\n      dup4\n        /* \"#utility.yul\":16585:16602   */\n      add\n        /* \"#utility.yul\":16576:16582   */\n      dup7\n        /* \"#utility.yul\":16532:16603   */\n      tag_248\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":16613:16685   */\n      tag_445\n        /* \"#utility.yul\":16681:16683   */\n      0x20\n        /* \"#utility.yul\":16670:16679   */\n      dup4\n        /* \"#utility.yul\":16666:16684   */\n      add\n        /* \"#utility.yul\":16657:16663   */\n      dup6\n        /* \"#utility.yul\":16613:16685   */\n      tag_245\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":16695:16767   */\n      tag_446\n        /* \"#utility.yul\":16763:16765   */\n      0x40\n        /* \"#utility.yul\":16752:16761   */\n      dup4\n        /* \"#utility.yul\":16748:16766   */\n      add\n        /* \"#utility.yul\":16739:16745   */\n      dup5\n        /* \"#utility.yul\":16695:16767   */\n      tag_245\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":16332:16774   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16780:16971   */\n    tag_221:\n        /* \"#utility.yul\":16820:16823   */\n      0x00\n        /* \"#utility.yul\":16839:16859   */\n      tag_448\n        /* \"#utility.yul\":16857:16858   */\n      dup3\n        /* \"#utility.yul\":16839:16859   */\n      tag_240\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":16834:16859   */\n      swap2\n      pop\n        /* \"#utility.yul\":16873:16893   */\n      tag_449\n        /* \"#utility.yul\":16891:16892   */\n      dup4\n        /* \"#utility.yul\":16873:16893   */\n      tag_240\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":16868:16893   */\n      swap3\n      pop\n        /* \"#utility.yul\":16916:16917   */\n      dup3\n        /* \"#utility.yul\":16913:16914   */\n      dup3\n        /* \"#utility.yul\":16909:16918   */\n      add\n        /* \"#utility.yul\":16902:16918   */\n      swap1\n      pop\n        /* \"#utility.yul\":16937:16940   */\n      dup1\n        /* \"#utility.yul\":16934:16935   */\n      dup3\n        /* \"#utility.yul\":16931:16941   */\n      gt\n        /* \"#utility.yul\":16928:16964   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":16944:16962   */\n      tag_451\n      tag_275\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":16928:16964   */\n    tag_450:\n        /* \"#utility.yul\":16780:16971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122088a0fac46f0416773b1c6079ee7fbc85dd2ff5eb19b7f105cbc3a4ab1e45027064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_366": {
									"entryPoint": null,
									"id": 366,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_568": {
									"entryPoint": null,
									"id": 568,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_854": {
									"entryPoint": null,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1157": {
									"entryPoint": 1278,
									"id": 1157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_664": {
									"entryPoint": 1083,
									"id": 664,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1124": {
									"entryPoint": 1411,
									"id": 1124,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_TeamMember_$213_memory_ptr_fromMemory": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptrt_address_fromMemory": {
									"entryPoint": 2523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3743,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 2152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5": {
									"entryPoint": 3395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15426:23",
										"nodeType": "YulBlock",
										"src": "0:15426:23",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:23",
													"nodeType": "YulBlock",
													"src": "47:35:23",
													"statements": [
														{
															"nativeSrc": "57:19:23",
															"nodeType": "YulAssignment",
															"src": "57:19:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:23",
																		"nodeType": "YulLiteral",
																		"src": "73:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:23"
																},
																"nativeSrc": "67:9:23",
																"nodeType": "YulFunctionCall",
																"src": "67:9:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:23"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:23",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:23",
														"nodeType": "YulTypedName",
														"src": "40:6:23",
														"type": ""
													}
												],
												"src": "7:75:23"
											},
											{
												"body": {
													"nativeSrc": "177:28:23",
													"nodeType": "YulBlock",
													"src": "177:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:23",
																		"nodeType": "YulLiteral",
																		"src": "194:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:23",
																		"nodeType": "YulLiteral",
																		"src": "197:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:23"
																},
																"nativeSrc": "187:12:23",
																"nodeType": "YulFunctionCall",
																"src": "187:12:23"
															},
															"nativeSrc": "187:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:23"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:23"
											},
											{
												"body": {
													"nativeSrc": "300:28:23",
													"nodeType": "YulBlock",
													"src": "300:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:23",
																		"nodeType": "YulLiteral",
																		"src": "317:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:23",
																		"nodeType": "YulLiteral",
																		"src": "320:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:23"
																},
																"nativeSrc": "310:12:23",
																"nodeType": "YulFunctionCall",
																"src": "310:12:23"
															},
															"nativeSrc": "310:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:23"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:23"
											},
											{
												"body": {
													"nativeSrc": "423:28:23",
													"nodeType": "YulBlock",
													"src": "423:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:23",
																		"nodeType": "YulLiteral",
																		"src": "440:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:23",
																		"nodeType": "YulLiteral",
																		"src": "443:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:23"
																},
																"nativeSrc": "433:12:23",
																"nodeType": "YulFunctionCall",
																"src": "433:12:23"
															},
															"nativeSrc": "433:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:23"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:23"
											},
											{
												"body": {
													"nativeSrc": "505:54:23",
													"nodeType": "YulBlock",
													"src": "505:54:23",
													"statements": [
														{
															"nativeSrc": "515:38:23",
															"nodeType": "YulAssignment",
															"src": "515:38:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "533:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:23",
																				"nodeType": "YulLiteral",
																				"src": "540:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "529:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:23"
																		},
																		"nativeSrc": "529:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:23"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "549:2:23",
																				"nodeType": "YulLiteral",
																				"src": "549:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "545:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:23"
																		},
																		"nativeSrc": "545:7:23",
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "525:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:23"
																},
																"nativeSrc": "525:28:23",
																"nodeType": "YulFunctionCall",
																"src": "525:28:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "515:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:23"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "457:102:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "488:5:23",
														"nodeType": "YulTypedName",
														"src": "488:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "498:6:23",
														"nodeType": "YulTypedName",
														"src": "498:6:23",
														"type": ""
													}
												],
												"src": "457:102:23"
											},
											{
												"body": {
													"nativeSrc": "593:152:23",
													"nodeType": "YulBlock",
													"src": "593:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "610:1:23",
																		"nodeType": "YulLiteral",
																		"src": "610:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "613:77:23",
																		"nodeType": "YulLiteral",
																		"src": "613:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "603:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:23"
																},
																"nativeSrc": "603:88:23",
																"nodeType": "YulFunctionCall",
																"src": "603:88:23"
															},
															"nativeSrc": "603:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "603:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "707:1:23",
																		"nodeType": "YulLiteral",
																		"src": "707:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "710:4:23",
																		"nodeType": "YulLiteral",
																		"src": "710:4:23",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "700:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:23"
																},
																"nativeSrc": "700:15:23",
																"nodeType": "YulFunctionCall",
																"src": "700:15:23"
															},
															"nativeSrc": "700:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "700:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "731:1:23",
																		"nodeType": "YulLiteral",
																		"src": "731:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "734:4:23",
																		"nodeType": "YulLiteral",
																		"src": "734:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "724:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:23"
																},
																"nativeSrc": "724:15:23",
																"nodeType": "YulFunctionCall",
																"src": "724:15:23"
															},
															"nativeSrc": "724:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "724:15:23"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "565:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:23"
											},
											{
												"body": {
													"nativeSrc": "794:238:23",
													"nodeType": "YulBlock",
													"src": "794:238:23",
													"statements": [
														{
															"nativeSrc": "804:58:23",
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:23",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "826:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "856:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:23"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "834:21:23",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:23"
																		},
																		"nativeSrc": "834:27:23",
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "822:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:23"
																},
																"nativeSrc": "822:40:23",
																"nodeType": "YulFunctionCall",
																"src": "822:40:23"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "808:10:23",
																	"nodeType": "YulTypedName",
																	"src": "808:10:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "973:22:23",
																"nodeType": "YulBlock",
																"src": "973:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "975:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:23"
																			},
																			"nativeSrc": "975:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:23"
																		},
																		"nativeSrc": "975:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "916:10:23",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "928:18:23",
																				"nodeType": "YulLiteral",
																				"src": "928:18:23",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "913:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:23"
																		},
																		"nativeSrc": "913:34:23",
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "952:10:23",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:23"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "964:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:23"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "949:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:23"
																		},
																		"nativeSrc": "949:22:23",
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "910:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:23"
																},
																"nativeSrc": "910:62:23",
																"nodeType": "YulFunctionCall",
																"src": "910:62:23"
															},
															"nativeSrc": "907:88:23",
															"nodeType": "YulIf",
															"src": "907:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1011:2:23",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:23",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1015:10:23",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1004:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:23"
																},
																"nativeSrc": "1004:22:23",
																"nodeType": "YulFunctionCall",
																"src": "1004:22:23"
															},
															"nativeSrc": "1004:22:23",
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:23"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "751:281:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "780:6:23",
														"nodeType": "YulTypedName",
														"src": "780:6:23",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "788:4:23",
														"nodeType": "YulTypedName",
														"src": "788:4:23",
														"type": ""
													}
												],
												"src": "751:281:23"
											},
											{
												"body": {
													"nativeSrc": "1079:88:23",
													"nodeType": "YulBlock",
													"src": "1079:88:23",
													"statements": [
														{
															"nativeSrc": "1089:30:23",
															"nodeType": "YulAssignment",
															"src": "1089:30:23",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1099:18:23",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:23"
																},
																"nativeSrc": "1099:20:23",
																"nodeType": "YulFunctionCall",
																"src": "1099:20:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1089:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1148:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:23"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1156:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:23"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1128:19:23",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:23"
																},
																"nativeSrc": "1128:33:23",
																"nodeType": "YulFunctionCall",
																"src": "1128:33:23"
															},
															"nativeSrc": "1128:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:23"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1038:129:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1063:4:23",
														"nodeType": "YulTypedName",
														"src": "1063:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1072:6:23",
														"nodeType": "YulTypedName",
														"src": "1072:6:23",
														"type": ""
													}
												],
												"src": "1038:129:23"
											},
											{
												"body": {
													"nativeSrc": "1282:229:23",
													"nodeType": "YulBlock",
													"src": "1282:229:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "1387:22:23",
																"nodeType": "YulBlock",
																"src": "1387:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1389:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "1389:16:23"
																			},
																			"nativeSrc": "1389:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "1389:18:23"
																		},
																		"nativeSrc": "1389:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1359:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "1359:6:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1367:18:23",
																		"nodeType": "YulLiteral",
																		"src": "1367:18:23",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1356:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "1356:2:23"
																},
																"nativeSrc": "1356:30:23",
																"nodeType": "YulFunctionCall",
																"src": "1356:30:23"
															},
															"nativeSrc": "1353:56:23",
															"nodeType": "YulIf",
															"src": "1353:56:23"
														},
														{
															"nativeSrc": "1419:25:23",
															"nodeType": "YulAssignment",
															"src": "1419:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1431:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "1431:6:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1439:4:23",
																		"nodeType": "YulLiteral",
																		"src": "1439:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1427:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1427:3:23"
																},
																"nativeSrc": "1427:17:23",
																"nodeType": "YulFunctionCall",
																"src": "1427:17:23"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1419:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "1419:4:23"
																}
															]
														},
														{
															"nativeSrc": "1481:23:23",
															"nodeType": "YulAssignment",
															"src": "1481:23:23",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1493:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "1493:4:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:23",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1489:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1489:3:23"
																},
																"nativeSrc": "1489:15:23",
																"nodeType": "YulFunctionCall",
																"src": "1489:15:23"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1481:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "1481:4:23"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "1173:338:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1266:6:23",
														"nodeType": "YulTypedName",
														"src": "1266:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1277:4:23",
														"nodeType": "YulTypedName",
														"src": "1277:4:23",
														"type": ""
													}
												],
												"src": "1173:338:23"
											},
											{
												"body": {
													"nativeSrc": "1606:28:23",
													"nodeType": "YulBlock",
													"src": "1606:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1623:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1623:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1626:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1626:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1616:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1616:6:23"
																},
																"nativeSrc": "1616:12:23",
																"nodeType": "YulFunctionCall",
																"src": "1616:12:23"
															},
															"nativeSrc": "1616:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "1616:12:23"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1517:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "1517:117:23"
											},
											{
												"body": {
													"nativeSrc": "1729:28:23",
													"nodeType": "YulBlock",
													"src": "1729:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1746:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1746:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1749:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1739:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1739:6:23"
																},
																"nativeSrc": "1739:12:23",
																"nodeType": "YulFunctionCall",
																"src": "1739:12:23"
															},
															"nativeSrc": "1739:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "1739:12:23"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nativeSrc": "1640:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "1640:117:23"
											},
											{
												"body": {
													"nativeSrc": "1852:28:23",
													"nodeType": "YulBlock",
													"src": "1852:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1869:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1869:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1872:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1872:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1862:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:23"
																},
																"nativeSrc": "1862:12:23",
																"nodeType": "YulFunctionCall",
																"src": "1862:12:23"
															},
															"nativeSrc": "1862:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "1862:12:23"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nativeSrc": "1763:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "1763:117:23"
											},
											{
												"body": {
													"nativeSrc": "1931:81:23",
													"nodeType": "YulBlock",
													"src": "1931:81:23",
													"statements": [
														{
															"nativeSrc": "1941:65:23",
															"nodeType": "YulAssignment",
															"src": "1941:65:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1956:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "1956:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:42:23",
																		"nodeType": "YulLiteral",
																		"src": "1963:42:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1952:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1952:3:23"
																},
																"nativeSrc": "1952:54:23",
																"nodeType": "YulFunctionCall",
																"src": "1952:54:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1941:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "1941:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1886:126:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1913:5:23",
														"nodeType": "YulTypedName",
														"src": "1913:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1923:7:23",
														"nodeType": "YulTypedName",
														"src": "1923:7:23",
														"type": ""
													}
												],
												"src": "1886:126:23"
											},
											{
												"body": {
													"nativeSrc": "2063:51:23",
													"nodeType": "YulBlock",
													"src": "2063:51:23",
													"statements": [
														{
															"nativeSrc": "2073:35:23",
															"nodeType": "YulAssignment",
															"src": "2073:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2102:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "2102:5:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2084:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "2084:17:23"
																},
																"nativeSrc": "2084:24:23",
																"nodeType": "YulFunctionCall",
																"src": "2084:24:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2073:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "2073:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2018:96:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2045:5:23",
														"nodeType": "YulTypedName",
														"src": "2045:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2055:7:23",
														"nodeType": "YulTypedName",
														"src": "2055:7:23",
														"type": ""
													}
												],
												"src": "2018:96:23"
											},
											{
												"body": {
													"nativeSrc": "2163:79:23",
													"nodeType": "YulBlock",
													"src": "2163:79:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "2220:16:23",
																"nodeType": "YulBlock",
																"src": "2220:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2229:1:23",
																					"nodeType": "YulLiteral",
																					"src": "2229:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2232:1:23",
																					"nodeType": "YulLiteral",
																					"src": "2232:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2222:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "2222:6:23"
																			},
																			"nativeSrc": "2222:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "2222:12:23"
																		},
																		"nativeSrc": "2222:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "2222:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2186:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "2186:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2211:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "2211:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2193:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "2193:17:23"
																				},
																				"nativeSrc": "2193:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "2193:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2183:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "2183:2:23"
																		},
																		"nativeSrc": "2183:35:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2183:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2176:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "2176:6:23"
																},
																"nativeSrc": "2176:43:23",
																"nodeType": "YulFunctionCall",
																"src": "2176:43:23"
															},
															"nativeSrc": "2173:63:23",
															"nodeType": "YulIf",
															"src": "2173:63:23"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2120:122:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2156:5:23",
														"nodeType": "YulTypedName",
														"src": "2156:5:23",
														"type": ""
													}
												],
												"src": "2120:122:23"
											},
											{
												"body": {
													"nativeSrc": "2311:80:23",
													"nodeType": "YulBlock",
													"src": "2311:80:23",
													"statements": [
														{
															"nativeSrc": "2321:22:23",
															"nodeType": "YulAssignment",
															"src": "2321:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2336:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2336:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2330:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "2330:5:23"
																},
																"nativeSrc": "2330:13:23",
																"nodeType": "YulFunctionCall",
																"src": "2330:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2321:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "2321:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2379:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "2379:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2352:26:23",
																	"nodeType": "YulIdentifier",
																	"src": "2352:26:23"
																},
																"nativeSrc": "2352:33:23",
																"nodeType": "YulFunctionCall",
																"src": "2352:33:23"
															},
															"nativeSrc": "2352:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "2352:33:23"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2248:143:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2289:6:23",
														"nodeType": "YulTypedName",
														"src": "2289:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2297:3:23",
														"nodeType": "YulTypedName",
														"src": "2297:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2305:5:23",
														"nodeType": "YulTypedName",
														"src": "2305:5:23",
														"type": ""
													}
												],
												"src": "2248:143:23"
											},
											{
												"body": {
													"nativeSrc": "2442:32:23",
													"nodeType": "YulBlock",
													"src": "2442:32:23",
													"statements": [
														{
															"nativeSrc": "2452:16:23",
															"nodeType": "YulAssignment",
															"src": "2452:16:23",
															"value": {
																"name": "value",
																"nativeSrc": "2463:5:23",
																"nodeType": "YulIdentifier",
																"src": "2463:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2452:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "2452:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2397:77:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2424:5:23",
														"nodeType": "YulTypedName",
														"src": "2424:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2434:7:23",
														"nodeType": "YulTypedName",
														"src": "2434:7:23",
														"type": ""
													}
												],
												"src": "2397:77:23"
											},
											{
												"body": {
													"nativeSrc": "2523:79:23",
													"nodeType": "YulBlock",
													"src": "2523:79:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "2580:16:23",
																"nodeType": "YulBlock",
																"src": "2580:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2589:1:23",
																					"nodeType": "YulLiteral",
																					"src": "2589:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2592:1:23",
																					"nodeType": "YulLiteral",
																					"src": "2592:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2582:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "2582:6:23"
																			},
																			"nativeSrc": "2582:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "2582:12:23"
																		},
																		"nativeSrc": "2582:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "2582:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2546:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "2546:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2571:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "2571:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2553:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "2553:17:23"
																				},
																				"nativeSrc": "2553:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "2553:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2543:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "2543:2:23"
																		},
																		"nativeSrc": "2543:35:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2543:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2536:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "2536:6:23"
																},
																"nativeSrc": "2536:43:23",
																"nodeType": "YulFunctionCall",
																"src": "2536:43:23"
															},
															"nativeSrc": "2533:63:23",
															"nodeType": "YulIf",
															"src": "2533:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2480:122:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2516:5:23",
														"nodeType": "YulTypedName",
														"src": "2516:5:23",
														"type": ""
													}
												],
												"src": "2480:122:23"
											},
											{
												"body": {
													"nativeSrc": "2671:80:23",
													"nodeType": "YulBlock",
													"src": "2671:80:23",
													"statements": [
														{
															"nativeSrc": "2681:22:23",
															"nodeType": "YulAssignment",
															"src": "2681:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2696:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2696:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2690:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "2690:5:23"
																},
																"nativeSrc": "2690:13:23",
																"nodeType": "YulFunctionCall",
																"src": "2690:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2681:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "2681:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2739:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "2739:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2712:26:23",
																	"nodeType": "YulIdentifier",
																	"src": "2712:26:23"
																},
																"nativeSrc": "2712:33:23",
																"nodeType": "YulFunctionCall",
																"src": "2712:33:23"
															},
															"nativeSrc": "2712:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "2712:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2608:143:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2649:6:23",
														"nodeType": "YulTypedName",
														"src": "2649:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2657:3:23",
														"nodeType": "YulTypedName",
														"src": "2657:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2665:5:23",
														"nodeType": "YulTypedName",
														"src": "2665:5:23",
														"type": ""
													}
												],
												"src": "2608:143:23"
											},
											{
												"body": {
													"nativeSrc": "2885:537:23",
													"nodeType": "YulBlock",
													"src": "2885:537:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "2929:83:23",
																"nodeType": "YulBlock",
																"src": "2929:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nativeSrc": "2931:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "2931:77:23"
																			},
																			"nativeSrc": "2931:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "2931:79:23"
																		},
																		"nativeSrc": "2931:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "2906:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "2906:3:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2911:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "2911:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2902:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "2902:3:23"
																		},
																		"nativeSrc": "2902:19:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2902:19:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2923:4:23",
																		"nodeType": "YulLiteral",
																		"src": "2923:4:23",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2898:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "2898:3:23"
																},
																"nativeSrc": "2898:30:23",
																"nodeType": "YulFunctionCall",
																"src": "2898:30:23"
															},
															"nativeSrc": "2895:117:23",
															"nodeType": "YulIf",
															"src": "2895:117:23"
														},
														{
															"nativeSrc": "3021:30:23",
															"nodeType": "YulAssignment",
															"src": "3021:30:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3046:4:23",
																		"nodeType": "YulLiteral",
																		"src": "3046:4:23",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3030:15:23",
																	"nodeType": "YulIdentifier",
																	"src": "3030:15:23"
																},
																"nativeSrc": "3030:21:23",
																"nodeType": "YulFunctionCall",
																"src": "3030:21:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3021:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "3021:5:23"
																}
															]
														},
														{
															"nativeSrc": "3061:170:23",
															"nodeType": "YulBlock",
															"src": "3061:170:23",
															"statements": [
																{
																	"nativeSrc": "3105:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3105:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3119:1:23",
																		"nodeType": "YulLiteral",
																		"src": "3119:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3109:6:23",
																			"nodeType": "YulTypedName",
																			"src": "3109:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3145:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "3145:5:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3152:4:23",
																						"nodeType": "YulLiteral",
																						"src": "3152:4:23",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3141:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "3141:3:23"
																				},
																				"nativeSrc": "3141:16:23",
																				"nodeType": "YulFunctionCall",
																				"src": "3141:16:23"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "3195:9:23",
																								"nodeType": "YulIdentifier",
																								"src": "3195:9:23"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "3206:6:23",
																								"nodeType": "YulIdentifier",
																								"src": "3206:6:23"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3191:3:23",
																							"nodeType": "YulIdentifier",
																							"src": "3191:3:23"
																						},
																						"nativeSrc": "3191:22:23",
																						"nodeType": "YulFunctionCall",
																						"src": "3191:22:23"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "3215:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "3215:3:23"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nativeSrc": "3159:31:23",
																					"nodeType": "YulIdentifier",
																					"src": "3159:31:23"
																				},
																				"nativeSrc": "3159:60:23",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:60:23"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "3134:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "3134:6:23"
																		},
																		"nativeSrc": "3134:86:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3134:86:23"
																	},
																	"nativeSrc": "3134:86:23",
																	"nodeType": "YulExpressionStatement",
																	"src": "3134:86:23"
																}
															]
														},
														{
															"nativeSrc": "3241:174:23",
															"nodeType": "YulBlock",
															"src": "3241:174:23",
															"statements": [
																{
																	"nativeSrc": "3288:16:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3288:16:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3302:2:23",
																		"nodeType": "YulLiteral",
																		"src": "3302:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3292:6:23",
																			"nodeType": "YulTypedName",
																			"src": "3292:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3329:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "3329:5:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3336:4:23",
																						"nodeType": "YulLiteral",
																						"src": "3336:4:23",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3325:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "3325:3:23"
																				},
																				"nativeSrc": "3325:16:23",
																				"nodeType": "YulFunctionCall",
																				"src": "3325:16:23"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "3379:9:23",
																								"nodeType": "YulIdentifier",
																								"src": "3379:9:23"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "3390:6:23",
																								"nodeType": "YulIdentifier",
																								"src": "3390:6:23"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3375:3:23",
																							"nodeType": "YulIdentifier",
																							"src": "3375:3:23"
																						},
																						"nativeSrc": "3375:22:23",
																						"nodeType": "YulFunctionCall",
																						"src": "3375:22:23"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "3399:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "3399:3:23"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "3343:31:23",
																					"nodeType": "YulIdentifier",
																					"src": "3343:31:23"
																				},
																				"nativeSrc": "3343:60:23",
																				"nodeType": "YulFunctionCall",
																				"src": "3343:60:23"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "3318:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "3318:6:23"
																		},
																		"nativeSrc": "3318:86:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3318:86:23"
																	},
																	"nativeSrc": "3318:86:23",
																	"nodeType": "YulExpressionStatement",
																	"src": "3318:86:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_TeamMember_$213_memory_ptr_fromMemory",
												"nativeSrc": "2792:630:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2860:9:23",
														"nodeType": "YulTypedName",
														"src": "2860:9:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2871:3:23",
														"nodeType": "YulTypedName",
														"src": "2871:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2879:5:23",
														"nodeType": "YulTypedName",
														"src": "2879:5:23",
														"type": ""
													}
												],
												"src": "2792:630:23"
											},
											{
												"body": {
													"nativeSrc": "3605:673:23",
													"nodeType": "YulBlock",
													"src": "3605:673:23",
													"statements": [
														{
															"nativeSrc": "3615:117:23",
															"nodeType": "YulAssignment",
															"src": "3615:117:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3724:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "3724:6:23"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "3640:83:23",
																			"nodeType": "YulIdentifier",
																			"src": "3640:83:23"
																		},
																		"nativeSrc": "3640:91:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3640:91:23"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3624:15:23",
																	"nodeType": "YulIdentifier",
																	"src": "3624:15:23"
																},
																"nativeSrc": "3624:108:23",
																"nodeType": "YulFunctionCall",
																"src": "3624:108:23"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3615:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "3615:5:23"
																}
															]
														},
														{
															"nativeSrc": "3741:16:23",
															"nodeType": "YulVariableDeclaration",
															"src": "3741:16:23",
															"value": {
																"name": "array",
																"nativeSrc": "3752:5:23",
																"nodeType": "YulIdentifier",
																"src": "3752:5:23"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3745:3:23",
																	"nodeType": "YulTypedName",
																	"src": "3745:3:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3774:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "3774:5:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3781:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3781:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3767:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3767:6:23"
																},
																"nativeSrc": "3767:21:23",
																"nodeType": "YulFunctionCall",
																"src": "3767:21:23"
															},
															"nativeSrc": "3767:21:23",
															"nodeType": "YulExpressionStatement",
															"src": "3767:21:23"
														},
														{
															"nativeSrc": "3797:23:23",
															"nodeType": "YulAssignment",
															"src": "3797:23:23",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3808:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "3808:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3815:4:23",
																		"nodeType": "YulLiteral",
																		"src": "3815:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3804:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:23"
																},
																"nativeSrc": "3804:16:23",
																"nodeType": "YulFunctionCall",
																"src": "3804:16:23"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "3797:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "3797:3:23"
																}
															]
														},
														{
															"nativeSrc": "3830:44:23",
															"nodeType": "YulVariableDeclaration",
															"src": "3830:44:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3848:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3848:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3860:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "3860:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3868:4:23",
																				"nodeType": "YulLiteral",
																				"src": "3868:4:23",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3856:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "3856:3:23"
																		},
																		"nativeSrc": "3856:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3856:17:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3844:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "3844:3:23"
																},
																"nativeSrc": "3844:30:23",
																"nodeType": "YulFunctionCall",
																"src": "3844:30:23"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "3834:6:23",
																	"nodeType": "YulTypedName",
																	"src": "3834:6:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3902:103:23",
																"nodeType": "YulBlock",
																"src": "3902:103:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "3916:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "3916:77:23"
																			},
																			"nativeSrc": "3916:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "3916:79:23"
																		},
																		"nativeSrc": "3916:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "3916:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3889:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3889:6:23"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3897:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "3897:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3886:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "3886:2:23"
																},
																"nativeSrc": "3886:15:23",
																"nodeType": "YulFunctionCall",
																"src": "3886:15:23"
															},
															"nativeSrc": "3883:122:23",
															"nodeType": "YulIf",
															"src": "3883:122:23"
														},
														{
															"body": {
																"nativeSrc": "4090:182:23",
																"nodeType": "YulBlock",
																"src": "4090:182:23",
																"statements": [
																	{
																		"nativeSrc": "4105:21:23",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4105:21:23",
																		"value": {
																			"name": "src",
																			"nativeSrc": "4123:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "4123:3:23"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "4109:10:23",
																				"nodeType": "YulTypedName",
																				"src": "4109:10:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4147:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4147:3:23"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "4211:10:23",
																							"nodeType": "YulIdentifier",
																							"src": "4211:10:23"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "4223:3:23",
																							"nodeType": "YulIdentifier",
																							"src": "4223:3:23"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_struct$_TeamMember_$213_memory_ptr_fromMemory",
																						"nativeSrc": "4152:58:23",
																						"nodeType": "YulIdentifier",
																						"src": "4152:58:23"
																					},
																					"nativeSrc": "4152:75:23",
																					"nodeType": "YulFunctionCall",
																					"src": "4152:75:23"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4140:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "4140:6:23"
																			},
																			"nativeSrc": "4140:88:23",
																			"nodeType": "YulFunctionCall",
																			"src": "4140:88:23"
																		},
																		"nativeSrc": "4140:88:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "4140:88:23"
																	},
																	{
																		"nativeSrc": "4241:21:23",
																		"nodeType": "YulAssignment",
																		"src": "4241:21:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4252:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4252:3:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4257:4:23",
																					"nodeType": "YulLiteral",
																					"src": "4257:4:23",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4248:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "4248:3:23"
																			},
																			"nativeSrc": "4248:14:23",
																			"nodeType": "YulFunctionCall",
																			"src": "4248:14:23"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "4241:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "4241:3:23"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4043:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4043:3:23"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4048:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "4048:6:23"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4040:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "4040:2:23"
																},
																"nativeSrc": "4040:15:23",
																"nodeType": "YulFunctionCall",
																"src": "4040:15:23"
															},
															"nativeSrc": "4014:258:23",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4056:25:23",
																"nodeType": "YulBlock",
																"src": "4056:25:23",
																"statements": [
																	{
																		"nativeSrc": "4058:21:23",
																		"nodeType": "YulAssignment",
																		"src": "4058:21:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "4069:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4069:3:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4074:4:23",
																					"nodeType": "YulLiteral",
																					"src": "4074:4:23",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4065:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "4065:3:23"
																			},
																			"nativeSrc": "4065:14:23",
																			"nodeType": "YulFunctionCall",
																			"src": "4065:14:23"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "4058:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "4058:3:23"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4018:21:23",
																"nodeType": "YulBlock",
																"src": "4018:21:23",
																"statements": [
																	{
																		"nativeSrc": "4020:17:23",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4020:17:23",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "4031:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "4031:6:23"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "4024:3:23",
																				"nodeType": "YulTypedName",
																				"src": "4024:3:23",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4014:258:23"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "3465:813:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3575:6:23",
														"nodeType": "YulTypedName",
														"src": "3575:6:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3583:6:23",
														"nodeType": "YulTypedName",
														"src": "3583:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3591:3:23",
														"nodeType": "YulTypedName",
														"src": "3591:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3599:5:23",
														"nodeType": "YulTypedName",
														"src": "3599:5:23",
														"type": ""
													}
												],
												"src": "3465:813:23"
											},
											{
												"body": {
													"nativeSrc": "4436:324:23",
													"nodeType": "YulBlock",
													"src": "4436:324:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "4485:83:23",
																"nodeType": "YulBlock",
																"src": "4485:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "4487:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "4487:77:23"
																			},
																			"nativeSrc": "4487:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "4487:79:23"
																		},
																		"nativeSrc": "4487:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "4487:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4464:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "4464:6:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4472:4:23",
																						"nodeType": "YulLiteral",
																						"src": "4472:4:23",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4460:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4460:3:23"
																				},
																				"nativeSrc": "4460:17:23",
																				"nodeType": "YulFunctionCall",
																				"src": "4460:17:23"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4479:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "4479:3:23"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4456:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "4456:3:23"
																		},
																		"nativeSrc": "4456:27:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4456:27:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4449:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4449:6:23"
																},
																"nativeSrc": "4449:35:23",
																"nodeType": "YulFunctionCall",
																"src": "4449:35:23"
															},
															"nativeSrc": "4446:122:23",
															"nodeType": "YulIf",
															"src": "4446:122:23"
														},
														{
															"nativeSrc": "4577:27:23",
															"nodeType": "YulVariableDeclaration",
															"src": "4577:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4597:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "4597:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4591:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "4591:5:23"
																},
																"nativeSrc": "4591:13:23",
																"nodeType": "YulFunctionCall",
																"src": "4591:13:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4581:6:23",
																	"nodeType": "YulTypedName",
																	"src": "4581:6:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4613:141:23",
															"nodeType": "YulAssignment",
															"src": "4613:141:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4727:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "4727:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4735:4:23",
																				"nodeType": "YulLiteral",
																				"src": "4735:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4723:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:23"
																		},
																		"nativeSrc": "4723:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4723:17:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4742:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "4742:6:23"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4750:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4750:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "4622:100:23",
																	"nodeType": "YulIdentifier",
																	"src": "4622:100:23"
																},
																"nativeSrc": "4622:132:23",
																"nodeType": "YulFunctionCall",
																"src": "4622:132:23"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4613:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "4613:5:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "4321:439:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4414:6:23",
														"nodeType": "YulTypedName",
														"src": "4414:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4422:3:23",
														"nodeType": "YulTypedName",
														"src": "4422:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4430:5:23",
														"nodeType": "YulTypedName",
														"src": "4430:5:23",
														"type": ""
													}
												],
												"src": "4321:439:23"
											},
											{
												"body": {
													"nativeSrc": "4912:618:23",
													"nodeType": "YulBlock",
													"src": "4912:618:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "4958:83:23",
																"nodeType": "YulBlock",
																"src": "4958:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4960:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "4960:77:23"
																			},
																			"nativeSrc": "4960:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "4960:79:23"
																		},
																		"nativeSrc": "4960:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "4960:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4933:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "4933:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4942:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "4942:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4929:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "4929:3:23"
																		},
																		"nativeSrc": "4929:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4929:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4954:2:23",
																		"nodeType": "YulLiteral",
																		"src": "4954:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4925:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4925:3:23"
																},
																"nativeSrc": "4925:32:23",
																"nodeType": "YulFunctionCall",
																"src": "4925:32:23"
															},
															"nativeSrc": "4922:119:23",
															"nodeType": "YulIf",
															"src": "4922:119:23"
														},
														{
															"nativeSrc": "5051:333:23",
															"nodeType": "YulBlock",
															"src": "5051:333:23",
															"statements": [
																{
																	"nativeSrc": "5066:38:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5066:38:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5090:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "5090:9:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5101:1:23",
																						"nodeType": "YulLiteral",
																						"src": "5101:1:23",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5086:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "5086:3:23"
																				},
																				"nativeSrc": "5086:17:23",
																				"nodeType": "YulFunctionCall",
																				"src": "5086:17:23"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5080:5:23",
																			"nodeType": "YulIdentifier",
																			"src": "5080:5:23"
																		},
																		"nativeSrc": "5080:24:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5080:24:23"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5070:6:23",
																			"nodeType": "YulTypedName",
																			"src": "5070:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5151:83:23",
																		"nodeType": "YulBlock",
																		"src": "5151:83:23",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5153:77:23",
																						"nodeType": "YulIdentifier",
																						"src": "5153:77:23"
																					},
																					"nativeSrc": "5153:79:23",
																					"nodeType": "YulFunctionCall",
																					"src": "5153:79:23"
																				},
																				"nativeSrc": "5153:79:23",
																				"nodeType": "YulExpressionStatement",
																				"src": "5153:79:23"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5123:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "5123:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5131:18:23",
																				"nodeType": "YulLiteral",
																				"src": "5131:18:23",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5120:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "5120:2:23"
																		},
																		"nativeSrc": "5120:30:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5120:30:23"
																	},
																	"nativeSrc": "5117:117:23",
																	"nodeType": "YulIf",
																	"src": "5117:117:23"
																},
																{
																	"nativeSrc": "5248:126:23",
																	"nodeType": "YulAssignment",
																	"src": "5248:126:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5346:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "5346:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5357:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "5357:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5342:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "5342:3:23"
																				},
																				"nativeSrc": "5342:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "5342:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5366:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "5366:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "5258:83:23",
																			"nodeType": "YulIdentifier",
																			"src": "5258:83:23"
																		},
																		"nativeSrc": "5258:116:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5258:116:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5248:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "5248:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5394:129:23",
															"nodeType": "YulBlock",
															"src": "5394:129:23",
															"statements": [
																{
																	"nativeSrc": "5409:16:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5409:16:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5423:2:23",
																		"nodeType": "YulLiteral",
																		"src": "5423:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5413:6:23",
																			"nodeType": "YulTypedName",
																			"src": "5413:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5439:74:23",
																	"nodeType": "YulAssignment",
																	"src": "5439:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5485:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "5485:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5496:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "5496:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5481:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "5481:3:23"
																				},
																				"nativeSrc": "5481:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "5481:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5505:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "5505:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5449:31:23",
																			"nodeType": "YulIdentifier",
																			"src": "5449:31:23"
																		},
																		"nativeSrc": "5449:64:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5449:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5439:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "5439:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptrt_address_fromMemory",
												"nativeSrc": "4766:764:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4874:9:23",
														"nodeType": "YulTypedName",
														"src": "4874:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4885:7:23",
														"nodeType": "YulTypedName",
														"src": "4885:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4897:6:23",
														"nodeType": "YulTypedName",
														"src": "4897:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4905:6:23",
														"nodeType": "YulTypedName",
														"src": "4905:6:23",
														"type": ""
													}
												],
												"src": "4766:764:23"
											},
											{
												"body": {
													"nativeSrc": "5595:40:23",
													"nodeType": "YulBlock",
													"src": "5595:40:23",
													"statements": [
														{
															"nativeSrc": "5606:22:23",
															"nodeType": "YulAssignment",
															"src": "5606:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5622:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "5622:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5616:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "5616:5:23"
																},
																"nativeSrc": "5616:12:23",
																"nodeType": "YulFunctionCall",
																"src": "5616:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5606:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:23"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5536:99:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5578:5:23",
														"nodeType": "YulTypedName",
														"src": "5578:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5588:6:23",
														"nodeType": "YulTypedName",
														"src": "5588:6:23",
														"type": ""
													}
												],
												"src": "5536:99:23"
											},
											{
												"body": {
													"nativeSrc": "5669:152:23",
													"nodeType": "YulBlock",
													"src": "5669:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5686:1:23",
																		"nodeType": "YulLiteral",
																		"src": "5686:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5689:77:23",
																		"nodeType": "YulLiteral",
																		"src": "5689:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5679:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:23"
																},
																"nativeSrc": "5679:88:23",
																"nodeType": "YulFunctionCall",
																"src": "5679:88:23"
															},
															"nativeSrc": "5679:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "5679:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5783:1:23",
																		"nodeType": "YulLiteral",
																		"src": "5783:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5786:4:23",
																		"nodeType": "YulLiteral",
																		"src": "5786:4:23",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5776:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5776:6:23"
																},
																"nativeSrc": "5776:15:23",
																"nodeType": "YulFunctionCall",
																"src": "5776:15:23"
															},
															"nativeSrc": "5776:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "5776:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5807:1:23",
																		"nodeType": "YulLiteral",
																		"src": "5807:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5810:4:23",
																		"nodeType": "YulLiteral",
																		"src": "5810:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5800:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5800:6:23"
																},
																"nativeSrc": "5800:15:23",
																"nodeType": "YulFunctionCall",
																"src": "5800:15:23"
															},
															"nativeSrc": "5800:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "5800:15:23"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5641:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "5641:180:23"
											},
											{
												"body": {
													"nativeSrc": "5878:269:23",
													"nodeType": "YulBlock",
													"src": "5878:269:23",
													"statements": [
														{
															"nativeSrc": "5888:22:23",
															"nodeType": "YulAssignment",
															"src": "5888:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5902:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "5902:4:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5908:1:23",
																		"nodeType": "YulLiteral",
																		"src": "5908:1:23",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5898:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5898:3:23"
																},
																"nativeSrc": "5898:12:23",
																"nodeType": "YulFunctionCall",
																"src": "5898:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5888:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5888:6:23"
																}
															]
														},
														{
															"nativeSrc": "5919:38:23",
															"nodeType": "YulVariableDeclaration",
															"src": "5919:38:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5949:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "5949:4:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5955:1:23",
																		"nodeType": "YulLiteral",
																		"src": "5955:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5945:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5945:3:23"
																},
																"nativeSrc": "5945:12:23",
																"nodeType": "YulFunctionCall",
																"src": "5945:12:23"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5923:18:23",
																	"nodeType": "YulTypedName",
																	"src": "5923:18:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5996:51:23",
																"nodeType": "YulBlock",
																"src": "5996:51:23",
																"statements": [
																	{
																		"nativeSrc": "6010:27:23",
																		"nodeType": "YulAssignment",
																		"src": "6010:27:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6024:6:23",
																					"nodeType": "YulIdentifier",
																					"src": "6024:6:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6032:4:23",
																					"nodeType": "YulLiteral",
																					"src": "6032:4:23",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6020:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "6020:3:23"
																			},
																			"nativeSrc": "6020:17:23",
																			"nodeType": "YulFunctionCall",
																			"src": "6020:17:23"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6010:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "6010:6:23"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5976:18:23",
																		"nodeType": "YulIdentifier",
																		"src": "5976:18:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5969:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5969:6:23"
																},
																"nativeSrc": "5969:26:23",
																"nodeType": "YulFunctionCall",
																"src": "5969:26:23"
															},
															"nativeSrc": "5966:81:23",
															"nodeType": "YulIf",
															"src": "5966:81:23"
														},
														{
															"body": {
																"nativeSrc": "6099:42:23",
																"nodeType": "YulBlock",
																"src": "6099:42:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6113:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "6113:16:23"
																			},
																			"nativeSrc": "6113:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "6113:18:23"
																		},
																		"nativeSrc": "6113:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "6113:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6063:18:23",
																		"nodeType": "YulIdentifier",
																		"src": "6063:18:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6086:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "6086:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6094:2:23",
																				"nodeType": "YulLiteral",
																				"src": "6094:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6083:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "6083:2:23"
																		},
																		"nativeSrc": "6083:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6083:14:23"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6060:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "6060:2:23"
																},
																"nativeSrc": "6060:38:23",
																"nodeType": "YulFunctionCall",
																"src": "6060:38:23"
															},
															"nativeSrc": "6057:84:23",
															"nodeType": "YulIf",
															"src": "6057:84:23"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5827:320:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5862:4:23",
														"nodeType": "YulTypedName",
														"src": "5862:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5871:6:23",
														"nodeType": "YulTypedName",
														"src": "5871:6:23",
														"type": ""
													}
												],
												"src": "5827:320:23"
											},
											{
												"body": {
													"nativeSrc": "6207:87:23",
													"nodeType": "YulBlock",
													"src": "6207:87:23",
													"statements": [
														{
															"nativeSrc": "6217:11:23",
															"nodeType": "YulAssignment",
															"src": "6217:11:23",
															"value": {
																"name": "ptr",
																"nativeSrc": "6225:3:23",
																"nodeType": "YulIdentifier",
																"src": "6225:3:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6217:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "6217:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6245:1:23",
																		"nodeType": "YulLiteral",
																		"src": "6245:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "6248:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "6248:3:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6238:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6238:6:23"
																},
																"nativeSrc": "6238:14:23",
																"nodeType": "YulFunctionCall",
																"src": "6238:14:23"
															},
															"nativeSrc": "6238:14:23",
															"nodeType": "YulExpressionStatement",
															"src": "6238:14:23"
														},
														{
															"nativeSrc": "6261:26:23",
															"nodeType": "YulAssignment",
															"src": "6261:26:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6279:1:23",
																		"nodeType": "YulLiteral",
																		"src": "6279:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6282:4:23",
																		"nodeType": "YulLiteral",
																		"src": "6282:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "6269:9:23",
																	"nodeType": "YulIdentifier",
																	"src": "6269:9:23"
																},
																"nativeSrc": "6269:18:23",
																"nodeType": "YulFunctionCall",
																"src": "6269:18:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6261:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "6261:4:23"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "6153:141:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6194:3:23",
														"nodeType": "YulTypedName",
														"src": "6194:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6202:4:23",
														"nodeType": "YulTypedName",
														"src": "6202:4:23",
														"type": ""
													}
												],
												"src": "6153:141:23"
											},
											{
												"body": {
													"nativeSrc": "6344:49:23",
													"nodeType": "YulBlock",
													"src": "6344:49:23",
													"statements": [
														{
															"nativeSrc": "6354:33:23",
															"nodeType": "YulAssignment",
															"src": "6354:33:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6372:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "6372:5:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6379:2:23",
																				"nodeType": "YulLiteral",
																				"src": "6379:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6368:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "6368:3:23"
																		},
																		"nativeSrc": "6368:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6368:14:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6384:2:23",
																		"nodeType": "YulLiteral",
																		"src": "6384:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6364:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6364:3:23"
																},
																"nativeSrc": "6364:23:23",
																"nodeType": "YulFunctionCall",
																"src": "6364:23:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6354:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:23"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "6300:93:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6327:5:23",
														"nodeType": "YulTypedName",
														"src": "6327:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6337:6:23",
														"nodeType": "YulTypedName",
														"src": "6337:6:23",
														"type": ""
													}
												],
												"src": "6300:93:23"
											},
											{
												"body": {
													"nativeSrc": "6452:54:23",
													"nodeType": "YulBlock",
													"src": "6452:54:23",
													"statements": [
														{
															"nativeSrc": "6462:37:23",
															"nodeType": "YulAssignment",
															"src": "6462:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6487:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "6487:4:23"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6493:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "6493:5:23"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "6483:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6483:3:23"
																},
																"nativeSrc": "6483:16:23",
																"nodeType": "YulFunctionCall",
																"src": "6483:16:23"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6462:8:23",
																	"nodeType": "YulIdentifier",
																	"src": "6462:8:23"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "6399:107:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6427:4:23",
														"nodeType": "YulTypedName",
														"src": "6427:4:23",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6433:5:23",
														"nodeType": "YulTypedName",
														"src": "6433:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6443:8:23",
														"nodeType": "YulTypedName",
														"src": "6443:8:23",
														"type": ""
													}
												],
												"src": "6399:107:23"
											},
											{
												"body": {
													"nativeSrc": "6588:317:23",
													"nodeType": "YulBlock",
													"src": "6588:317:23",
													"statements": [
														{
															"nativeSrc": "6598:35:23",
															"nodeType": "YulVariableDeclaration",
															"src": "6598:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "6619:10:23",
																		"nodeType": "YulIdentifier",
																		"src": "6619:10:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6631:1:23",
																		"nodeType": "YulLiteral",
																		"src": "6631:1:23",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6615:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6615:3:23"
																},
																"nativeSrc": "6615:18:23",
																"nodeType": "YulFunctionCall",
																"src": "6615:18:23"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "6602:9:23",
																	"nodeType": "YulTypedName",
																	"src": "6602:9:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6642:109:23",
															"nodeType": "YulVariableDeclaration",
															"src": "6642:109:23",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6673:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:66:23",
																		"nodeType": "YulLiteral",
																		"src": "6684:66:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6654:18:23",
																	"nodeType": "YulIdentifier",
																	"src": "6654:18:23"
																},
																"nativeSrc": "6654:97:23",
																"nodeType": "YulFunctionCall",
																"src": "6654:97:23"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6646:4:23",
																	"nodeType": "YulTypedName",
																	"src": "6646:4:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6760:51:23",
															"nodeType": "YulAssignment",
															"src": "6760:51:23",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6791:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "6791:9:23"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "6802:8:23",
																		"nodeType": "YulIdentifier",
																		"src": "6802:8:23"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6772:18:23",
																	"nodeType": "YulIdentifier",
																	"src": "6772:18:23"
																},
																"nativeSrc": "6772:39:23",
																"nodeType": "YulFunctionCall",
																"src": "6772:39:23"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "6760:8:23",
																	"nodeType": "YulIdentifier",
																	"src": "6760:8:23"
																}
															]
														},
														{
															"nativeSrc": "6820:30:23",
															"nodeType": "YulAssignment",
															"src": "6820:30:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6833:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "6833:5:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6844:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "6844:4:23"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6840:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "6840:3:23"
																		},
																		"nativeSrc": "6840:9:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6840:9:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6829:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6829:3:23"
																},
																"nativeSrc": "6829:21:23",
																"nodeType": "YulFunctionCall",
																"src": "6829:21:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6820:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "6820:5:23"
																}
															]
														},
														{
															"nativeSrc": "6859:40:23",
															"nodeType": "YulAssignment",
															"src": "6859:40:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6872:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "6872:5:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6883:8:23",
																				"nodeType": "YulIdentifier",
																				"src": "6883:8:23"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6893:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "6893:4:23"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6879:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "6879:3:23"
																		},
																		"nativeSrc": "6879:19:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6879:19:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6869:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "6869:2:23"
																},
																"nativeSrc": "6869:30:23",
																"nodeType": "YulFunctionCall",
																"src": "6869:30:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6859:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6859:6:23"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "6512:393:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6549:5:23",
														"nodeType": "YulTypedName",
														"src": "6549:5:23",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "6556:10:23",
														"nodeType": "YulTypedName",
														"src": "6556:10:23",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "6568:8:23",
														"nodeType": "YulTypedName",
														"src": "6568:8:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6581:6:23",
														"nodeType": "YulTypedName",
														"src": "6581:6:23",
														"type": ""
													}
												],
												"src": "6512:393:23"
											},
											{
												"body": {
													"nativeSrc": "6943:28:23",
													"nodeType": "YulBlock",
													"src": "6943:28:23",
													"statements": [
														{
															"nativeSrc": "6953:12:23",
															"nodeType": "YulAssignment",
															"src": "6953:12:23",
															"value": {
																"name": "value",
																"nativeSrc": "6960:5:23",
																"nodeType": "YulIdentifier",
																"src": "6960:5:23"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6953:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6953:3:23"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6911:60:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6929:5:23",
														"nodeType": "YulTypedName",
														"src": "6929:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6939:3:23",
														"nodeType": "YulTypedName",
														"src": "6939:3:23",
														"type": ""
													}
												],
												"src": "6911:60:23"
											},
											{
												"body": {
													"nativeSrc": "7037:82:23",
													"nodeType": "YulBlock",
													"src": "7037:82:23",
													"statements": [
														{
															"nativeSrc": "7047:66:23",
															"nodeType": "YulAssignment",
															"src": "7047:66:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7105:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "7105:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7087:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "7087:17:23"
																				},
																				"nativeSrc": "7087:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "7087:24:23"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7078:8:23",
																			"nodeType": "YulIdentifier",
																			"src": "7078:8:23"
																		},
																		"nativeSrc": "7078:34:23",
																		"nodeType": "YulFunctionCall",
																		"src": "7078:34:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:23"
																},
																"nativeSrc": "7060:53:23",
																"nodeType": "YulFunctionCall",
																"src": "7060:53:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7047:9:23",
																	"nodeType": "YulIdentifier",
																	"src": "7047:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6977:142:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7017:5:23",
														"nodeType": "YulTypedName",
														"src": "7017:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7027:9:23",
														"nodeType": "YulTypedName",
														"src": "7027:9:23",
														"type": ""
													}
												],
												"src": "6977:142:23"
											},
											{
												"body": {
													"nativeSrc": "7172:28:23",
													"nodeType": "YulBlock",
													"src": "7172:28:23",
													"statements": [
														{
															"nativeSrc": "7182:12:23",
															"nodeType": "YulAssignment",
															"src": "7182:12:23",
															"value": {
																"name": "value",
																"nativeSrc": "7189:5:23",
																"nodeType": "YulIdentifier",
																"src": "7189:5:23"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7182:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "7182:3:23"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "7125:75:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7158:5:23",
														"nodeType": "YulTypedName",
														"src": "7158:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7168:3:23",
														"nodeType": "YulTypedName",
														"src": "7168:3:23",
														"type": ""
													}
												],
												"src": "7125:75:23"
											},
											{
												"body": {
													"nativeSrc": "7282:193:23",
													"nodeType": "YulBlock",
													"src": "7282:193:23",
													"statements": [
														{
															"nativeSrc": "7292:63:23",
															"nodeType": "YulVariableDeclaration",
															"src": "7292:63:23",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "7347:7:23",
																		"nodeType": "YulIdentifier",
																		"src": "7347:7:23"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "7316:30:23",
																	"nodeType": "YulIdentifier",
																	"src": "7316:30:23"
																},
																"nativeSrc": "7316:39:23",
																"nodeType": "YulFunctionCall",
																"src": "7316:39:23"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "7296:16:23",
																	"nodeType": "YulTypedName",
																	"src": "7296:16:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7371:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "7371:4:23"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "7411:4:23",
																						"nodeType": "YulIdentifier",
																						"src": "7411:4:23"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "7405:5:23",
																					"nodeType": "YulIdentifier",
																					"src": "7405:5:23"
																				},
																				"nativeSrc": "7405:11:23",
																				"nodeType": "YulFunctionCall",
																				"src": "7405:11:23"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "7418:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "7418:6:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "7450:16:23",
																						"nodeType": "YulIdentifier",
																						"src": "7450:16:23"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "7426:23:23",
																					"nodeType": "YulIdentifier",
																					"src": "7426:23:23"
																				},
																				"nativeSrc": "7426:41:23",
																				"nodeType": "YulFunctionCall",
																				"src": "7426:41:23"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "7377:27:23",
																			"nodeType": "YulIdentifier",
																			"src": "7377:27:23"
																		},
																		"nativeSrc": "7377:91:23",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:91:23"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "7364:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "7364:6:23"
																},
																"nativeSrc": "7364:105:23",
																"nodeType": "YulFunctionCall",
																"src": "7364:105:23"
															},
															"nativeSrc": "7364:105:23",
															"nodeType": "YulExpressionStatement",
															"src": "7364:105:23"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "7206:269:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7259:4:23",
														"nodeType": "YulTypedName",
														"src": "7259:4:23",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7265:6:23",
														"nodeType": "YulTypedName",
														"src": "7265:6:23",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "7273:7:23",
														"nodeType": "YulTypedName",
														"src": "7273:7:23",
														"type": ""
													}
												],
												"src": "7206:269:23"
											},
											{
												"body": {
													"nativeSrc": "7530:24:23",
													"nodeType": "YulBlock",
													"src": "7530:24:23",
													"statements": [
														{
															"nativeSrc": "7540:8:23",
															"nodeType": "YulAssignment",
															"src": "7540:8:23",
															"value": {
																"kind": "number",
																"nativeSrc": "7547:1:23",
																"nodeType": "YulLiteral",
																"src": "7547:1:23",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7540:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "7540:3:23"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "7481:73:23",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7526:3:23",
														"nodeType": "YulTypedName",
														"src": "7526:3:23",
														"type": ""
													}
												],
												"src": "7481:73:23"
											},
											{
												"body": {
													"nativeSrc": "7613:136:23",
													"nodeType": "YulBlock",
													"src": "7613:136:23",
													"statements": [
														{
															"nativeSrc": "7623:46:23",
															"nodeType": "YulVariableDeclaration",
															"src": "7623:46:23",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "7637:30:23",
																	"nodeType": "YulIdentifier",
																	"src": "7637:30:23"
																},
																"nativeSrc": "7637:32:23",
																"nodeType": "YulFunctionCall",
																"src": "7637:32:23"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "7627:6:23",
																	"nodeType": "YulTypedName",
																	"src": "7627:6:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7722:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "7722:4:23"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7728:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "7728:6:23"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "7736:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "7736:6:23"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "7678:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "7678:43:23"
																},
																"nativeSrc": "7678:65:23",
																"nodeType": "YulFunctionCall",
																"src": "7678:65:23"
															},
															"nativeSrc": "7678:65:23",
															"nodeType": "YulExpressionStatement",
															"src": "7678:65:23"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "7560:189:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7599:4:23",
														"nodeType": "YulTypedName",
														"src": "7599:4:23",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7605:6:23",
														"nodeType": "YulTypedName",
														"src": "7605:6:23",
														"type": ""
													}
												],
												"src": "7560:189:23"
											},
											{
												"body": {
													"nativeSrc": "7805:136:23",
													"nodeType": "YulBlock",
													"src": "7805:136:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "7872:63:23",
																"nodeType": "YulBlock",
																"src": "7872:63:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7916:5:23",
																					"nodeType": "YulIdentifier",
																					"src": "7916:5:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7923:1:23",
																					"nodeType": "YulLiteral",
																					"src": "7923:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7886:29:23",
																				"nodeType": "YulIdentifier",
																				"src": "7886:29:23"
																			},
																			"nativeSrc": "7886:39:23",
																			"nodeType": "YulFunctionCall",
																			"src": "7886:39:23"
																		},
																		"nativeSrc": "7886:39:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "7886:39:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7825:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "7825:5:23"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7832:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "7832:3:23"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7822:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "7822:2:23"
																},
																"nativeSrc": "7822:14:23",
																"nodeType": "YulFunctionCall",
																"src": "7822:14:23"
															},
															"nativeSrc": "7815:120:23",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7837:26:23",
																"nodeType": "YulBlock",
																"src": "7837:26:23",
																"statements": [
																	{
																		"nativeSrc": "7839:22:23",
																		"nodeType": "YulAssignment",
																		"src": "7839:22:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7852:5:23",
																					"nodeType": "YulIdentifier",
																					"src": "7852:5:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7859:1:23",
																					"nodeType": "YulLiteral",
																					"src": "7859:1:23",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7848:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "7848:3:23"
																			},
																			"nativeSrc": "7848:13:23",
																			"nodeType": "YulFunctionCall",
																			"src": "7848:13:23"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7839:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "7839:5:23"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7819:2:23",
																"nodeType": "YulBlock",
																"src": "7819:2:23",
																"statements": []
															},
															"src": "7815:120:23"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "7755:186:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7793:5:23",
														"nodeType": "YulTypedName",
														"src": "7793:5:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7800:3:23",
														"nodeType": "YulTypedName",
														"src": "7800:3:23",
														"type": ""
													}
												],
												"src": "7755:186:23"
											},
											{
												"body": {
													"nativeSrc": "8026:464:23",
													"nodeType": "YulBlock",
													"src": "8026:464:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "8052:431:23",
																"nodeType": "YulBlock",
																"src": "8052:431:23",
																"statements": [
																	{
																		"nativeSrc": "8066:54:23",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8066:54:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "8114:5:23",
																					"nodeType": "YulIdentifier",
																					"src": "8114:5:23"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "8082:31:23",
																				"nodeType": "YulIdentifier",
																				"src": "8082:31:23"
																			},
																			"nativeSrc": "8082:38:23",
																			"nodeType": "YulFunctionCall",
																			"src": "8082:38:23"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "8070:8:23",
																				"nodeType": "YulTypedName",
																				"src": "8070:8:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8133:63:23",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8133:63:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "8156:8:23",
																					"nodeType": "YulIdentifier",
																					"src": "8156:8:23"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "8184:10:23",
																							"nodeType": "YulIdentifier",
																							"src": "8184:10:23"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "8166:17:23",
																						"nodeType": "YulIdentifier",
																						"src": "8166:17:23"
																					},
																					"nativeSrc": "8166:29:23",
																					"nodeType": "YulFunctionCall",
																					"src": "8166:29:23"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8152:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "8152:3:23"
																			},
																			"nativeSrc": "8152:44:23",
																			"nodeType": "YulFunctionCall",
																			"src": "8152:44:23"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "8137:11:23",
																				"nodeType": "YulTypedName",
																				"src": "8137:11:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8353:27:23",
																			"nodeType": "YulBlock",
																			"src": "8353:27:23",
																			"statements": [
																				{
																					"nativeSrc": "8355:23:23",
																					"nodeType": "YulAssignment",
																					"src": "8355:23:23",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "8370:8:23",
																						"nodeType": "YulIdentifier",
																						"src": "8370:8:23"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "8355:11:23",
																							"nodeType": "YulIdentifier",
																							"src": "8355:11:23"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "8337:10:23",
																					"nodeType": "YulIdentifier",
																					"src": "8337:10:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8349:2:23",
																					"nodeType": "YulLiteral",
																					"src": "8349:2:23",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8334:2:23",
																				"nodeType": "YulIdentifier",
																				"src": "8334:2:23"
																			},
																			"nativeSrc": "8334:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "8334:18:23"
																		},
																		"nativeSrc": "8331:49:23",
																		"nodeType": "YulIf",
																		"src": "8331:49:23"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "8422:11:23",
																					"nodeType": "YulIdentifier",
																					"src": "8422:11:23"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "8439:8:23",
																							"nodeType": "YulIdentifier",
																							"src": "8439:8:23"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "8467:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "8467:3:23"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "8449:17:23",
																								"nodeType": "YulIdentifier",
																								"src": "8449:17:23"
																							},
																							"nativeSrc": "8449:22:23",
																							"nodeType": "YulFunctionCall",
																							"src": "8449:22:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8435:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "8435:3:23"
																					},
																					"nativeSrc": "8435:37:23",
																					"nodeType": "YulFunctionCall",
																					"src": "8435:37:23"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "8393:28:23",
																				"nodeType": "YulIdentifier",
																				"src": "8393:28:23"
																			},
																			"nativeSrc": "8393:80:23",
																			"nodeType": "YulFunctionCall",
																			"src": "8393:80:23"
																		},
																		"nativeSrc": "8393:80:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "8393:80:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "8043:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "8043:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8048:2:23",
																		"nodeType": "YulLiteral",
																		"src": "8048:2:23",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8040:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "8040:2:23"
																},
																"nativeSrc": "8040:11:23",
																"nodeType": "YulFunctionCall",
																"src": "8040:11:23"
															},
															"nativeSrc": "8037:446:23",
															"nodeType": "YulIf",
															"src": "8037:446:23"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7947:543:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "8002:5:23",
														"nodeType": "YulTypedName",
														"src": "8002:5:23",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8009:3:23",
														"nodeType": "YulTypedName",
														"src": "8009:3:23",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "8014:10:23",
														"nodeType": "YulTypedName",
														"src": "8014:10:23",
														"type": ""
													}
												],
												"src": "7947:543:23"
											},
											{
												"body": {
													"nativeSrc": "8559:54:23",
													"nodeType": "YulBlock",
													"src": "8559:54:23",
													"statements": [
														{
															"nativeSrc": "8569:37:23",
															"nodeType": "YulAssignment",
															"src": "8569:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "8594:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "8594:4:23"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8600:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "8600:5:23"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8590:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "8590:3:23"
																},
																"nativeSrc": "8590:16:23",
																"nodeType": "YulFunctionCall",
																"src": "8590:16:23"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8569:8:23",
																	"nodeType": "YulIdentifier",
																	"src": "8569:8:23"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "8496:117:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "8534:4:23",
														"nodeType": "YulTypedName",
														"src": "8534:4:23",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "8540:5:23",
														"nodeType": "YulTypedName",
														"src": "8540:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8550:8:23",
														"nodeType": "YulTypedName",
														"src": "8550:8:23",
														"type": ""
													}
												],
												"src": "8496:117:23"
											},
											{
												"body": {
													"nativeSrc": "8670:118:23",
													"nodeType": "YulBlock",
													"src": "8670:118:23",
													"statements": [
														{
															"nativeSrc": "8680:68:23",
															"nodeType": "YulVariableDeclaration",
															"src": "8680:68:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8729:1:23",
																						"nodeType": "YulLiteral",
																						"src": "8729:1:23",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "8732:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "8732:5:23"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8725:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "8725:3:23"
																				},
																				"nativeSrc": "8725:13:23",
																				"nodeType": "YulFunctionCall",
																				"src": "8725:13:23"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8744:1:23",
																						"nodeType": "YulLiteral",
																						"src": "8744:1:23",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8740:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "8740:3:23"
																				},
																				"nativeSrc": "8740:6:23",
																				"nodeType": "YulFunctionCall",
																				"src": "8740:6:23"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "8696:28:23",
																			"nodeType": "YulIdentifier",
																			"src": "8696:28:23"
																		},
																		"nativeSrc": "8696:51:23",
																		"nodeType": "YulFunctionCall",
																		"src": "8696:51:23"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "8692:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "8692:3:23"
																},
																"nativeSrc": "8692:56:23",
																"nodeType": "YulFunctionCall",
																"src": "8692:56:23"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "8684:4:23",
																	"nodeType": "YulTypedName",
																	"src": "8684:4:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8757:25:23",
															"nodeType": "YulAssignment",
															"src": "8757:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8771:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "8771:4:23"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8777:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "8777:4:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8767:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "8767:3:23"
																},
																"nativeSrc": "8767:15:23",
																"nodeType": "YulFunctionCall",
																"src": "8767:15:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8757:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "8757:6:23"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "8619:169:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8647:4:23",
														"nodeType": "YulTypedName",
														"src": "8647:4:23",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "8653:5:23",
														"nodeType": "YulTypedName",
														"src": "8653:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8663:6:23",
														"nodeType": "YulTypedName",
														"src": "8663:6:23",
														"type": ""
													}
												],
												"src": "8619:169:23"
											},
											{
												"body": {
													"nativeSrc": "8874:214:23",
													"nodeType": "YulBlock",
													"src": "8874:214:23",
													"statements": [
														{
															"nativeSrc": "9007:37:23",
															"nodeType": "YulAssignment",
															"src": "9007:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9034:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "9034:4:23"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "9040:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "9040:3:23"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "9015:18:23",
																	"nodeType": "YulIdentifier",
																	"src": "9015:18:23"
																},
																"nativeSrc": "9015:29:23",
																"nodeType": "YulFunctionCall",
																"src": "9015:29:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9007:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "9007:4:23"
																}
															]
														},
														{
															"nativeSrc": "9053:29:23",
															"nodeType": "YulAssignment",
															"src": "9053:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9064:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "9064:4:23"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9074:1:23",
																				"nodeType": "YulLiteral",
																				"src": "9074:1:23",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "9077:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "9077:3:23"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "9070:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "9070:3:23"
																		},
																		"nativeSrc": "9070:11:23",
																		"nodeType": "YulFunctionCall",
																		"src": "9070:11:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9061:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "9061:2:23"
																},
																"nativeSrc": "9061:21:23",
																"nodeType": "YulFunctionCall",
																"src": "9061:21:23"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "9053:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "9053:4:23"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8793:295:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8855:4:23",
														"nodeType": "YulTypedName",
														"src": "8855:4:23",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8861:3:23",
														"nodeType": "YulTypedName",
														"src": "8861:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8869:4:23",
														"nodeType": "YulTypedName",
														"src": "8869:4:23",
														"type": ""
													}
												],
												"src": "8793:295:23"
											},
											{
												"body": {
													"nativeSrc": "9185:1303:23",
													"nodeType": "YulBlock",
													"src": "9185:1303:23",
													"statements": [
														{
															"nativeSrc": "9196:51:23",
															"nodeType": "YulVariableDeclaration",
															"src": "9196:51:23",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9243:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "9243:3:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9210:32:23",
																	"nodeType": "YulIdentifier",
																	"src": "9210:32:23"
																},
																"nativeSrc": "9210:37:23",
																"nodeType": "YulFunctionCall",
																"src": "9210:37:23"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "9200:6:23",
																	"nodeType": "YulTypedName",
																	"src": "9200:6:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9332:22:23",
																"nodeType": "YulBlock",
																"src": "9332:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9334:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "9334:16:23"
																			},
																			"nativeSrc": "9334:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "9334:18:23"
																		},
																		"nativeSrc": "9334:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "9334:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9304:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "9304:6:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9312:18:23",
																		"nodeType": "YulLiteral",
																		"src": "9312:18:23",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9301:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "9301:2:23"
																},
																"nativeSrc": "9301:30:23",
																"nodeType": "YulFunctionCall",
																"src": "9301:30:23"
															},
															"nativeSrc": "9298:56:23",
															"nodeType": "YulIf",
															"src": "9298:56:23"
														},
														{
															"nativeSrc": "9364:52:23",
															"nodeType": "YulVariableDeclaration",
															"src": "9364:52:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "9410:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "9410:4:23"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "9404:5:23",
																			"nodeType": "YulIdentifier",
																			"src": "9404:5:23"
																		},
																		"nativeSrc": "9404:11:23",
																		"nodeType": "YulFunctionCall",
																		"src": "9404:11:23"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "9378:25:23",
																	"nodeType": "YulIdentifier",
																	"src": "9378:25:23"
																},
																"nativeSrc": "9378:38:23",
																"nodeType": "YulFunctionCall",
																"src": "9378:38:23"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "9368:6:23",
																	"nodeType": "YulTypedName",
																	"src": "9368:6:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9509:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "9509:4:23"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "9515:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "9515:6:23"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9523:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "9523:6:23"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "9463:45:23",
																	"nodeType": "YulIdentifier",
																	"src": "9463:45:23"
																},
																"nativeSrc": "9463:67:23",
																"nodeType": "YulFunctionCall",
																"src": "9463:67:23"
															},
															"nativeSrc": "9463:67:23",
															"nodeType": "YulExpressionStatement",
															"src": "9463:67:23"
														},
														{
															"nativeSrc": "9540:18:23",
															"nodeType": "YulVariableDeclaration",
															"src": "9540:18:23",
															"value": {
																"kind": "number",
																"nativeSrc": "9557:1:23",
																"nodeType": "YulLiteral",
																"src": "9557:1:23",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9544:9:23",
																	"nodeType": "YulTypedName",
																	"src": "9544:9:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9568:17:23",
															"nodeType": "YulAssignment",
															"src": "9568:17:23",
															"value": {
																"kind": "number",
																"nativeSrc": "9581:4:23",
																"nodeType": "YulLiteral",
																"src": "9581:4:23",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9568:9:23",
																	"nodeType": "YulIdentifier",
																	"src": "9568:9:23"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9632:611:23",
																		"nodeType": "YulBlock",
																		"src": "9632:611:23",
																		"statements": [
																			{
																				"nativeSrc": "9646:37:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9646:37:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9665:6:23",
																							"nodeType": "YulIdentifier",
																							"src": "9665:6:23"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9677:4:23",
																									"nodeType": "YulLiteral",
																									"src": "9677:4:23",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9673:3:23",
																								"nodeType": "YulIdentifier",
																								"src": "9673:3:23"
																							},
																							"nativeSrc": "9673:9:23",
																							"nodeType": "YulFunctionCall",
																							"src": "9673:9:23"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9661:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "9661:3:23"
																					},
																					"nativeSrc": "9661:22:23",
																					"nodeType": "YulFunctionCall",
																					"src": "9661:22:23"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9650:7:23",
																						"nodeType": "YulTypedName",
																						"src": "9650:7:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9697:51:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9697:51:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9743:4:23",
																							"nodeType": "YulIdentifier",
																							"src": "9743:4:23"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "9711:31:23",
																						"nodeType": "YulIdentifier",
																						"src": "9711:31:23"
																					},
																					"nativeSrc": "9711:37:23",
																					"nodeType": "YulFunctionCall",
																					"src": "9711:37:23"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9701:6:23",
																						"nodeType": "YulTypedName",
																						"src": "9701:6:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9761:10:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9761:10:23",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9770:1:23",
																					"nodeType": "YulLiteral",
																					"src": "9770:1:23",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9765:1:23",
																						"nodeType": "YulTypedName",
																						"src": "9765:1:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9829:163:23",
																					"nodeType": "YulBlock",
																					"src": "9829:163:23",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9854:6:23",
																										"nodeType": "YulIdentifier",
																										"src": "9854:6:23"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9872:3:23",
																														"nodeType": "YulIdentifier",
																														"src": "9872:3:23"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9877:9:23",
																														"nodeType": "YulIdentifier",
																														"src": "9877:9:23"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9868:3:23",
																													"nodeType": "YulIdentifier",
																													"src": "9868:3:23"
																												},
																												"nativeSrc": "9868:19:23",
																												"nodeType": "YulFunctionCall",
																												"src": "9868:19:23"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9862:5:23",
																											"nodeType": "YulIdentifier",
																											"src": "9862:5:23"
																										},
																										"nativeSrc": "9862:26:23",
																										"nodeType": "YulFunctionCall",
																										"src": "9862:26:23"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9847:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "9847:6:23"
																								},
																								"nativeSrc": "9847:42:23",
																								"nodeType": "YulFunctionCall",
																								"src": "9847:42:23"
																							},
																							"nativeSrc": "9847:42:23",
																							"nodeType": "YulExpressionStatement",
																							"src": "9847:42:23"
																						},
																						{
																							"nativeSrc": "9906:24:23",
																							"nodeType": "YulAssignment",
																							"src": "9906:24:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9920:6:23",
																										"nodeType": "YulIdentifier",
																										"src": "9920:6:23"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9928:1:23",
																										"nodeType": "YulLiteral",
																										"src": "9928:1:23",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9916:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "9916:3:23"
																								},
																								"nativeSrc": "9916:14:23",
																								"nodeType": "YulFunctionCall",
																								"src": "9916:14:23"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9906:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "9906:6:23"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9947:31:23",
																							"nodeType": "YulAssignment",
																							"src": "9947:31:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9964:9:23",
																										"nodeType": "YulIdentifier",
																										"src": "9964:9:23"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9975:2:23",
																										"nodeType": "YulLiteral",
																										"src": "9975:2:23",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9960:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "9960:3:23"
																								},
																								"nativeSrc": "9960:18:23",
																								"nodeType": "YulFunctionCall",
																								"src": "9960:18:23"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9947:9:23",
																									"nodeType": "YulIdentifier",
																									"src": "9947:9:23"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9795:1:23",
																							"nodeType": "YulIdentifier",
																							"src": "9795:1:23"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9798:7:23",
																							"nodeType": "YulIdentifier",
																							"src": "9798:7:23"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9792:2:23",
																						"nodeType": "YulIdentifier",
																						"src": "9792:2:23"
																					},
																					"nativeSrc": "9792:14:23",
																					"nodeType": "YulFunctionCall",
																					"src": "9792:14:23"
																				},
																				"nativeSrc": "9784:208:23",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9807:21:23",
																					"nodeType": "YulBlock",
																					"src": "9807:21:23",
																					"statements": [
																						{
																							"nativeSrc": "9809:17:23",
																							"nodeType": "YulAssignment",
																							"src": "9809:17:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9818:1:23",
																										"nodeType": "YulIdentifier",
																										"src": "9818:1:23"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9821:4:23",
																										"nodeType": "YulLiteral",
																										"src": "9821:4:23",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9814:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "9814:3:23"
																								},
																								"nativeSrc": "9814:12:23",
																								"nodeType": "YulFunctionCall",
																								"src": "9814:12:23"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9809:1:23",
																									"nodeType": "YulIdentifier",
																									"src": "9809:1:23"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9788:3:23",
																					"nodeType": "YulBlock",
																					"src": "9788:3:23",
																					"statements": []
																				},
																				"src": "9784:208:23"
																			},
																			{
																				"body": {
																					"nativeSrc": "10028:156:23",
																					"nodeType": "YulBlock",
																					"src": "10028:156:23",
																					"statements": [
																						{
																							"nativeSrc": "10046:43:23",
																							"nodeType": "YulVariableDeclaration",
																							"src": "10046:43:23",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10073:3:23",
																												"nodeType": "YulIdentifier",
																												"src": "10073:3:23"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10078:9:23",
																												"nodeType": "YulIdentifier",
																												"src": "10078:9:23"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10069:3:23",
																											"nodeType": "YulIdentifier",
																											"src": "10069:3:23"
																										},
																										"nativeSrc": "10069:19:23",
																										"nodeType": "YulFunctionCall",
																										"src": "10069:19:23"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10063:5:23",
																									"nodeType": "YulIdentifier",
																									"src": "10063:5:23"
																								},
																								"nativeSrc": "10063:26:23",
																								"nodeType": "YulFunctionCall",
																								"src": "10063:26:23"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "10050:9:23",
																									"nodeType": "YulTypedName",
																									"src": "10050:9:23",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10113:6:23",
																										"nodeType": "YulIdentifier",
																										"src": "10113:6:23"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "10140:9:23",
																												"nodeType": "YulIdentifier",
																												"src": "10140:9:23"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "10155:6:23",
																														"nodeType": "YulIdentifier",
																														"src": "10155:6:23"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "10163:4:23",
																														"nodeType": "YulLiteral",
																														"src": "10163:4:23",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "10151:3:23",
																													"nodeType": "YulIdentifier",
																													"src": "10151:3:23"
																												},
																												"nativeSrc": "10151:17:23",
																												"nodeType": "YulFunctionCall",
																												"src": "10151:17:23"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "10121:18:23",
																											"nodeType": "YulIdentifier",
																											"src": "10121:18:23"
																										},
																										"nativeSrc": "10121:48:23",
																										"nodeType": "YulFunctionCall",
																										"src": "10121:48:23"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10106:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "10106:6:23"
																								},
																								"nativeSrc": "10106:64:23",
																								"nodeType": "YulFunctionCall",
																								"src": "10106:64:23"
																							},
																							"nativeSrc": "10106:64:23",
																							"nodeType": "YulExpressionStatement",
																							"src": "10106:64:23"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10011:7:23",
																							"nodeType": "YulIdentifier",
																							"src": "10011:7:23"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "10020:6:23",
																							"nodeType": "YulIdentifier",
																							"src": "10020:6:23"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10008:2:23",
																						"nodeType": "YulIdentifier",
																						"src": "10008:2:23"
																					},
																					"nativeSrc": "10008:19:23",
																					"nodeType": "YulFunctionCall",
																					"src": "10008:19:23"
																				},
																				"nativeSrc": "10005:179:23",
																				"nodeType": "YulIf",
																				"src": "10005:179:23"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10204:4:23",
																							"nodeType": "YulIdentifier",
																							"src": "10204:4:23"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "10218:6:23",
																											"nodeType": "YulIdentifier",
																											"src": "10218:6:23"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "10226:1:23",
																											"nodeType": "YulLiteral",
																											"src": "10226:1:23",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "10214:3:23",
																										"nodeType": "YulIdentifier",
																										"src": "10214:3:23"
																									},
																									"nativeSrc": "10214:14:23",
																									"nodeType": "YulFunctionCall",
																									"src": "10214:14:23"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10230:1:23",
																									"nodeType": "YulLiteral",
																									"src": "10230:1:23",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10210:3:23",
																								"nodeType": "YulIdentifier",
																								"src": "10210:3:23"
																							},
																							"nativeSrc": "10210:22:23",
																							"nodeType": "YulFunctionCall",
																							"src": "10210:22:23"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10197:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "10197:6:23"
																					},
																					"nativeSrc": "10197:36:23",
																					"nodeType": "YulFunctionCall",
																					"src": "10197:36:23"
																				},
																				"nativeSrc": "10197:36:23",
																				"nodeType": "YulExpressionStatement",
																				"src": "10197:36:23"
																			}
																		]
																	},
																	"nativeSrc": "9625:618:23",
																	"nodeType": "YulCase",
																	"src": "9625:618:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9630:1:23",
																		"nodeType": "YulLiteral",
																		"src": "9630:1:23",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10260:222:23",
																		"nodeType": "YulBlock",
																		"src": "10260:222:23",
																		"statements": [
																			{
																				"nativeSrc": "10274:14:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10274:14:23",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10287:1:23",
																					"nodeType": "YulLiteral",
																					"src": "10287:1:23",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10278:5:23",
																						"nodeType": "YulTypedName",
																						"src": "10278:5:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10311:67:23",
																					"nodeType": "YulBlock",
																					"src": "10311:67:23",
																					"statements": [
																						{
																							"nativeSrc": "10329:35:23",
																							"nodeType": "YulAssignment",
																							"src": "10329:35:23",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10348:3:23",
																												"nodeType": "YulIdentifier",
																												"src": "10348:3:23"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10353:9:23",
																												"nodeType": "YulIdentifier",
																												"src": "10353:9:23"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10344:3:23",
																											"nodeType": "YulIdentifier",
																											"src": "10344:3:23"
																										},
																										"nativeSrc": "10344:19:23",
																										"nodeType": "YulFunctionCall",
																										"src": "10344:19:23"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10338:5:23",
																									"nodeType": "YulIdentifier",
																									"src": "10338:5:23"
																								},
																								"nativeSrc": "10338:26:23",
																								"nodeType": "YulFunctionCall",
																								"src": "10338:26:23"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10329:5:23",
																									"nodeType": "YulIdentifier",
																									"src": "10329:5:23"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "10304:6:23",
																					"nodeType": "YulIdentifier",
																					"src": "10304:6:23"
																				},
																				"nativeSrc": "10301:77:23",
																				"nodeType": "YulIf",
																				"src": "10301:77:23"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10398:4:23",
																							"nodeType": "YulIdentifier",
																							"src": "10398:4:23"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10457:5:23",
																									"nodeType": "YulIdentifier",
																									"src": "10457:5:23"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10464:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "10464:6:23"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10404:52:23",
																								"nodeType": "YulIdentifier",
																								"src": "10404:52:23"
																							},
																							"nativeSrc": "10404:67:23",
																							"nodeType": "YulFunctionCall",
																							"src": "10404:67:23"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10391:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "10391:6:23"
																					},
																					"nativeSrc": "10391:81:23",
																					"nodeType": "YulFunctionCall",
																					"src": "10391:81:23"
																				},
																				"nativeSrc": "10391:81:23",
																				"nodeType": "YulExpressionStatement",
																				"src": "10391:81:23"
																			}
																		]
																	},
																	"nativeSrc": "10252:230:23",
																	"nodeType": "YulCase",
																	"src": "10252:230:23",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9605:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "9605:6:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9613:2:23",
																		"nodeType": "YulLiteral",
																		"src": "9613:2:23",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9602:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "9602:2:23"
																},
																"nativeSrc": "9602:14:23",
																"nodeType": "YulFunctionCall",
																"src": "9602:14:23"
															},
															"nativeSrc": "9595:887:23",
															"nodeType": "YulSwitch",
															"src": "9595:887:23"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "9093:1395:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "9174:4:23",
														"nodeType": "YulTypedName",
														"src": "9174:4:23",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "9180:3:23",
														"nodeType": "YulTypedName",
														"src": "9180:3:23",
														"type": ""
													}
												],
												"src": "9093:1395:23"
											},
											{
												"body": {
													"nativeSrc": "10559:53:23",
													"nodeType": "YulBlock",
													"src": "10559:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10576:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "10576:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10599:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "10599:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10581:17:23",
																			"nodeType": "YulIdentifier",
																			"src": "10581:17:23"
																		},
																		"nativeSrc": "10581:24:23",
																		"nodeType": "YulFunctionCall",
																		"src": "10581:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10569:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "10569:6:23"
																},
																"nativeSrc": "10569:37:23",
																"nodeType": "YulFunctionCall",
																"src": "10569:37:23"
															},
															"nativeSrc": "10569:37:23",
															"nodeType": "YulExpressionStatement",
															"src": "10569:37:23"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10494:118:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10547:5:23",
														"nodeType": "YulTypedName",
														"src": "10547:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10554:3:23",
														"nodeType": "YulTypedName",
														"src": "10554:3:23",
														"type": ""
													}
												],
												"src": "10494:118:23"
											},
											{
												"body": {
													"nativeSrc": "10716:124:23",
													"nodeType": "YulBlock",
													"src": "10716:124:23",
													"statements": [
														{
															"nativeSrc": "10726:26:23",
															"nodeType": "YulAssignment",
															"src": "10726:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10738:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "10738:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10749:2:23",
																		"nodeType": "YulLiteral",
																		"src": "10749:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10734:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "10734:3:23"
																},
																"nativeSrc": "10734:18:23",
																"nodeType": "YulFunctionCall",
																"src": "10734:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10726:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "10726:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10806:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "10806:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10819:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "10819:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10830:1:23",
																				"nodeType": "YulLiteral",
																				"src": "10830:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10815:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "10815:3:23"
																		},
																		"nativeSrc": "10815:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "10815:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10762:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "10762:43:23"
																},
																"nativeSrc": "10762:71:23",
																"nodeType": "YulFunctionCall",
																"src": "10762:71:23"
															},
															"nativeSrc": "10762:71:23",
															"nodeType": "YulExpressionStatement",
															"src": "10762:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10618:222:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10688:9:23",
														"nodeType": "YulTypedName",
														"src": "10688:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10700:6:23",
														"nodeType": "YulTypedName",
														"src": "10700:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10711:4:23",
														"nodeType": "YulTypedName",
														"src": "10711:4:23",
														"type": ""
													}
												],
												"src": "10618:222:23"
											},
											{
												"body": {
													"nativeSrc": "10942:73:23",
													"nodeType": "YulBlock",
													"src": "10942:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10959:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "10959:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10964:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "10964:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10952:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "10952:6:23"
																},
																"nativeSrc": "10952:19:23",
																"nodeType": "YulFunctionCall",
																"src": "10952:19:23"
															},
															"nativeSrc": "10952:19:23",
															"nodeType": "YulExpressionStatement",
															"src": "10952:19:23"
														},
														{
															"nativeSrc": "10980:29:23",
															"nodeType": "YulAssignment",
															"src": "10980:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10999:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "10999:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11004:4:23",
																		"nodeType": "YulLiteral",
																		"src": "11004:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10995:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "10995:3:23"
																},
																"nativeSrc": "10995:14:23",
																"nodeType": "YulFunctionCall",
																"src": "10995:14:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10980:11:23",
																	"nodeType": "YulIdentifier",
																	"src": "10980:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10846:169:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10914:3:23",
														"nodeType": "YulTypedName",
														"src": "10914:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10919:6:23",
														"nodeType": "YulTypedName",
														"src": "10919:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10930:11:23",
														"nodeType": "YulTypedName",
														"src": "10930:11:23",
														"type": ""
													}
												],
												"src": "10846:169:23"
											},
											{
												"body": {
													"nativeSrc": "11127:114:23",
													"nodeType": "YulBlock",
													"src": "11127:114:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11149:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "11149:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11157:1:23",
																				"nodeType": "YulLiteral",
																				"src": "11157:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11145:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "11145:3:23"
																		},
																		"nativeSrc": "11145:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "11145:14:23"
																	},
																	{
																		"hexValue": "4174206c65617374206f6e65207465616d206d656d6265722072657175697265",
																		"kind": "string",
																		"nativeSrc": "11161:34:23",
																		"nodeType": "YulLiteral",
																		"src": "11161:34:23",
																		"type": "",
																		"value": "At least one team member require"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11138:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "11138:6:23"
																},
																"nativeSrc": "11138:58:23",
																"nodeType": "YulFunctionCall",
																"src": "11138:58:23"
															},
															"nativeSrc": "11138:58:23",
															"nodeType": "YulExpressionStatement",
															"src": "11138:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11217:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "11217:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11225:2:23",
																				"nodeType": "YulLiteral",
																				"src": "11225:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11213:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "11213:3:23"
																		},
																		"nativeSrc": "11213:15:23",
																		"nodeType": "YulFunctionCall",
																		"src": "11213:15:23"
																	},
																	{
																		"hexValue": "64",
																		"kind": "string",
																		"nativeSrc": "11230:3:23",
																		"nodeType": "YulLiteral",
																		"src": "11230:3:23",
																		"type": "",
																		"value": "d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11206:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "11206:6:23"
																},
																"nativeSrc": "11206:28:23",
																"nodeType": "YulFunctionCall",
																"src": "11206:28:23"
															},
															"nativeSrc": "11206:28:23",
															"nodeType": "YulExpressionStatement",
															"src": "11206:28:23"
														}
													]
												},
												"name": "store_literal_in_memory_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5",
												"nativeSrc": "11021:220:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11119:6:23",
														"nodeType": "YulTypedName",
														"src": "11119:6:23",
														"type": ""
													}
												],
												"src": "11021:220:23"
											},
											{
												"body": {
													"nativeSrc": "11393:220:23",
													"nodeType": "YulBlock",
													"src": "11393:220:23",
													"statements": [
														{
															"nativeSrc": "11403:74:23",
															"nodeType": "YulAssignment",
															"src": "11403:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11469:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "11469:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11474:2:23",
																		"nodeType": "YulLiteral",
																		"src": "11474:2:23",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11410:58:23",
																	"nodeType": "YulIdentifier",
																	"src": "11410:58:23"
																},
																"nativeSrc": "11410:67:23",
																"nodeType": "YulFunctionCall",
																"src": "11410:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11403:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11403:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11575:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "11575:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5",
																	"nativeSrc": "11486:88:23",
																	"nodeType": "YulIdentifier",
																	"src": "11486:88:23"
																},
																"nativeSrc": "11486:93:23",
																"nodeType": "YulFunctionCall",
																"src": "11486:93:23"
															},
															"nativeSrc": "11486:93:23",
															"nodeType": "YulExpressionStatement",
															"src": "11486:93:23"
														},
														{
															"nativeSrc": "11588:19:23",
															"nodeType": "YulAssignment",
															"src": "11588:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11599:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "11599:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11604:2:23",
																		"nodeType": "YulLiteral",
																		"src": "11604:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11595:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11595:3:23"
																},
																"nativeSrc": "11595:12:23",
																"nodeType": "YulFunctionCall",
																"src": "11595:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11588:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11588:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11247:366:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11381:3:23",
														"nodeType": "YulTypedName",
														"src": "11381:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11389:3:23",
														"nodeType": "YulTypedName",
														"src": "11389:3:23",
														"type": ""
													}
												],
												"src": "11247:366:23"
											},
											{
												"body": {
													"nativeSrc": "11790:248:23",
													"nodeType": "YulBlock",
													"src": "11790:248:23",
													"statements": [
														{
															"nativeSrc": "11800:26:23",
															"nodeType": "YulAssignment",
															"src": "11800:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11812:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "11812:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11823:2:23",
																		"nodeType": "YulLiteral",
																		"src": "11823:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11808:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11808:3:23"
																},
																"nativeSrc": "11808:18:23",
																"nodeType": "YulFunctionCall",
																"src": "11808:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11800:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "11800:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11847:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "11847:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11858:1:23",
																				"nodeType": "YulLiteral",
																				"src": "11858:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11843:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "11843:3:23"
																		},
																		"nativeSrc": "11843:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "11843:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11866:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "11866:4:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11872:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "11872:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11862:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "11862:3:23"
																		},
																		"nativeSrc": "11862:20:23",
																		"nodeType": "YulFunctionCall",
																		"src": "11862:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11836:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "11836:6:23"
																},
																"nativeSrc": "11836:47:23",
																"nodeType": "YulFunctionCall",
																"src": "11836:47:23"
															},
															"nativeSrc": "11836:47:23",
															"nodeType": "YulExpressionStatement",
															"src": "11836:47:23"
														},
														{
															"nativeSrc": "11892:139:23",
															"nodeType": "YulAssignment",
															"src": "11892:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12026:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "12026:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11900:124:23",
																	"nodeType": "YulIdentifier",
																	"src": "11900:124:23"
																},
																"nativeSrc": "11900:131:23",
																"nodeType": "YulFunctionCall",
																"src": "11900:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11892:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "11892:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11619:419:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11770:9:23",
														"nodeType": "YulTypedName",
														"src": "11770:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11785:4:23",
														"nodeType": "YulTypedName",
														"src": "11785:4:23",
														"type": ""
													}
												],
												"src": "11619:419:23"
											},
											{
												"body": {
													"nativeSrc": "12072:152:23",
													"nodeType": "YulBlock",
													"src": "12072:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12089:1:23",
																		"nodeType": "YulLiteral",
																		"src": "12089:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12092:77:23",
																		"nodeType": "YulLiteral",
																		"src": "12092:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12082:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12082:6:23"
																},
																"nativeSrc": "12082:88:23",
																"nodeType": "YulFunctionCall",
																"src": "12082:88:23"
															},
															"nativeSrc": "12082:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "12082:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12186:1:23",
																		"nodeType": "YulLiteral",
																		"src": "12186:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12189:4:23",
																		"nodeType": "YulLiteral",
																		"src": "12189:4:23",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12179:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12179:6:23"
																},
																"nativeSrc": "12179:15:23",
																"nodeType": "YulFunctionCall",
																"src": "12179:15:23"
															},
															"nativeSrc": "12179:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "12179:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12210:1:23",
																		"nodeType": "YulLiteral",
																		"src": "12210:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12213:4:23",
																		"nodeType": "YulLiteral",
																		"src": "12213:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12203:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:23"
																},
																"nativeSrc": "12203:15:23",
																"nodeType": "YulFunctionCall",
																"src": "12203:15:23"
															},
															"nativeSrc": "12203:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "12203:15:23"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12044:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "12044:180:23"
											},
											{
												"body": {
													"nativeSrc": "12258:152:23",
													"nodeType": "YulBlock",
													"src": "12258:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12275:1:23",
																		"nodeType": "YulLiteral",
																		"src": "12275:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12278:77:23",
																		"nodeType": "YulLiteral",
																		"src": "12278:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12268:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12268:6:23"
																},
																"nativeSrc": "12268:88:23",
																"nodeType": "YulFunctionCall",
																"src": "12268:88:23"
															},
															"nativeSrc": "12268:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "12268:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12372:1:23",
																		"nodeType": "YulLiteral",
																		"src": "12372:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12375:4:23",
																		"nodeType": "YulLiteral",
																		"src": "12375:4:23",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12365:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12365:6:23"
																},
																"nativeSrc": "12365:15:23",
																"nodeType": "YulFunctionCall",
																"src": "12365:15:23"
															},
															"nativeSrc": "12365:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "12365:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12396:1:23",
																		"nodeType": "YulLiteral",
																		"src": "12396:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12399:4:23",
																		"nodeType": "YulLiteral",
																		"src": "12399:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12389:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12389:6:23"
																},
																"nativeSrc": "12389:15:23",
																"nodeType": "YulFunctionCall",
																"src": "12389:15:23"
															},
															"nativeSrc": "12389:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "12389:15:23"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12230:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "12230:180:23"
											},
											{
												"body": {
													"nativeSrc": "12460:147:23",
													"nodeType": "YulBlock",
													"src": "12460:147:23",
													"statements": [
														{
															"nativeSrc": "12470:25:23",
															"nodeType": "YulAssignment",
															"src": "12470:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12493:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "12493:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12475:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "12475:17:23"
																},
																"nativeSrc": "12475:20:23",
																"nodeType": "YulFunctionCall",
																"src": "12475:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12470:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "12470:1:23"
																}
															]
														},
														{
															"nativeSrc": "12504:25:23",
															"nodeType": "YulAssignment",
															"src": "12504:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12527:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "12527:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12509:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "12509:17:23"
																},
																"nativeSrc": "12509:20:23",
																"nodeType": "YulFunctionCall",
																"src": "12509:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12504:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "12504:1:23"
																}
															]
														},
														{
															"nativeSrc": "12538:16:23",
															"nodeType": "YulAssignment",
															"src": "12538:16:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12549:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "12549:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12552:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "12552:1:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12545:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "12545:3:23"
																},
																"nativeSrc": "12545:9:23",
																"nodeType": "YulFunctionCall",
																"src": "12545:9:23"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12538:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "12538:3:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12578:22:23",
																"nodeType": "YulBlock",
																"src": "12578:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12580:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "12580:16:23"
																			},
																			"nativeSrc": "12580:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "12580:18:23"
																		},
																		"nativeSrc": "12580:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "12580:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12570:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "12570:1:23"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12573:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "12573:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12567:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "12567:2:23"
																},
																"nativeSrc": "12567:10:23",
																"nodeType": "YulFunctionCall",
																"src": "12567:10:23"
															},
															"nativeSrc": "12564:36:23",
															"nodeType": "YulIf",
															"src": "12564:36:23"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12416:191:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12447:1:23",
														"nodeType": "YulTypedName",
														"src": "12447:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12450:1:23",
														"nodeType": "YulTypedName",
														"src": "12450:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12456:3:23",
														"nodeType": "YulTypedName",
														"src": "12456:3:23",
														"type": ""
													}
												],
												"src": "12416:191:23"
											},
											{
												"body": {
													"nativeSrc": "12661:362:23",
													"nodeType": "YulBlock",
													"src": "12661:362:23",
													"statements": [
														{
															"nativeSrc": "12671:25:23",
															"nodeType": "YulAssignment",
															"src": "12671:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12694:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "12694:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12676:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "12676:17:23"
																},
																"nativeSrc": "12676:20:23",
																"nodeType": "YulFunctionCall",
																"src": "12676:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12671:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "12671:1:23"
																}
															]
														},
														{
															"nativeSrc": "12705:25:23",
															"nodeType": "YulAssignment",
															"src": "12705:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12728:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "12728:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12710:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "12710:17:23"
																},
																"nativeSrc": "12710:20:23",
																"nodeType": "YulFunctionCall",
																"src": "12710:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12705:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "12705:1:23"
																}
															]
														},
														{
															"nativeSrc": "12739:28:23",
															"nodeType": "YulVariableDeclaration",
															"src": "12739:28:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12762:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "12762:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12765:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "12765:1:23"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12758:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "12758:3:23"
																},
																"nativeSrc": "12758:9:23",
																"nodeType": "YulFunctionCall",
																"src": "12758:9:23"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12743:11:23",
																	"nodeType": "YulTypedName",
																	"src": "12743:11:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12776:41:23",
															"nodeType": "YulAssignment",
															"src": "12776:41:23",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12805:11:23",
																		"nodeType": "YulIdentifier",
																		"src": "12805:11:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12787:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "12787:17:23"
																},
																"nativeSrc": "12787:30:23",
																"nodeType": "YulFunctionCall",
																"src": "12787:30:23"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12776:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "12776:7:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12994:22:23",
																"nodeType": "YulBlock",
																"src": "12994:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12996:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "12996:16:23"
																			},
																			"nativeSrc": "12996:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "12996:18:23"
																		},
																		"nativeSrc": "12996:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "12996:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12927:1:23",
																						"nodeType": "YulIdentifier",
																						"src": "12927:1:23"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12920:6:23",
																					"nodeType": "YulIdentifier",
																					"src": "12920:6:23"
																				},
																				"nativeSrc": "12920:9:23",
																				"nodeType": "YulFunctionCall",
																				"src": "12920:9:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12950:1:23",
																						"nodeType": "YulIdentifier",
																						"src": "12950:1:23"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12957:7:23",
																								"nodeType": "YulIdentifier",
																								"src": "12957:7:23"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12966:1:23",
																								"nodeType": "YulIdentifier",
																								"src": "12966:1:23"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12953:3:23",
																							"nodeType": "YulIdentifier",
																							"src": "12953:3:23"
																						},
																						"nativeSrc": "12953:15:23",
																						"nodeType": "YulFunctionCall",
																						"src": "12953:15:23"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12947:2:23",
																					"nodeType": "YulIdentifier",
																					"src": "12947:2:23"
																				},
																				"nativeSrc": "12947:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "12947:22:23"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12900:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "12900:2:23"
																		},
																		"nativeSrc": "12900:83:23",
																		"nodeType": "YulFunctionCall",
																		"src": "12900:83:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12880:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12880:6:23"
																},
																"nativeSrc": "12880:113:23",
																"nodeType": "YulFunctionCall",
																"src": "12880:113:23"
															},
															"nativeSrc": "12877:139:23",
															"nodeType": "YulIf",
															"src": "12877:139:23"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12613:410:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12644:1:23",
														"nodeType": "YulTypedName",
														"src": "12644:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12647:1:23",
														"nodeType": "YulTypedName",
														"src": "12647:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12653:7:23",
														"nodeType": "YulTypedName",
														"src": "12653:7:23",
														"type": ""
													}
												],
												"src": "12613:410:23"
											},
											{
												"body": {
													"nativeSrc": "13057:152:23",
													"nodeType": "YulBlock",
													"src": "13057:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13074:1:23",
																		"nodeType": "YulLiteral",
																		"src": "13074:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13077:77:23",
																		"nodeType": "YulLiteral",
																		"src": "13077:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13067:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "13067:6:23"
																},
																"nativeSrc": "13067:88:23",
																"nodeType": "YulFunctionCall",
																"src": "13067:88:23"
															},
															"nativeSrc": "13067:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "13067:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13171:1:23",
																		"nodeType": "YulLiteral",
																		"src": "13171:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13174:4:23",
																		"nodeType": "YulLiteral",
																		"src": "13174:4:23",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13164:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "13164:6:23"
																},
																"nativeSrc": "13164:15:23",
																"nodeType": "YulFunctionCall",
																"src": "13164:15:23"
															},
															"nativeSrc": "13164:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "13164:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13195:1:23",
																		"nodeType": "YulLiteral",
																		"src": "13195:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13198:4:23",
																		"nodeType": "YulLiteral",
																		"src": "13198:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13188:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "13188:6:23"
																},
																"nativeSrc": "13188:15:23",
																"nodeType": "YulFunctionCall",
																"src": "13188:15:23"
															},
															"nativeSrc": "13188:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "13188:15:23"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13029:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "13029:180:23"
											},
											{
												"body": {
													"nativeSrc": "13257:143:23",
													"nodeType": "YulBlock",
													"src": "13257:143:23",
													"statements": [
														{
															"nativeSrc": "13267:25:23",
															"nodeType": "YulAssignment",
															"src": "13267:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13290:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "13290:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13272:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "13272:17:23"
																},
																"nativeSrc": "13272:20:23",
																"nodeType": "YulFunctionCall",
																"src": "13272:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13267:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "13267:1:23"
																}
															]
														},
														{
															"nativeSrc": "13301:25:23",
															"nodeType": "YulAssignment",
															"src": "13301:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13324:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "13324:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13306:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "13306:17:23"
																},
																"nativeSrc": "13306:20:23",
																"nodeType": "YulFunctionCall",
																"src": "13306:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13301:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "13301:1:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13348:22:23",
																"nodeType": "YulBlock",
																"src": "13348:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13350:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "13350:16:23"
																			},
																			"nativeSrc": "13350:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "13350:18:23"
																		},
																		"nativeSrc": "13350:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "13350:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13345:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "13345:1:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13338:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "13338:6:23"
																},
																"nativeSrc": "13338:9:23",
																"nodeType": "YulFunctionCall",
																"src": "13338:9:23"
															},
															"nativeSrc": "13335:35:23",
															"nodeType": "YulIf",
															"src": "13335:35:23"
														},
														{
															"nativeSrc": "13380:14:23",
															"nodeType": "YulAssignment",
															"src": "13380:14:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13389:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "13389:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13392:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "13392:1:23"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13385:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13385:3:23"
																},
																"nativeSrc": "13385:9:23",
																"nodeType": "YulFunctionCall",
																"src": "13385:9:23"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13380:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "13380:1:23"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13215:185:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13246:1:23",
														"nodeType": "YulTypedName",
														"src": "13246:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13249:1:23",
														"nodeType": "YulTypedName",
														"src": "13249:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13255:1:23",
														"nodeType": "YulTypedName",
														"src": "13255:1:23",
														"type": ""
													}
												],
												"src": "13215:185:23"
											},
											{
												"body": {
													"nativeSrc": "13512:114:23",
													"nodeType": "YulBlock",
													"src": "13512:114:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13534:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "13534:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13542:1:23",
																				"nodeType": "YulLiteral",
																				"src": "13542:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13530:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "13530:3:23"
																		},
																		"nativeSrc": "13530:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "13530:14:23"
																	},
																	{
																		"hexValue": "546f74616c20646973747269627574696f6e2065786365656473206d61726b65",
																		"kind": "string",
																		"nativeSrc": "13546:34:23",
																		"nodeType": "YulLiteral",
																		"src": "13546:34:23",
																		"type": "",
																		"value": "Total distribution exceeds marke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13523:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "13523:6:23"
																},
																"nativeSrc": "13523:58:23",
																"nodeType": "YulFunctionCall",
																"src": "13523:58:23"
															},
															"nativeSrc": "13523:58:23",
															"nodeType": "YulExpressionStatement",
															"src": "13523:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13602:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "13602:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13610:2:23",
																				"nodeType": "YulLiteral",
																				"src": "13610:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13598:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "13598:3:23"
																		},
																		"nativeSrc": "13598:15:23",
																		"nodeType": "YulFunctionCall",
																		"src": "13598:15:23"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nativeSrc": "13615:3:23",
																		"nodeType": "YulLiteral",
																		"src": "13615:3:23",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13591:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "13591:6:23"
																},
																"nativeSrc": "13591:28:23",
																"nodeType": "YulFunctionCall",
																"src": "13591:28:23"
															},
															"nativeSrc": "13591:28:23",
															"nodeType": "YulExpressionStatement",
															"src": "13591:28:23"
														}
													]
												},
												"name": "store_literal_in_memory_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5",
												"nativeSrc": "13406:220:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13504:6:23",
														"nodeType": "YulTypedName",
														"src": "13504:6:23",
														"type": ""
													}
												],
												"src": "13406:220:23"
											},
											{
												"body": {
													"nativeSrc": "13778:220:23",
													"nodeType": "YulBlock",
													"src": "13778:220:23",
													"statements": [
														{
															"nativeSrc": "13788:74:23",
															"nodeType": "YulAssignment",
															"src": "13788:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13854:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "13854:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13859:2:23",
																		"nodeType": "YulLiteral",
																		"src": "13859:2:23",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13795:58:23",
																	"nodeType": "YulIdentifier",
																	"src": "13795:58:23"
																},
																"nativeSrc": "13795:67:23",
																"nodeType": "YulFunctionCall",
																"src": "13795:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13788:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13788:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13960:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "13960:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5",
																	"nativeSrc": "13871:88:23",
																	"nodeType": "YulIdentifier",
																	"src": "13871:88:23"
																},
																"nativeSrc": "13871:93:23",
																"nodeType": "YulFunctionCall",
																"src": "13871:93:23"
															},
															"nativeSrc": "13871:93:23",
															"nodeType": "YulExpressionStatement",
															"src": "13871:93:23"
														},
														{
															"nativeSrc": "13973:19:23",
															"nodeType": "YulAssignment",
															"src": "13973:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13984:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "13984:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13989:2:23",
																		"nodeType": "YulLiteral",
																		"src": "13989:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13980:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13980:3:23"
																},
																"nativeSrc": "13980:12:23",
																"nodeType": "YulFunctionCall",
																"src": "13980:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13973:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13973:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13632:366:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13766:3:23",
														"nodeType": "YulTypedName",
														"src": "13766:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13774:3:23",
														"nodeType": "YulTypedName",
														"src": "13774:3:23",
														"type": ""
													}
												],
												"src": "13632:366:23"
											},
											{
												"body": {
													"nativeSrc": "14175:248:23",
													"nodeType": "YulBlock",
													"src": "14175:248:23",
													"statements": [
														{
															"nativeSrc": "14185:26:23",
															"nodeType": "YulAssignment",
															"src": "14185:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14197:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "14197:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14208:2:23",
																		"nodeType": "YulLiteral",
																		"src": "14208:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14193:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "14193:3:23"
																},
																"nativeSrc": "14193:18:23",
																"nodeType": "YulFunctionCall",
																"src": "14193:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14185:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "14185:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14232:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "14232:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14243:1:23",
																				"nodeType": "YulLiteral",
																				"src": "14243:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14228:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "14228:3:23"
																		},
																		"nativeSrc": "14228:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "14228:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14251:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "14251:4:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14257:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "14257:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14247:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "14247:3:23"
																		},
																		"nativeSrc": "14247:20:23",
																		"nodeType": "YulFunctionCall",
																		"src": "14247:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14221:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "14221:6:23"
																},
																"nativeSrc": "14221:47:23",
																"nodeType": "YulFunctionCall",
																"src": "14221:47:23"
															},
															"nativeSrc": "14221:47:23",
															"nodeType": "YulExpressionStatement",
															"src": "14221:47:23"
														},
														{
															"nativeSrc": "14277:139:23",
															"nodeType": "YulAssignment",
															"src": "14277:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14411:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "14411:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14285:124:23",
																	"nodeType": "YulIdentifier",
																	"src": "14285:124:23"
																},
																"nativeSrc": "14285:131:23",
																"nodeType": "YulFunctionCall",
																"src": "14285:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14277:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "14277:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14004:419:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14155:9:23",
														"nodeType": "YulTypedName",
														"src": "14155:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14170:4:23",
														"nodeType": "YulTypedName",
														"src": "14170:4:23",
														"type": ""
													}
												],
												"src": "14004:419:23"
											},
											{
												"body": {
													"nativeSrc": "14474:149:23",
													"nodeType": "YulBlock",
													"src": "14474:149:23",
													"statements": [
														{
															"nativeSrc": "14484:25:23",
															"nodeType": "YulAssignment",
															"src": "14484:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14507:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14507:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14489:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "14489:17:23"
																},
																"nativeSrc": "14489:20:23",
																"nodeType": "YulFunctionCall",
																"src": "14489:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14484:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "14484:1:23"
																}
															]
														},
														{
															"nativeSrc": "14518:25:23",
															"nodeType": "YulAssignment",
															"src": "14518:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14541:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14541:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14523:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "14523:17:23"
																},
																"nativeSrc": "14523:20:23",
																"nodeType": "YulFunctionCall",
																"src": "14523:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14518:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "14518:1:23"
																}
															]
														},
														{
															"nativeSrc": "14552:17:23",
															"nodeType": "YulAssignment",
															"src": "14552:17:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14564:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14564:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14567:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14567:1:23"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14560:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "14560:3:23"
																},
																"nativeSrc": "14560:9:23",
																"nodeType": "YulFunctionCall",
																"src": "14560:9:23"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14552:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "14552:4:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14594:22:23",
																"nodeType": "YulBlock",
																"src": "14594:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14596:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "14596:16:23"
																			},
																			"nativeSrc": "14596:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "14596:18:23"
																		},
																		"nativeSrc": "14596:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "14596:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14585:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "14585:4:23"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14591:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14591:1:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14582:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "14582:2:23"
																},
																"nativeSrc": "14582:11:23",
																"nodeType": "YulFunctionCall",
																"src": "14582:11:23"
															},
															"nativeSrc": "14579:37:23",
															"nodeType": "YulIf",
															"src": "14579:37:23"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14429:194:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14460:1:23",
														"nodeType": "YulTypedName",
														"src": "14460:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14463:1:23",
														"nodeType": "YulTypedName",
														"src": "14463:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14469:4:23",
														"nodeType": "YulTypedName",
														"src": "14469:4:23",
														"type": ""
													}
												],
												"src": "14429:194:23"
											},
											{
												"body": {
													"nativeSrc": "14694:53:23",
													"nodeType": "YulBlock",
													"src": "14694:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14711:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "14711:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14734:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "14734:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14716:17:23",
																			"nodeType": "YulIdentifier",
																			"src": "14716:17:23"
																		},
																		"nativeSrc": "14716:24:23",
																		"nodeType": "YulFunctionCall",
																		"src": "14716:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14704:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "14704:6:23"
																},
																"nativeSrc": "14704:37:23",
																"nodeType": "YulFunctionCall",
																"src": "14704:37:23"
															},
															"nativeSrc": "14704:37:23",
															"nodeType": "YulExpressionStatement",
															"src": "14704:37:23"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "14629:118:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14682:5:23",
														"nodeType": "YulTypedName",
														"src": "14682:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14689:3:23",
														"nodeType": "YulTypedName",
														"src": "14689:3:23",
														"type": ""
													}
												],
												"src": "14629:118:23"
											},
											{
												"body": {
													"nativeSrc": "14907:288:23",
													"nodeType": "YulBlock",
													"src": "14907:288:23",
													"statements": [
														{
															"nativeSrc": "14917:26:23",
															"nodeType": "YulAssignment",
															"src": "14917:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14929:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "14929:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14940:2:23",
																		"nodeType": "YulLiteral",
																		"src": "14940:2:23",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14925:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "14925:3:23"
																},
																"nativeSrc": "14925:18:23",
																"nodeType": "YulFunctionCall",
																"src": "14925:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14917:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "14917:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14997:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "14997:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15010:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "15010:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15021:1:23",
																				"nodeType": "YulLiteral",
																				"src": "15021:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15006:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "15006:3:23"
																		},
																		"nativeSrc": "15006:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "15006:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14953:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "14953:43:23"
																},
																"nativeSrc": "14953:71:23",
																"nodeType": "YulFunctionCall",
																"src": "14953:71:23"
															},
															"nativeSrc": "14953:71:23",
															"nodeType": "YulExpressionStatement",
															"src": "14953:71:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15078:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "15078:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15091:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "15091:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15102:2:23",
																				"nodeType": "YulLiteral",
																				"src": "15102:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15087:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "15087:3:23"
																		},
																		"nativeSrc": "15087:18:23",
																		"nodeType": "YulFunctionCall",
																		"src": "15087:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15034:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "15034:43:23"
																},
																"nativeSrc": "15034:72:23",
																"nodeType": "YulFunctionCall",
																"src": "15034:72:23"
															},
															"nativeSrc": "15034:72:23",
															"nodeType": "YulExpressionStatement",
															"src": "15034:72:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15160:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "15160:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15173:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "15173:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15184:2:23",
																				"nodeType": "YulLiteral",
																				"src": "15184:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15169:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "15169:3:23"
																		},
																		"nativeSrc": "15169:18:23",
																		"nodeType": "YulFunctionCall",
																		"src": "15169:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15116:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "15116:43:23"
																},
																"nativeSrc": "15116:72:23",
																"nodeType": "YulFunctionCall",
																"src": "15116:72:23"
															},
															"nativeSrc": "15116:72:23",
															"nodeType": "YulExpressionStatement",
															"src": "15116:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14753:442:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14863:9:23",
														"nodeType": "YulTypedName",
														"src": "14863:9:23",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14875:6:23",
														"nodeType": "YulTypedName",
														"src": "14875:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14883:6:23",
														"nodeType": "YulTypedName",
														"src": "14883:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14891:6:23",
														"nodeType": "YulTypedName",
														"src": "14891:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14902:4:23",
														"nodeType": "YulTypedName",
														"src": "14902:4:23",
														"type": ""
													}
												],
												"src": "14753:442:23"
											},
											{
												"body": {
													"nativeSrc": "15299:124:23",
													"nodeType": "YulBlock",
													"src": "15299:124:23",
													"statements": [
														{
															"nativeSrc": "15309:26:23",
															"nodeType": "YulAssignment",
															"src": "15309:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15321:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "15321:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15332:2:23",
																		"nodeType": "YulLiteral",
																		"src": "15332:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15317:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "15317:3:23"
																},
																"nativeSrc": "15317:18:23",
																"nodeType": "YulFunctionCall",
																"src": "15317:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15309:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "15309:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15389:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "15389:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15402:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "15402:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15413:1:23",
																				"nodeType": "YulLiteral",
																				"src": "15413:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15398:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "15398:3:23"
																		},
																		"nativeSrc": "15398:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "15398:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15345:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "15345:43:23"
																},
																"nativeSrc": "15345:71:23",
																"nodeType": "YulFunctionCall",
																"src": "15345:71:23"
															},
															"nativeSrc": "15345:71:23",
															"nodeType": "YulExpressionStatement",
															"src": "15345:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "15201:222:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15271:9:23",
														"nodeType": "YulTypedName",
														"src": "15271:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15283:6:23",
														"nodeType": "YulTypedName",
														"src": "15283:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15294:4:23",
														"nodeType": "YulTypedName",
														"src": "15294:4:23",
														"type": ""
													}
												],
												"src": "15201:222:23"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct CSYDToken.TeamMember\n    function abi_decode_t_struct$_TeamMember_$213_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // memberAddress\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // investmentAmount\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct CSYDToken.TeamMember[]\n    function abi_decode_available_length_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x40))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x40) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_TeamMember_$213_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct CSYDToken.TeamMember[]\n    function abi_decode_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"At least one team member require\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total distribution exceeds marke\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051612a45380380612a45833981810160405281019061003191906109db565b336040518060400160405280600481526020017f63737964000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f435359440000000000000000000000000000000000000000000000000000000081525081600390816100ad9190610c3c565b5080600490816100bd9190610c3c565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610d1a565b60405180910390fd5b61013f8161043b60201b60201c565b505f825111610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a90610db3565b60405180910390fd5b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f5f90505f5f90505b83518110156102a1578381815181106101e8576101e7610dd1565b5b602002602001015160200151826101ff9190610e2b565b9150600684828151811061021657610215610dd1565b5b6020026020010151908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505080806001019150506101cc565b505f606460506a9b18ab5df7180b6b8000006102bd9190610e5e565b6102c79190610ecc565b90505f5f90505f5f90505b600680549050811015610389575f8484600684815481106102f6576102f5610dd1565b5b905f5260205f209060020201600101546103109190610e5e565b61031a9190610ecc565b905061036d6006838154811061033357610332610dd1565b5b905f5260205f2090600202015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826104fe60201b60201c565b80836103799190610e2b565b92505080806001019150506102d2565b50818111156103cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c490610f6c565b60405180910390fd5b6103e83382846103dd9190610f8a565b6104fe60201b60201c565b61041b306064600a6a9b18ab5df7180b6b8000006104069190610e5e565b6104109190610ecc565b6104fe60201b60201c565b6305a39a804261042b9190610e2b565b600781905550505050505061101a565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361056e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105659190610d1a565b60405180910390fd5b61057f5f838361058360201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105d3578060025f8282546105c79190610e2b565b925050819055506106a1565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561065c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161065393929190610fcc565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106e8578060025f8282540392505081905550610732565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161078f9190611001565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6107f7826107b1565b810181811067ffffffffffffffff82111715610816576108156107c1565b5b80604052505050565b5f61082861079c565b905061083482826107ee565b919050565b5f67ffffffffffffffff821115610853576108526107c1565b5b602082029050602081019050919050565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108958261086c565b9050919050565b6108a58161088b565b81146108af575f5ffd5b50565b5f815190506108c08161089c565b92915050565b5f819050919050565b6108d8816108c6565b81146108e2575f5ffd5b50565b5f815190506108f3816108cf565b92915050565b5f6040828403121561090e5761090d610868565b5b610918604061081f565b90505f610927848285016108b2565b5f83015250602061093a848285016108e5565b60208301525092915050565b5f61095861095384610839565b61081f565b9050808382526020820190506040840283018581111561097b5761097a610864565b5b835b818110156109a4578061099088826108f9565b84526020840193505060408101905061097d565b5050509392505050565b5f82601f8301126109c2576109c16107ad565b5b81516109d2848260208601610946565b91505092915050565b5f5f604083850312156109f1576109f06107a5565b5b5f83015167ffffffffffffffff811115610a0e57610a0d6107a9565b5b610a1a858286016109ae565b9250506020610a2b858286016108b2565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610a8357607f821691505b602082108103610a9657610a95610a3f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610af87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610abd565b610b028683610abd565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610b3d610b38610b33846108c6565b610b1a565b6108c6565b9050919050565b5f819050919050565b610b5683610b23565b610b6a610b6282610b44565b848454610ac9565b825550505050565b5f5f905090565b610b81610b72565b610b8c818484610b4d565b505050565b5b81811015610baf57610ba45f82610b79565b600181019050610b92565b5050565b601f821115610bf457610bc581610a9c565b610bce84610aae565b81016020851015610bdd578190505b610bf1610be985610aae565b830182610b91565b50505b505050565b5f82821c905092915050565b5f610c145f1984600802610bf9565b1980831691505092915050565b5f610c2c8383610c05565b9150826002028217905092915050565b610c4582610a35565b67ffffffffffffffff811115610c5e57610c5d6107c1565b5b610c688254610a6c565b610c73828285610bb3565b5f60209050601f831160018114610ca4575f8415610c92578287015190505b610c9c8582610c21565b865550610d03565b601f198416610cb286610a9c565b5f5b82811015610cd957848901518255600182019150602085019450602081019050610cb4565b86831015610cf65784890151610cf2601f891682610c05565b8355505b6001600288020188555050505b505050505050565b610d148161088b565b82525050565b5f602082019050610d2d5f830184610d0b565b92915050565b5f82825260208201905092915050565b7f4174206c65617374206f6e65207465616d206d656d62657220726571756972655f8201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b5f610d9d602183610d33565b9150610da882610d43565b604082019050919050565b5f6020820190508181035f830152610dca81610d91565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e35826108c6565b9150610e40836108c6565b9250828201905080821115610e5857610e57610dfe565b5b92915050565b5f610e68826108c6565b9150610e73836108c6565b9250828202610e81816108c6565b91508282048414831517610e9857610e97610dfe565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610ed6826108c6565b9150610ee1836108c6565b925082610ef157610ef0610e9f565b5b828204905092915050565b7f546f74616c20646973747269627574696f6e2065786365656473206d61726b655f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f56602183610d33565b9150610f6182610efc565b604082019050919050565b5f6020820190508181035f830152610f8381610f4a565b9050919050565b5f610f94826108c6565b9150610f9f836108c6565b9250828203905081811115610fb757610fb6610dfe565b5b92915050565b610fc6816108c6565b82525050565b5f606082019050610fdf5f830186610d0b565b610fec6020830185610fbd565b610ff96040830184610fbd565b949350505050565b5f6020820190506110145f830184610fbd565b92915050565b611a1e806110275f395ff3fe608060405234801561000f575f5ffd5b506004361061012a575f3560e01c806388e56ec6116100ab578063bdd3d8251161006f578063bdd3d82514610337578063dd62ed3e14610355578063eb91d37e14610385578063efded147146103a3578063f2fde38b146103c15761012a565b806388e56ec61461027c5780638da5cb5b146102ad578063902d55a5146102cb57806395d89b41146102e9578063a9059cbb146103075761012a565b8063313ce567116100f2578063313ce567146101e8578063359289981461020657806370a0823114610224578063715018a61461025457806376ae9b2d1461025e5761012a565b806306fdde031461012e578063095ea7b31461014c57806318160ddd1461017c57806319ca43ab1461019a57806323b872dd146101b8575b5f5ffd5b6101366103dd565b604051610143919061120f565b60405180910390f35b610166600480360381019061016191906112c0565b61046d565b6040516101739190611318565b60405180910390f35b61018461048f565b6040516101919190611340565b60405180910390f35b6101a2610498565b6040516101af9190611340565b60405180910390f35b6101d260048036038101906101cd9190611359565b6104a4565b6040516101df9190611318565b60405180910390f35b6101f0610513565b6040516101fd91906113c4565b60405180910390f35b61020e61051b565b60405161021b9190611340565b60405180910390f35b61023e600480360381019061023991906113dd565b610523565b60405161024b9190611340565b60405180910390f35b61025c610568565b005b61026661057b565b6040516102739190611340565b60405180910390f35b61029660048036038101906102919190611408565b610581565b6040516102a4929190611442565b60405180910390f35b6102b5610669565b6040516102c29190611469565b60405180910390f35b6102d3610691565b6040516102e09190611340565b60405180910390f35b6102f16106a0565b6040516102fe919061120f565b60405180910390f35b610321600480360381019061031c91906112c0565b610730565b60405161032e9190611318565b60405180910390f35b61033f61079d565b60405161034c9190611469565b60405180910390f35b61036f600480360381019061036a9190611482565b6107c2565b60405161037c9190611340565b60405180910390f35b61038d610844565b60405161039a9190611340565b60405180910390f35b6103ab610943565b6040516103b891906115b3565b60405180910390f35b6103db60048036038101906103d691906113dd565b6109fd565b005b6060600380546103ec90611600565b80601f016020809104026020016040519081016040528092919081815260200182805461041890611600565b80156104635780601f1061043a57610100808354040283529160200191610463565b820191905f5260205f20905b81548152906001019060200180831161044657829003601f168201915b5050505050905090565b5f5f610477610a81565b9050610484818585610a88565b600191505092915050565b5f600254905090565b5f600680549050905090565b5f81600754421015806104bf5750806104bc33610523565b10155b6104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f59061167a565b60405180910390fd5b610509858585610a9a565b9150509392505050565b5f6012905090565b6305a39a8081565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610570610ac8565b6105795f610b4f565b565b60075481565b5f5f60068054905083106105ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c1906116e2565b60405180910390fd5b5f600684815481106105df576105de611700565b5b905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050805f015181602001519250925050915091565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6a9b18ab5df7180b6b80000081565b6060600480546106af90611600565b80601f01602080910402602001604051908101604052809291908181526020018280546106db90611600565b80156107265780601f106106fd57610100808354040283529160200191610726565b820191905f5260205f20905b81548152906001019060200180831161070957829003601f168201915b5050505050905090565b5f816007544210158061074b57508061074833610523565b10155b61078a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107819061167a565b60405180910390fd5b6107948484610c12565b91505092915050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156108b4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108d89190611818565b505050505050905078010000000000000000000000000000000000000000000000008173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1661093291906118e2565b61093c9190611950565b9250505090565b60606006805480602002602001604051908101604052809291908181526020015f905b828210156109f4578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610966565b50505050905090565b610a05610ac8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a75575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a6c9190611469565b60405180910390fd5b610a7e81610b4f565b50565b5f33905090565b610a958383836001610c34565b505050565b5f5f610aa4610a81565b9050610ab1858285610e03565b610abc858585610e96565b60019150509392505050565b610ad0610a81565b73ffffffffffffffffffffffffffffffffffffffff16610aee610669565b73ffffffffffffffffffffffffffffffffffffffff1614610b4d57610b11610a81565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b449190611469565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f610c1c610a81565b9050610c29818585610e96565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ca4575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c9b9190611469565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d14575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d0b9190611469565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610dfd578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610df49190611340565b60405180910390a35b50505050565b5f610e0e84846107c2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610e905781811015610e81578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e7893929190611980565b60405180910390fd5b610e8f84848484035f610c34565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f06575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610efd9190611469565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f76575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f6d9190611469565b60405180910390fd5b610f81838383610f86565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fd6578060025f828254610fca91906119b5565b925050819055506110a4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561105f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161105693929190611980565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110eb578060025f8282540392505081905550611135565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111929190611340565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111e18261119f565b6111eb81856111a9565b93506111fb8185602086016111b9565b611204816111c7565b840191505092915050565b5f6020820190508181035f83015261122781846111d7565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61125c82611233565b9050919050565b61126c81611252565b8114611276575f5ffd5b50565b5f8135905061128781611263565b92915050565b5f819050919050565b61129f8161128d565b81146112a9575f5ffd5b50565b5f813590506112ba81611296565b92915050565b5f5f604083850312156112d6576112d561122f565b5b5f6112e385828601611279565b92505060206112f4858286016112ac565b9150509250929050565b5f8115159050919050565b611312816112fe565b82525050565b5f60208201905061132b5f830184611309565b92915050565b61133a8161128d565b82525050565b5f6020820190506113535f830184611331565b92915050565b5f5f5f606084860312156113705761136f61122f565b5b5f61137d86828701611279565b935050602061138e86828701611279565b925050604061139f868287016112ac565b9150509250925092565b5f60ff82169050919050565b6113be816113a9565b82525050565b5f6020820190506113d75f8301846113b5565b92915050565b5f602082840312156113f2576113f161122f565b5b5f6113ff84828501611279565b91505092915050565b5f6020828403121561141d5761141c61122f565b5b5f61142a848285016112ac565b91505092915050565b61143c81611252565b82525050565b5f6040820190506114555f830185611433565b6114626020830184611331565b9392505050565b5f60208201905061147c5f830184611433565b92915050565b5f5f604083850312156114985761149761122f565b5b5f6114a585828601611279565b92505060206114b685828601611279565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6114f281611252565b82525050565b6115018161128d565b82525050565b604082015f82015161151b5f8501826114e9565b50602082015161152e60208501826114f8565b50505050565b5f61153f8383611507565b60408301905092915050565b5f602082019050919050565b5f611561826114c0565b61156b81856114ca565b9350611576836114da565b805f5b838110156115a657815161158d8882611534565b97506115988361154b565b925050600181019050611579565b5085935050505092915050565b5f6020820190508181035f8301526115cb8184611557565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061161757607f821691505b60208210810361162a576116296115d3565b5b50919050565b7f5465616d20746f6b656e7320617265206c6f636b6564000000000000000000005f82015250565b5f6116646016836111a9565b915061166f82611630565b602082019050919050565b5f6020820190508181035f83015261169181611658565b9050919050565b7f496e646578206f7574206f6620626f756e6473000000000000000000000000005f82015250565b5f6116cc6013836111a9565b91506116d782611698565b602082019050919050565b5f6020820190508181035f8301526116f9816116c0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b61173681611233565b8114611740575f5ffd5b50565b5f815190506117518161172d565b92915050565b5f8160020b9050919050565b61176c81611757565b8114611776575f5ffd5b50565b5f8151905061178781611763565b92915050565b5f61ffff82169050919050565b6117a38161178d565b81146117ad575f5ffd5b50565b5f815190506117be8161179a565b92915050565b6117cd816113a9565b81146117d7575f5ffd5b50565b5f815190506117e8816117c4565b92915050565b6117f7816112fe565b8114611801575f5ffd5b50565b5f81519050611812816117ee565b92915050565b5f5f5f5f5f5f5f60e0888a0312156118335761183261122f565b5b5f6118408a828b01611743565b97505060206118518a828b01611779565b96505060406118628a828b016117b0565b95505060606118738a828b016117b0565b94505060806118848a828b016117b0565b93505060a06118958a828b016117da565b92505060c06118a68a828b01611804565b91505092959891949750929550565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118ec8261128d565b91506118f78361128d565b92508282026119058161128d565b9150828204841483151761191c5761191b6118b5565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61195a8261128d565b91506119658361128d565b92508261197557611974611923565b5b828204905092915050565b5f6060820190506119935f830186611433565b6119a06020830185611331565b6119ad6040830184611331565b949350505050565b5f6119bf8261128d565b91506119ca8361128d565b92508282019050808211156119e2576119e16118b5565b5b9291505056fea264697066735822122088a0fac46f0416773b1c6079ee7fbc85dd2ff5eb19b7f105cbc3a4ab1e45027064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2A45 CODESIZE SUB DUP1 PUSH2 0x2A45 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x9DB JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6373796400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4353594400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x43B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP3 MLOAD GT PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2A1 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E8 JUMPI PUSH2 0x1E7 PUSH2 0xDD1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xE2B JUMP JUMPDEST SWAP2 POP PUSH1 0x6 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0xDD1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1CC JUMP JUMPDEST POP PUSH0 PUSH1 0x64 PUSH1 0x50 PUSH11 0x9B18AB5DF7180B6B800000 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0xE5E JUMP JUMPDEST PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0xECC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x389 JUMPI PUSH0 DUP5 DUP5 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2F6 JUMPI PUSH2 0x2F5 PUSH2 0xDD1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0xE5E JUMP JUMPDEST PUSH2 0x31A SWAP2 SWAP1 PUSH2 0xECC JUMP JUMPDEST SWAP1 POP PUSH2 0x36D PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x333 JUMPI PUSH2 0x332 PUSH2 0xDD1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x4FE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 DUP4 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0xE2B JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2D2 JUMP JUMPDEST POP DUP2 DUP2 GT ISZERO PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C4 SWAP1 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 CALLER DUP3 DUP5 PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x41B ADDRESS PUSH1 0x64 PUSH1 0xA PUSH11 0x9B18AB5DF7180B6B800000 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0xE5E JUMP JUMPDEST PUSH2 0x410 SWAP2 SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH4 0x5A39A80 TIMESTAMP PUSH2 0x42B SWAP2 SWAP1 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x101A JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x56E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x565 SWAP2 SWAP1 PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57F PUSH0 DUP4 DUP4 PUSH2 0x583 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0xE2B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6A1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x65C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x732 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x7F7 DUP3 PUSH2 0x7B1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x816 JUMPI PUSH2 0x815 PUSH2 0x7C1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x828 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH2 0x834 DUP3 DUP3 PUSH2 0x7EE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x853 JUMPI PUSH2 0x852 PUSH2 0x7C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x895 DUP3 PUSH2 0x86C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A5 DUP2 PUSH2 0x88B JUMP JUMPDEST DUP2 EQ PUSH2 0x8AF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8C0 DUP2 PUSH2 0x89C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D8 DUP2 PUSH2 0x8C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8F3 DUP2 PUSH2 0x8CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90E JUMPI PUSH2 0x90D PUSH2 0x868 JUMP JUMPDEST JUMPDEST PUSH2 0x918 PUSH1 0x40 PUSH2 0x81F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x927 DUP5 DUP3 DUP6 ADD PUSH2 0x8B2 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x93A DUP5 DUP3 DUP6 ADD PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x958 PUSH2 0x953 DUP5 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x40 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x97B JUMPI PUSH2 0x97A PUSH2 0x864 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A4 JUMPI DUP1 PUSH2 0x990 DUP9 DUP3 PUSH2 0x8F9 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x40 DUP2 ADD SWAP1 POP PUSH2 0x97D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9C2 JUMPI PUSH2 0x9C1 PUSH2 0x7AD JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x9D2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x946 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F1 JUMPI PUSH2 0x9F0 PUSH2 0x7A5 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0E JUMPI PUSH2 0xA0D PUSH2 0x7A9 JUMP JUMPDEST JUMPDEST PUSH2 0xA1A DUP6 DUP3 DUP7 ADD PUSH2 0x9AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA2B DUP6 DUP3 DUP7 ADD PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xA83 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA96 JUMPI PUSH2 0xA95 PUSH2 0xA3F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xAF8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xABD JUMP JUMPDEST PUSH2 0xB02 DUP7 DUP4 PUSH2 0xABD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB3D PUSH2 0xB38 PUSH2 0xB33 DUP5 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB56 DUP4 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB6A PUSH2 0xB62 DUP3 PUSH2 0xB44 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xAC9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB81 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0xB8C DUP2 DUP5 DUP5 PUSH2 0xB4D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBAF JUMPI PUSH2 0xBA4 PUSH0 DUP3 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB92 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xBF4 JUMPI PUSH2 0xBC5 DUP2 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xBCE DUP5 PUSH2 0xAAE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xBDD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xBF1 PUSH2 0xBE9 DUP6 PUSH2 0xAAE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xB91 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC14 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xBF9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC2C DUP4 DUP4 PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC45 DUP3 PUSH2 0xA35 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC5E JUMPI PUSH2 0xC5D PUSH2 0x7C1 JUMP JUMPDEST JUMPDEST PUSH2 0xC68 DUP3 SLOAD PUSH2 0xA6C JUMP JUMPDEST PUSH2 0xC73 DUP3 DUP3 DUP6 PUSH2 0xBB3 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xCA4 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xC92 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xC9C DUP6 DUP3 PUSH2 0xC21 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xCB2 DUP7 PUSH2 0xA9C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xCD9 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCB4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xCF6 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xCF2 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xC05 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD14 DUP2 PUSH2 0x88B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD2D PUSH0 DUP4 ADD DUP5 PUSH2 0xD0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4174206C65617374206F6E65207465616D206D656D6265722072657175697265 PUSH0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD9D PUSH1 0x21 DUP4 PUSH2 0xD33 JUMP JUMPDEST SWAP2 POP PUSH2 0xDA8 DUP3 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDCA DUP2 PUSH2 0xD91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE35 DUP3 PUSH2 0x8C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE40 DUP4 PUSH2 0x8C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE58 JUMPI PUSH2 0xE57 PUSH2 0xDFE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE68 DUP3 PUSH2 0x8C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE73 DUP4 PUSH2 0x8C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE81 DUP2 PUSH2 0x8C6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE98 JUMPI PUSH2 0xE97 PUSH2 0xDFE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xED6 DUP3 PUSH2 0x8C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE1 DUP4 PUSH2 0x8C6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xEF1 JUMPI PUSH2 0xEF0 PUSH2 0xE9F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20646973747269627574696F6E2065786365656473206D61726B65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF56 PUSH1 0x21 DUP4 PUSH2 0xD33 JUMP JUMPDEST SWAP2 POP PUSH2 0xF61 DUP3 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF83 DUP2 PUSH2 0xF4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF94 DUP3 PUSH2 0x8C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF9F DUP4 PUSH2 0x8C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFB7 JUMPI PUSH2 0xFB6 PUSH2 0xDFE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFC6 DUP2 PUSH2 0x8C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFDF PUSH0 DUP4 ADD DUP7 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xFEC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0xFF9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFBD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1014 PUSH0 DUP4 ADD DUP5 PUSH2 0xFBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A1E DUP1 PUSH2 0x1027 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88E56EC6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xBDD3D825 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xEFDED147 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C1 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x88E56EC6 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x307 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x35928998 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x76AE9B2D EQ PUSH2 0x25E JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x19CA43AB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH2 0x568 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1442 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH2 0x79D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AB PUSH2 0x943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0x1600 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x418 SWAP1 PUSH2 0x1600 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x463 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x463 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x446 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x477 PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP PUSH2 0x484 DUP2 DUP6 DUP6 PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x4BF JUMPI POP DUP1 PUSH2 0x4BC CALLER PUSH2 0x523 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x509 DUP6 DUP6 DUP6 PUSH2 0xA9A JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x5A39A80 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x570 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x579 PUSH0 PUSH2 0xB4F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C1 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5DF JUMPI PUSH2 0x5DE PUSH2 0x1700 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x9B18AB5DF7180B6B800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6AF SWAP1 PUSH2 0x1600 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6DB SWAP1 PUSH2 0x1600 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x726 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x726 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x709 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x74B JUMPI POP DUP1 PUSH2 0x748 CALLER PUSH2 0x523 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x781 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x794 DUP5 DUP5 PUSH2 0xC12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0x1818 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH25 0x1000000000000000000000000000000000000000000000000 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x932 SWAP2 SWAP1 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x9F4 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA05 PUSH2 0xAC8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA75 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6C SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7E DUP2 PUSH2 0xB4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA95 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC34 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAA4 PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP PUSH2 0xAB1 DUP6 DUP3 DUP6 PUSH2 0xE03 JUMP JUMPDEST PUSH2 0xABC DUP6 DUP6 DUP6 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAD0 PUSH2 0xA81 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAEE PUSH2 0x669 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB4D JUMPI PUSH2 0xB11 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB44 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xC1C PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP PUSH2 0xC29 DUP2 DUP6 DUP6 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9B SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD14 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDFD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDF4 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE0E DUP5 DUP5 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xE90 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE81 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE8F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF06 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFD SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6D SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF81 DUP4 DUP4 DUP4 PUSH2 0xF86 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x19B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10A4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x105F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1056 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1135 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1192 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11E1 DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x11EB DUP2 DUP6 PUSH2 0x11A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x11FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B9 JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0x11C7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1227 DUP2 DUP5 PUSH2 0x11D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x125C DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126C DUP2 PUSH2 0x1252 JUMP JUMPDEST DUP2 EQ PUSH2 0x1276 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1287 DUP2 PUSH2 0x1263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129F DUP2 PUSH2 0x128D JUMP JUMPDEST DUP2 EQ PUSH2 0x12A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12BA DUP2 PUSH2 0x1296 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D6 JUMPI PUSH2 0x12D5 PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E3 DUP6 DUP3 DUP7 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12F4 DUP6 DUP3 DUP7 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1312 DUP2 PUSH2 0x12FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132B PUSH0 DUP4 ADD DUP5 PUSH2 0x1309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133A DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1353 PUSH0 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x136F PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x137D DUP7 DUP3 DUP8 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x138E DUP7 DUP3 DUP8 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x139F DUP7 DUP3 DUP8 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BE DUP2 PUSH2 0x13A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x13B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F2 JUMPI PUSH2 0x13F1 PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13FF DUP5 DUP3 DUP6 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141D JUMPI PUSH2 0x141C PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x142A DUP5 DUP3 DUP6 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x143C DUP2 PUSH2 0x1252 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1455 PUSH0 DUP4 ADD DUP6 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x1462 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x147C PUSH0 DUP4 ADD DUP5 PUSH2 0x1433 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1498 JUMPI PUSH2 0x1497 PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F2 DUP2 PUSH2 0x1252 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1501 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x151B PUSH0 DUP6 ADD DUP3 PUSH2 0x14E9 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x152E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x14F8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x153F DUP4 DUP4 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1561 DUP3 PUSH2 0x14C0 JUMP JUMPDEST PUSH2 0x156B DUP2 DUP6 PUSH2 0x14CA JUMP JUMPDEST SWAP4 POP PUSH2 0x1576 DUP4 PUSH2 0x14DA JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A6 JUMPI DUP2 MLOAD PUSH2 0x158D DUP9 DUP3 PUSH2 0x1534 JUMP JUMPDEST SWAP8 POP PUSH2 0x1598 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15CB DUP2 DUP5 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1617 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x162A JUMPI PUSH2 0x1629 PUSH2 0x15D3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5465616D20746F6B656E7320617265206C6F636B656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1664 PUSH1 0x16 DUP4 PUSH2 0x11A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP3 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1691 DUP2 PUSH2 0x1658 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16CC PUSH1 0x13 DUP4 PUSH2 0x11A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x16D7 DUP3 PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16F9 DUP2 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1736 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP2 EQ PUSH2 0x1740 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1751 DUP2 PUSH2 0x172D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x176C DUP2 PUSH2 0x1757 JUMP JUMPDEST DUP2 EQ PUSH2 0x1776 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1787 DUP2 PUSH2 0x1763 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A3 DUP2 PUSH2 0x178D JUMP JUMPDEST DUP2 EQ PUSH2 0x17AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17BE DUP2 PUSH2 0x179A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17CD DUP2 PUSH2 0x13A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17E8 DUP2 PUSH2 0x17C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F7 DUP2 PUSH2 0x12FE JUMP JUMPDEST DUP2 EQ PUSH2 0x1801 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1812 DUP2 PUSH2 0x17EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1833 JUMPI PUSH2 0x1832 PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1840 DUP11 DUP3 DUP12 ADD PUSH2 0x1743 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1851 DUP11 DUP3 DUP12 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1862 DUP11 DUP3 DUP12 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1873 DUP11 DUP3 DUP12 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1884 DUP11 DUP3 DUP12 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1895 DUP11 DUP3 DUP12 ADD PUSH2 0x17DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x18A6 DUP11 DUP3 DUP12 ADD PUSH2 0x1804 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18EC DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP PUSH2 0x18F7 DUP4 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1905 DUP2 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x191C JUMPI PUSH2 0x191B PUSH2 0x18B5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x195A DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP PUSH2 0x1965 DUP4 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1975 JUMPI PUSH2 0x1974 PUSH2 0x1923 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1993 PUSH0 DUP4 ADD DUP7 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x19A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x19AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19BF DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP PUSH2 0x19CA DUP4 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19E2 JUMPI PUSH2 0x19E1 PUSH2 0x18B5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 LOG0 STATICCALL 0xC4 PUSH16 0x416773B1C6079EE7FBC85DD2FF5EB19 0xB7 CALL SDIV 0xCB 0xC3 LOG4 0xAB 0x1E GASLIMIT MUL PUSH17 0x64736F6C634300081E0033000000000000 ",
							"sourceMap": "2608:3678:4:-:0;;;3101:1662;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3218:10;1582:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:5;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3276:1:4::2;3254:12;:19;:23;3246:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3340:12;3326:11;;:26;;;;;;;;;;;;;;;;;;3365:23;3391:1;3365:27;;3461:9;3473:1;3461:13;;3456:198;3480:12;:19;3476:1;:23;3456:198;;;3540:12;3553:1;3540:15;;;;;;;;:::i;:::-;;;;;;;;:32;;;3521:51;;;;;:::i;:::-;;;3587:11;3604:12;3617:1;3604:15;;;;;;;;:::i;:::-;;;;;;;;3587:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3501:3;;;;;;;3456:198;;;;3666:14;3703:3;3698:2;2695:20;3683:17;;;;:::i;:::-;:23;;;;:::i;:::-;3666:40;;3736:25;3764:1;3736:29;;3814:9;3826:1;3814:13;;3809:281;3833:11;:18;;;;3829:1;:22;3809:281;;;3873:13;3934:15;3924:6;3890:11;3902:1;3890:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:31;;;:40;;;;:::i;:::-;3889:60;;;;:::i;:::-;3873:76;;3995:42;4001:11;4013:1;4001:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;;;;;;;;;;4031:5;3995;;;:42;;:::i;:::-;4073:5;4052:26;;;;;:::i;:::-;;;3858:232;3853:3;;;;;;;3809:281;;;;4189:6;4168:17;:27;;4160:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4246:45;4252:10;4273:17;4264:6;:26;;;;:::i;:::-;4246:5;;;:45;;:::i;:::-;4348;4362:4;4389:3;4384:2;2695:20;4369:17;;;;:::i;:::-;:23;;;;:::i;:::-;4348:5;;;:45;;:::i;:::-;2780:12;4440:15;:34;;;;:::i;:::-;4422:15;:52;;;;3235:1528;;;3101:1662:::0;;2608:3678;;2912:187:5;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7362:208:7:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:75:23:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:338::-;1277:4;1367:18;1359:6;1356:30;1353:56;;;1389:18;;:::i;:::-;1353:56;1439:4;1431:6;1427:17;1419:25;;1499:4;1493;1489:15;1481:23;;1173:338;;;:::o;1517:117::-;1626:1;1623;1616:12;1640:117;1749:1;1746;1739:12;1886:126;1923:7;1963:42;1956:5;1952:54;1941:65;;1886:126;;;:::o;2018:96::-;2055:7;2084:24;2102:5;2084:24;:::i;:::-;2073:35;;2018:96;;;:::o;2120:122::-;2193:24;2211:5;2193:24;:::i;:::-;2186:5;2183:35;2173:63;;2232:1;2229;2222:12;2173:63;2120:122;:::o;2248:143::-;2305:5;2336:6;2330:13;2321:22;;2352:33;2379:5;2352:33;:::i;:::-;2248:143;;;;:::o;2397:77::-;2434:7;2463:5;2452:16;;2397:77;;;:::o;2480:122::-;2553:24;2571:5;2553:24;:::i;:::-;2546:5;2543:35;2533:63;;2592:1;2589;2582:12;2533:63;2480:122;:::o;2608:143::-;2665:5;2696:6;2690:13;2681:22;;2712:33;2739:5;2712:33;:::i;:::-;2608:143;;;;:::o;2792:630::-;2879:5;2923:4;2911:9;2906:3;2902:19;2898:30;2895:117;;;2931:79;;:::i;:::-;2895:117;3030:21;3046:4;3030:21;:::i;:::-;3021:30;;3119:1;3159:60;3215:3;3206:6;3195:9;3191:22;3159:60;:::i;:::-;3152:4;3145:5;3141:16;3134:86;3061:170;3302:2;3343:60;3399:3;3390:6;3379:9;3375:22;3343:60;:::i;:::-;3336:4;3329:5;3325:16;3318:86;3241:174;2792:630;;;;:::o;3465:813::-;3599:5;3624:108;3640:91;3724:6;3640:91;:::i;:::-;3624:108;:::i;:::-;3615:117;;3752:5;3781:6;3774:5;3767:21;3815:4;3808:5;3804:16;3797:23;;3868:4;3860:6;3856:17;3848:6;3844:30;3897:3;3889:6;3886:15;3883:122;;;3916:79;;:::i;:::-;3883:122;4031:6;4014:258;4048:6;4043:3;4040:15;4014:258;;;4123:3;4152:75;4223:3;4211:10;4152:75;:::i;:::-;4147:3;4140:88;4257:4;4252:3;4248:14;4241:21;;4090:182;4074:4;4069:3;4065:14;4058:21;;4014:258;;;4018:21;3605:673;;3465:813;;;;;:::o;4321:439::-;4430:5;4479:3;4472:4;4464:6;4460:17;4456:27;4446:122;;4487:79;;:::i;:::-;4446:122;4597:6;4591:13;4622:132;4750:3;4742:6;4735:4;4727:6;4723:17;4622:132;:::i;:::-;4613:141;;4436:324;4321:439;;;;:::o;4766:764::-;4897:6;4905;4954:2;4942:9;4933:7;4929:23;4925:32;4922:119;;;4960:79;;:::i;:::-;4922:119;5101:1;5090:9;5086:17;5080:24;5131:18;5123:6;5120:30;5117:117;;;5153:79;;:::i;:::-;5117:117;5258:116;5366:7;5357:6;5346:9;5342:22;5258:116;:::i;:::-;5248:126;;5051:333;5423:2;5449:64;5505:7;5496:6;5485:9;5481:22;5449:64;:::i;:::-;5439:74;;5394:129;4766:764;;;;;:::o;5536:99::-;5588:6;5622:5;5616:12;5606:22;;5536:99;;;:::o;5641:180::-;5689:77;5686:1;5679:88;5786:4;5783:1;5776:15;5810:4;5807:1;5800:15;5827:320;5871:6;5908:1;5902:4;5898:12;5888:22;;5955:1;5949:4;5945:12;5976:18;5966:81;;6032:4;6024:6;6020:17;6010:27;;5966:81;6094:2;6086:6;6083:14;6063:18;6060:38;6057:84;;6113:18;;:::i;:::-;6057:84;5878:269;5827:320;;;:::o;6153:141::-;6202:4;6225:3;6217:11;;6248:3;6245:1;6238:14;6282:4;6279:1;6269:18;6261:26;;6153:141;;;:::o;6300:93::-;6337:6;6384:2;6379;6372:5;6368:14;6364:23;6354:33;;6300:93;;;:::o;6399:107::-;6443:8;6493:5;6487:4;6483:16;6462:37;;6399:107;;;;:::o;6512:393::-;6581:6;6631:1;6619:10;6615:18;6654:97;6684:66;6673:9;6654:97;:::i;:::-;6772:39;6802:8;6791:9;6772:39;:::i;:::-;6760:51;;6844:4;6840:9;6833:5;6829:21;6820:30;;6893:4;6883:8;6879:19;6872:5;6869:30;6859:40;;6588:317;;6512:393;;;;;:::o;6911:60::-;6939:3;6960:5;6953:12;;6911:60;;;:::o;6977:142::-;7027:9;7060:53;7078:34;7087:24;7105:5;7087:24;:::i;:::-;7078:34;:::i;:::-;7060:53;:::i;:::-;7047:66;;6977:142;;;:::o;7125:75::-;7168:3;7189:5;7182:12;;7125:75;;;:::o;7206:269::-;7316:39;7347:7;7316:39;:::i;:::-;7377:91;7426:41;7450:16;7426:41;:::i;:::-;7418:6;7411:4;7405:11;7377:91;:::i;:::-;7371:4;7364:105;7282:193;7206:269;;;:::o;7481:73::-;7526:3;7547:1;7540:8;;7481:73;:::o;7560:189::-;7637:32;;:::i;:::-;7678:65;7736:6;7728;7722:4;7678:65;:::i;:::-;7613:136;7560:189;;:::o;7755:186::-;7815:120;7832:3;7825:5;7822:14;7815:120;;;7886:39;7923:1;7916:5;7886:39;:::i;:::-;7859:1;7852:5;7848:13;7839:22;;7815:120;;;7755:186;;:::o;7947:543::-;8048:2;8043:3;8040:11;8037:446;;;8082:38;8114:5;8082:38;:::i;:::-;8166:29;8184:10;8166:29;:::i;:::-;8156:8;8152:44;8349:2;8337:10;8334:18;8331:49;;;8370:8;8355:23;;8331:49;8393:80;8449:22;8467:3;8449:22;:::i;:::-;8439:8;8435:37;8422:11;8393:80;:::i;:::-;8052:431;;8037:446;7947:543;;;:::o;8496:117::-;8550:8;8600:5;8594:4;8590:16;8569:37;;8496:117;;;;:::o;8619:169::-;8663:6;8696:51;8744:1;8740:6;8732:5;8729:1;8725:13;8696:51;:::i;:::-;8692:56;8777:4;8771;8767:15;8757:25;;8670:118;8619:169;;;;:::o;8793:295::-;8869:4;9015:29;9040:3;9034:4;9015:29;:::i;:::-;9007:37;;9077:3;9074:1;9070:11;9064:4;9061:21;9053:29;;8793:295;;;;:::o;9093:1395::-;9210:37;9243:3;9210:37;:::i;:::-;9312:18;9304:6;9301:30;9298:56;;;9334:18;;:::i;:::-;9298:56;9378:38;9410:4;9404:11;9378:38;:::i;:::-;9463:67;9523:6;9515;9509:4;9463:67;:::i;:::-;9557:1;9581:4;9568:17;;9613:2;9605:6;9602:14;9630:1;9625:618;;;;10287:1;10304:6;10301:77;;;10353:9;10348:3;10344:19;10338:26;10329:35;;10301:77;10404:67;10464:6;10457:5;10404:67;:::i;:::-;10398:4;10391:81;10260:222;9595:887;;9625:618;9677:4;9673:9;9665:6;9661:22;9711:37;9743:4;9711:37;:::i;:::-;9770:1;9784:208;9798:7;9795:1;9792:14;9784:208;;;9877:9;9872:3;9868:19;9862:26;9854:6;9847:42;9928:1;9920:6;9916:14;9906:24;;9975:2;9964:9;9960:18;9947:31;;9821:4;9818:1;9814:12;9809:17;;9784:208;;;10020:6;10011:7;10008:19;10005:179;;;10078:9;10073:3;10069:19;10063:26;10121:48;10163:4;10155:6;10151:17;10140:9;10121:48;:::i;:::-;10113:6;10106:64;10028:156;10005:179;10230:1;10226;10218:6;10214:14;10210:22;10204:4;10197:36;9632:611;;;9595:887;;9185:1303;;;9093:1395;;:::o;10494:118::-;10581:24;10599:5;10581:24;:::i;:::-;10576:3;10569:37;10494:118;;:::o;10618:222::-;10711:4;10749:2;10738:9;10734:18;10726:26;;10762:71;10830:1;10819:9;10815:17;10806:6;10762:71;:::i;:::-;10618:222;;;;:::o;10846:169::-;10930:11;10964:6;10959:3;10952:19;11004:4;10999:3;10995:14;10980:29;;10846:169;;;;:::o;11021:220::-;11161:34;11157:1;11149:6;11145:14;11138:58;11230:3;11225:2;11217:6;11213:15;11206:28;11021:220;:::o;11247:366::-;11389:3;11410:67;11474:2;11469:3;11410:67;:::i;:::-;11403:74;;11486:93;11575:3;11486:93;:::i;:::-;11604:2;11599:3;11595:12;11588:19;;11247:366;;;:::o;11619:419::-;11785:4;11823:2;11812:9;11808:18;11800:26;;11872:9;11866:4;11862:20;11858:1;11847:9;11843:17;11836:47;11900:131;12026:4;11900:131;:::i;:::-;11892:139;;11619:419;;;:::o;12044:180::-;12092:77;12089:1;12082:88;12189:4;12186:1;12179:15;12213:4;12210:1;12203:15;12230:180;12278:77;12275:1;12268:88;12375:4;12372:1;12365:15;12399:4;12396:1;12389:15;12416:191;12456:3;12475:20;12493:1;12475:20;:::i;:::-;12470:25;;12509:20;12527:1;12509:20;:::i;:::-;12504:25;;12552:1;12549;12545:9;12538:16;;12573:3;12570:1;12567:10;12564:36;;;12580:18;;:::i;:::-;12564:36;12416:191;;;;:::o;12613:410::-;12653:7;12676:20;12694:1;12676:20;:::i;:::-;12671:25;;12710:20;12728:1;12710:20;:::i;:::-;12705:25;;12765:1;12762;12758:9;12787:30;12805:11;12787:30;:::i;:::-;12776:41;;12966:1;12957:7;12953:15;12950:1;12947:22;12927:1;12920:9;12900:83;12877:139;;12996:18;;:::i;:::-;12877:139;12661:362;12613:410;;;;:::o;13029:180::-;13077:77;13074:1;13067:88;13174:4;13171:1;13164:15;13198:4;13195:1;13188:15;13215:185;13255:1;13272:20;13290:1;13272:20;:::i;:::-;13267:25;;13306:20;13324:1;13306:20;:::i;:::-;13301:25;;13345:1;13335:35;;13350:18;;:::i;:::-;13335:35;13392:1;13389;13385:9;13380:14;;13215:185;;;;:::o;13406:220::-;13546:34;13542:1;13534:6;13530:14;13523:58;13615:3;13610:2;13602:6;13598:15;13591:28;13406:220;:::o;13632:366::-;13774:3;13795:67;13859:2;13854:3;13795:67;:::i;:::-;13788:74;;13871:93;13960:3;13871:93;:::i;:::-;13989:2;13984:3;13980:12;13973:19;;13632:366;;;:::o;14004:419::-;14170:4;14208:2;14197:9;14193:18;14185:26;;14257:9;14251:4;14247:20;14243:1;14232:9;14228:17;14221:47;14285:131;14411:4;14285:131;:::i;:::-;14277:139;;14004:419;;;:::o;14429:194::-;14469:4;14489:20;14507:1;14489:20;:::i;:::-;14484:25;;14523:20;14541:1;14523:20;:::i;:::-;14518:25;;14567:1;14564;14560:9;14552:17;;14591:1;14585:4;14582:11;14579:37;;;14596:18;;:::i;:::-;14579:37;14429:194;;;;:::o;14629:118::-;14716:24;14734:5;14716:24;:::i;:::-;14711:3;14704:37;14629:118;;:::o;14753:442::-;14902:4;14940:2;14929:9;14925:18;14917:26;;14953:71;15021:1;15010:9;15006:17;14997:6;14953:71;:::i;:::-;15034:72;15102:2;15091:9;15087:18;15078:6;15034:72;:::i;:::-;15116;15184:2;15173:9;15169:18;15160:6;15116:72;:::i;:::-;14753:442;;;;;;:::o;15201:222::-;15294:4;15332:2;15321:9;15317:18;15309:26;;15345:71;15413:1;15402:9;15398:17;15389:6;15345:71;:::i;:::-;15201:222;;;;:::o;2608:3678:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TEAM_LOCK_PERIOD_208": {
									"entryPoint": 1307,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOTAL_SUPPLY_203": {
									"entryPoint": 1681,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1208": {
									"entryPoint": 2696,
									"id": 1208,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1268": {
									"entryPoint": 3124,
									"id": 1268,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_602": {
									"entryPoint": 2760,
									"id": 602,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1433": {
									"entryPoint": 2689,
									"id": 1433,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1316": {
									"entryPoint": 3587,
									"id": 1316,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_664": {
									"entryPoint": 2895,
									"id": 664,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1047": {
									"entryPoint": 3734,
									"id": 1047,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1124": {
									"entryPoint": 3974,
									"id": 1124,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_944": {
									"entryPoint": 1986,
									"id": 944,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_968": {
									"entryPoint": 1133,
									"id": 968,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_903": {
									"entryPoint": 1315,
									"id": 903,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_881": {
									"entryPoint": 1299,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrentPrice_466": {
									"entryPoint": 2116,
									"id": 466,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTeamMemberCount_516": {
									"entryPoint": 1176,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTeamMember_507": {
									"entryPoint": 1409,
									"id": 507,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getTeamMembers_476": {
									"entryPoint": 2371,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_863": {
									"entryPoint": 989,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_585": {
									"entryPoint": 1641,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_616": {
									"entryPoint": 1384,
									"id": 616,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_872": {
									"entryPoint": 1696,
									"id": 872,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@teamLockedUntil_219": {
									"entryPoint": 1403,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_890": {
									"entryPoint": 1167,
									"id": 890,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1000": {
									"entryPoint": 2714,
									"id": 1000,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_430": {
									"entryPoint": 1188,
									"id": 430,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_644": {
									"entryPoint": 2557,
									"id": 644,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_407": {
									"entryPoint": 1840,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_927": {
									"entryPoint": 3090,
									"id": 927,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapPool_221": {
									"entryPoint": 1949,
									"id": 221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 6009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 5955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 6106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 6168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_TeamMember_$213_memory_ptr_to_t_struct$_TeamMember_$213_memory_ptr": {
									"entryPoint": 5428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_TeamMember_$213_memory_ptr_to_t_struct$_TeamMember_$213_memory_ptr": {
									"entryPoint": 5383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5186,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 5975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4537,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6435,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5587,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 5987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 6042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 5933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16974:23",
										"nodeType": "YulBlock",
										"src": "0:16974:23",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:23",
													"nodeType": "YulBlock",
													"src": "66:40:23",
													"statements": [
														{
															"nativeSrc": "77:22:23",
															"nodeType": "YulAssignment",
															"src": "77:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:23"
																},
																"nativeSrc": "87:12:23",
																"nodeType": "YulFunctionCall",
																"src": "87:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:23"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:23",
														"nodeType": "YulTypedName",
														"src": "49:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:23",
														"nodeType": "YulTypedName",
														"src": "59:6:23",
														"type": ""
													}
												],
												"src": "7:99:23"
											},
											{
												"body": {
													"nativeSrc": "208:73:23",
													"nodeType": "YulBlock",
													"src": "208:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:23"
																},
																"nativeSrc": "218:19:23",
																"nodeType": "YulFunctionCall",
																"src": "218:19:23"
															},
															"nativeSrc": "218:19:23",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:23"
														},
														{
															"nativeSrc": "246:29:23",
															"nodeType": "YulAssignment",
															"src": "246:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:23",
																		"nodeType": "YulLiteral",
																		"src": "270:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:23"
																},
																"nativeSrc": "261:14:23",
																"nodeType": "YulFunctionCall",
																"src": "261:14:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:23",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:23",
														"nodeType": "YulTypedName",
														"src": "180:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:23",
														"nodeType": "YulTypedName",
														"src": "185:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:23",
														"nodeType": "YulTypedName",
														"src": "196:11:23",
														"type": ""
													}
												],
												"src": "112:169:23"
											},
											{
												"body": {
													"nativeSrc": "349:77:23",
													"nodeType": "YulBlock",
													"src": "349:77:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:23"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:23"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:23"
																},
																"nativeSrc": "360:23:23",
																"nodeType": "YulFunctionCall",
																"src": "360:23:23"
															},
															"nativeSrc": "360:23:23",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:23"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:23"
																		},
																		"nativeSrc": "399:16:23",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:23",
																		"nodeType": "YulLiteral",
																		"src": "417:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:23"
																},
																"nativeSrc": "392:27:23",
																"nodeType": "YulFunctionCall",
																"src": "392:27:23"
															},
															"nativeSrc": "392:27:23",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:23"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:23",
														"nodeType": "YulTypedName",
														"src": "331:3:23",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:23",
														"nodeType": "YulTypedName",
														"src": "336:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:23",
														"nodeType": "YulTypedName",
														"src": "341:6:23",
														"type": ""
													}
												],
												"src": "287:139:23"
											},
											{
												"body": {
													"nativeSrc": "480:54:23",
													"nodeType": "YulBlock",
													"src": "480:54:23",
													"statements": [
														{
															"nativeSrc": "490:38:23",
															"nodeType": "YulAssignment",
															"src": "490:38:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:23",
																				"nodeType": "YulLiteral",
																				"src": "515:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:23"
																		},
																		"nativeSrc": "504:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:23"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:23",
																				"nodeType": "YulLiteral",
																				"src": "524:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:23"
																		},
																		"nativeSrc": "520:7:23",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:23"
																},
																"nativeSrc": "500:28:23",
																"nodeType": "YulFunctionCall",
																"src": "500:28:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:23"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:23",
														"nodeType": "YulTypedName",
														"src": "463:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:23",
														"nodeType": "YulTypedName",
														"src": "473:6:23",
														"type": ""
													}
												],
												"src": "432:102:23"
											},
											{
												"body": {
													"nativeSrc": "632:285:23",
													"nodeType": "YulBlock",
													"src": "632:285:23",
													"statements": [
														{
															"nativeSrc": "642:53:23",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:23",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:23"
																},
																"nativeSrc": "656:39:23",
																"nodeType": "YulFunctionCall",
																"src": "656:39:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:23",
																	"nodeType": "YulTypedName",
																	"src": "646:6:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:23",
															"nodeType": "YulAssignment",
															"src": "704:78:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:23",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:23"
																},
																"nativeSrc": "711:71:23",
																"nodeType": "YulFunctionCall",
																"src": "711:71:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:23",
																				"nodeType": "YulLiteral",
																				"src": "837:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:23"
																		},
																		"nativeSrc": "826:16:23",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:23",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:23"
																},
																"nativeSrc": "791:65:23",
																"nodeType": "YulFunctionCall",
																"src": "791:65:23"
															},
															"nativeSrc": "791:65:23",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:23"
														},
														{
															"nativeSrc": "865:46:23",
															"nodeType": "YulAssignment",
															"src": "865:46:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:23"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:23",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:23"
																		},
																		"nativeSrc": "881:29:23",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:23"
																},
																"nativeSrc": "872:39:23",
																"nodeType": "YulFunctionCall",
																"src": "872:39:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:23",
														"nodeType": "YulTypedName",
														"src": "613:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:23",
														"nodeType": "YulTypedName",
														"src": "620:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:23",
														"nodeType": "YulTypedName",
														"src": "628:3:23",
														"type": ""
													}
												],
												"src": "540:377:23"
											},
											{
												"body": {
													"nativeSrc": "1041:195:23",
													"nodeType": "YulBlock",
													"src": "1041:195:23",
													"statements": [
														{
															"nativeSrc": "1051:26:23",
															"nodeType": "YulAssignment",
															"src": "1051:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:23",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:23"
																},
																"nativeSrc": "1059:18:23",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:23",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:23"
																		},
																		"nativeSrc": "1094:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:23"
																		},
																		"nativeSrc": "1113:20:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:23"
																},
																"nativeSrc": "1087:47:23",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:23"
															},
															"nativeSrc": "1087:47:23",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:23"
														},
														{
															"nativeSrc": "1143:86:23",
															"nodeType": "YulAssignment",
															"src": "1143:86:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:23"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:23",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:23"
																},
																"nativeSrc": "1151:78:23",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:23",
														"nodeType": "YulTypedName",
														"src": "1013:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:23",
														"nodeType": "YulTypedName",
														"src": "1025:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:23",
														"nodeType": "YulTypedName",
														"src": "1036:4:23",
														"type": ""
													}
												],
												"src": "923:313:23"
											},
											{
												"body": {
													"nativeSrc": "1282:35:23",
													"nodeType": "YulBlock",
													"src": "1282:35:23",
													"statements": [
														{
															"nativeSrc": "1292:19:23",
															"nodeType": "YulAssignment",
															"src": "1292:19:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:23",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:23"
																},
																"nativeSrc": "1302:9:23",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:23"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:23",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:23",
														"nodeType": "YulTypedName",
														"src": "1275:6:23",
														"type": ""
													}
												],
												"src": "1242:75:23"
											},
											{
												"body": {
													"nativeSrc": "1412:28:23",
													"nodeType": "YulBlock",
													"src": "1412:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:23"
																},
																"nativeSrc": "1422:12:23",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:23"
															},
															"nativeSrc": "1422:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:23"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:23"
											},
											{
												"body": {
													"nativeSrc": "1535:28:23",
													"nodeType": "YulBlock",
													"src": "1535:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:23"
																},
																"nativeSrc": "1545:12:23",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:23"
															},
															"nativeSrc": "1545:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:23"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:23"
											},
											{
												"body": {
													"nativeSrc": "1614:81:23",
													"nodeType": "YulBlock",
													"src": "1614:81:23",
													"statements": [
														{
															"nativeSrc": "1624:65:23",
															"nodeType": "YulAssignment",
															"src": "1624:65:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:23",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:23"
																},
																"nativeSrc": "1635:54:23",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:23",
														"nodeType": "YulTypedName",
														"src": "1596:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:23",
														"nodeType": "YulTypedName",
														"src": "1606:7:23",
														"type": ""
													}
												],
												"src": "1569:126:23"
											},
											{
												"body": {
													"nativeSrc": "1746:51:23",
													"nodeType": "YulBlock",
													"src": "1746:51:23",
													"statements": [
														{
															"nativeSrc": "1756:35:23",
															"nodeType": "YulAssignment",
															"src": "1756:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:23"
																},
																"nativeSrc": "1767:24:23",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:23",
														"nodeType": "YulTypedName",
														"src": "1728:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:23",
														"nodeType": "YulTypedName",
														"src": "1738:7:23",
														"type": ""
													}
												],
												"src": "1701:96:23"
											},
											{
												"body": {
													"nativeSrc": "1846:79:23",
													"nodeType": "YulBlock",
													"src": "1846:79:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:23",
																"nodeType": "YulBlock",
																"src": "1903:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:23",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:23",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:23"
																			},
																			"nativeSrc": "1905:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:23"
																		},
																		"nativeSrc": "1905:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:23"
																				},
																				"nativeSrc": "1876:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:23"
																		},
																		"nativeSrc": "1866:35:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:23"
																},
																"nativeSrc": "1859:43:23",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:23"
															},
															"nativeSrc": "1856:63:23",
															"nodeType": "YulIf",
															"src": "1856:63:23"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:23",
														"nodeType": "YulTypedName",
														"src": "1839:5:23",
														"type": ""
													}
												],
												"src": "1803:122:23"
											},
											{
												"body": {
													"nativeSrc": "1983:87:23",
													"nodeType": "YulBlock",
													"src": "1983:87:23",
													"statements": [
														{
															"nativeSrc": "1993:29:23",
															"nodeType": "YulAssignment",
															"src": "1993:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:23",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:23"
																},
																"nativeSrc": "2002:20:23",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:23",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:23"
																},
																"nativeSrc": "2031:33:23",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:23"
															},
															"nativeSrc": "2031:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:23"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:23",
														"nodeType": "YulTypedName",
														"src": "1961:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:23",
														"nodeType": "YulTypedName",
														"src": "1969:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:23",
														"nodeType": "YulTypedName",
														"src": "1977:5:23",
														"type": ""
													}
												],
												"src": "1931:139:23"
											},
											{
												"body": {
													"nativeSrc": "2121:32:23",
													"nodeType": "YulBlock",
													"src": "2121:32:23",
													"statements": [
														{
															"nativeSrc": "2131:16:23",
															"nodeType": "YulAssignment",
															"src": "2131:16:23",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:23",
																"nodeType": "YulIdentifier",
																"src": "2142:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:23",
														"nodeType": "YulTypedName",
														"src": "2103:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:23",
														"nodeType": "YulTypedName",
														"src": "2113:7:23",
														"type": ""
													}
												],
												"src": "2076:77:23"
											},
											{
												"body": {
													"nativeSrc": "2202:79:23",
													"nodeType": "YulBlock",
													"src": "2202:79:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:23",
																"nodeType": "YulBlock",
																"src": "2259:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:23",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:23",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:23"
																			},
																			"nativeSrc": "2261:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:23"
																		},
																		"nativeSrc": "2261:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:23"
																				},
																				"nativeSrc": "2232:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:23"
																		},
																		"nativeSrc": "2222:35:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:23"
																},
																"nativeSrc": "2215:43:23",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:23"
															},
															"nativeSrc": "2212:63:23",
															"nodeType": "YulIf",
															"src": "2212:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:23",
														"nodeType": "YulTypedName",
														"src": "2195:5:23",
														"type": ""
													}
												],
												"src": "2159:122:23"
											},
											{
												"body": {
													"nativeSrc": "2339:87:23",
													"nodeType": "YulBlock",
													"src": "2339:87:23",
													"statements": [
														{
															"nativeSrc": "2349:29:23",
															"nodeType": "YulAssignment",
															"src": "2349:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:23",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:23"
																},
																"nativeSrc": "2358:20:23",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:23",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:23"
																},
																"nativeSrc": "2387:33:23",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:23"
															},
															"nativeSrc": "2387:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:23",
														"nodeType": "YulTypedName",
														"src": "2317:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:23",
														"nodeType": "YulTypedName",
														"src": "2325:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:23",
														"nodeType": "YulTypedName",
														"src": "2333:5:23",
														"type": ""
													}
												],
												"src": "2287:139:23"
											},
											{
												"body": {
													"nativeSrc": "2515:391:23",
													"nodeType": "YulBlock",
													"src": "2515:391:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:23",
																"nodeType": "YulBlock",
																"src": "2561:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:23"
																			},
																			"nativeSrc": "2563:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:23"
																		},
																		"nativeSrc": "2563:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:23"
																		},
																		"nativeSrc": "2532:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:23",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:23"
																},
																"nativeSrc": "2528:32:23",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:23"
															},
															"nativeSrc": "2525:119:23",
															"nodeType": "YulIf",
															"src": "2525:119:23"
														},
														{
															"nativeSrc": "2654:117:23",
															"nodeType": "YulBlock",
															"src": "2654:117:23",
															"statements": [
																{
																	"nativeSrc": "2669:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:23",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:23",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:23",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:23"
																				},
																				"nativeSrc": "2729:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:23"
																		},
																		"nativeSrc": "2708:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:23",
															"nodeType": "YulBlock",
															"src": "2781:118:23",
															"statements": [
																{
																	"nativeSrc": "2796:16:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:23",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:23",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:23",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:23"
																				},
																				"nativeSrc": "2857:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:23"
																		},
																		"nativeSrc": "2836:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:23",
														"nodeType": "YulTypedName",
														"src": "2477:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:23",
														"nodeType": "YulTypedName",
														"src": "2488:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:23",
														"nodeType": "YulTypedName",
														"src": "2500:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:23",
														"nodeType": "YulTypedName",
														"src": "2508:6:23",
														"type": ""
													}
												],
												"src": "2432:474:23"
											},
											{
												"body": {
													"nativeSrc": "2954:48:23",
													"nodeType": "YulBlock",
													"src": "2954:48:23",
													"statements": [
														{
															"nativeSrc": "2964:32:23",
															"nodeType": "YulAssignment",
															"src": "2964:32:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:23"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:23"
																		},
																		"nativeSrc": "2982:13:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:23"
																},
																"nativeSrc": "2975:21:23",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:23",
														"nodeType": "YulTypedName",
														"src": "2936:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:23",
														"nodeType": "YulTypedName",
														"src": "2946:7:23",
														"type": ""
													}
												],
												"src": "2912:90:23"
											},
											{
												"body": {
													"nativeSrc": "3067:50:23",
													"nodeType": "YulBlock",
													"src": "3067:50:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:23",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:23"
																		},
																		"nativeSrc": "3089:21:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:23"
																},
																"nativeSrc": "3077:34:23",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:23"
															},
															"nativeSrc": "3077:34:23",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:23"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:23",
														"nodeType": "YulTypedName",
														"src": "3055:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:23",
														"nodeType": "YulTypedName",
														"src": "3062:3:23",
														"type": ""
													}
												],
												"src": "3008:109:23"
											},
											{
												"body": {
													"nativeSrc": "3215:118:23",
													"nodeType": "YulBlock",
													"src": "3215:118:23",
													"statements": [
														{
															"nativeSrc": "3225:26:23",
															"nodeType": "YulAssignment",
															"src": "3225:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:23",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:23"
																},
																"nativeSrc": "3233:18:23",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:23",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:23"
																		},
																		"nativeSrc": "3308:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:23",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:23"
																},
																"nativeSrc": "3261:65:23",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:23"
															},
															"nativeSrc": "3261:65:23",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:23",
														"nodeType": "YulTypedName",
														"src": "3187:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:23",
														"nodeType": "YulTypedName",
														"src": "3199:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:23",
														"nodeType": "YulTypedName",
														"src": "3210:4:23",
														"type": ""
													}
												],
												"src": "3123:210:23"
											},
											{
												"body": {
													"nativeSrc": "3404:53:23",
													"nodeType": "YulBlock",
													"src": "3404:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:23",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:23"
																		},
																		"nativeSrc": "3426:24:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:23"
																},
																"nativeSrc": "3414:37:23",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:23"
															},
															"nativeSrc": "3414:37:23",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:23"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:23",
														"nodeType": "YulTypedName",
														"src": "3392:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:23",
														"nodeType": "YulTypedName",
														"src": "3399:3:23",
														"type": ""
													}
												],
												"src": "3339:118:23"
											},
											{
												"body": {
													"nativeSrc": "3561:124:23",
													"nodeType": "YulBlock",
													"src": "3561:124:23",
													"statements": [
														{
															"nativeSrc": "3571:26:23",
															"nodeType": "YulAssignment",
															"src": "3571:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:23",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:23"
																},
																"nativeSrc": "3579:18:23",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:23",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:23"
																		},
																		"nativeSrc": "3660:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:23"
																},
																"nativeSrc": "3607:71:23",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:23"
															},
															"nativeSrc": "3607:71:23",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:23",
														"nodeType": "YulTypedName",
														"src": "3533:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:23",
														"nodeType": "YulTypedName",
														"src": "3545:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:23",
														"nodeType": "YulTypedName",
														"src": "3556:4:23",
														"type": ""
													}
												],
												"src": "3463:222:23"
											},
											{
												"body": {
													"nativeSrc": "3791:519:23",
													"nodeType": "YulBlock",
													"src": "3791:519:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:23",
																"nodeType": "YulBlock",
																"src": "3837:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:23"
																			},
																			"nativeSrc": "3839:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:23"
																		},
																		"nativeSrc": "3839:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:23"
																		},
																		"nativeSrc": "3808:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:23",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:23",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:23"
																},
																"nativeSrc": "3804:32:23",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:23"
															},
															"nativeSrc": "3801:119:23",
															"nodeType": "YulIf",
															"src": "3801:119:23"
														},
														{
															"nativeSrc": "3930:117:23",
															"nodeType": "YulBlock",
															"src": "3930:117:23",
															"statements": [
																{
																	"nativeSrc": "3945:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:23",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:23",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:23",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:23"
																				},
																				"nativeSrc": "4005:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:23"
																		},
																		"nativeSrc": "3984:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:23",
															"nodeType": "YulBlock",
															"src": "4057:118:23",
															"statements": [
																{
																	"nativeSrc": "4072:16:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:23",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:23",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:23",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:23"
																				},
																				"nativeSrc": "4133:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:23"
																		},
																		"nativeSrc": "4112:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:23",
															"nodeType": "YulBlock",
															"src": "4185:118:23",
															"statements": [
																{
																	"nativeSrc": "4200:16:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:23",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:23",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:23",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:23",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:23"
																				},
																				"nativeSrc": "4261:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:23"
																		},
																		"nativeSrc": "4240:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:23",
														"nodeType": "YulTypedName",
														"src": "3745:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:23",
														"nodeType": "YulTypedName",
														"src": "3756:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:23",
														"nodeType": "YulTypedName",
														"src": "3768:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:23",
														"nodeType": "YulTypedName",
														"src": "3776:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:23",
														"nodeType": "YulTypedName",
														"src": "3784:6:23",
														"type": ""
													}
												],
												"src": "3691:619:23"
											},
											{
												"body": {
													"nativeSrc": "4359:43:23",
													"nodeType": "YulBlock",
													"src": "4359:43:23",
													"statements": [
														{
															"nativeSrc": "4369:27:23",
															"nodeType": "YulAssignment",
															"src": "4369:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:23",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:23",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:23"
																},
																"nativeSrc": "4380:16:23",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:23",
														"nodeType": "YulTypedName",
														"src": "4341:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:23",
														"nodeType": "YulTypedName",
														"src": "4351:7:23",
														"type": ""
													}
												],
												"src": "4316:86:23"
											},
											{
												"body": {
													"nativeSrc": "4469:51:23",
													"nodeType": "YulBlock",
													"src": "4469:51:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:23",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:23"
																		},
																		"nativeSrc": "4491:22:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:23"
																},
																"nativeSrc": "4479:35:23",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:23"
															},
															"nativeSrc": "4479:35:23",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:23"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:23",
														"nodeType": "YulTypedName",
														"src": "4457:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:23",
														"nodeType": "YulTypedName",
														"src": "4464:3:23",
														"type": ""
													}
												],
												"src": "4408:112:23"
											},
											{
												"body": {
													"nativeSrc": "4620:120:23",
													"nodeType": "YulBlock",
													"src": "4620:120:23",
													"statements": [
														{
															"nativeSrc": "4630:26:23",
															"nodeType": "YulAssignment",
															"src": "4630:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:23",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:23"
																},
																"nativeSrc": "4638:18:23",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:23",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:23"
																		},
																		"nativeSrc": "4715:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:23",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:23"
																},
																"nativeSrc": "4666:67:23",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:23"
															},
															"nativeSrc": "4666:67:23",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:23",
														"nodeType": "YulTypedName",
														"src": "4592:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:23",
														"nodeType": "YulTypedName",
														"src": "4604:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:23",
														"nodeType": "YulTypedName",
														"src": "4615:4:23",
														"type": ""
													}
												],
												"src": "4526:214:23"
											},
											{
												"body": {
													"nativeSrc": "4812:263:23",
													"nodeType": "YulBlock",
													"src": "4812:263:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:23",
																"nodeType": "YulBlock",
																"src": "4858:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:23"
																			},
																			"nativeSrc": "4860:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:23"
																		},
																		"nativeSrc": "4860:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:23"
																		},
																		"nativeSrc": "4829:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:23",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:23"
																},
																"nativeSrc": "4825:32:23",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:23"
															},
															"nativeSrc": "4822:119:23",
															"nodeType": "YulIf",
															"src": "4822:119:23"
														},
														{
															"nativeSrc": "4951:117:23",
															"nodeType": "YulBlock",
															"src": "4951:117:23",
															"statements": [
																{
																	"nativeSrc": "4966:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:23",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:23",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:23",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:23"
																				},
																				"nativeSrc": "5026:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:23"
																		},
																		"nativeSrc": "5005:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:23",
														"nodeType": "YulTypedName",
														"src": "4782:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:23",
														"nodeType": "YulTypedName",
														"src": "4793:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:23",
														"nodeType": "YulTypedName",
														"src": "4805:6:23",
														"type": ""
													}
												],
												"src": "4746:329:23"
											},
											{
												"body": {
													"nativeSrc": "5147:263:23",
													"nodeType": "YulBlock",
													"src": "5147:263:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:23",
																"nodeType": "YulBlock",
																"src": "5193:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:23"
																			},
																			"nativeSrc": "5195:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:23"
																		},
																		"nativeSrc": "5195:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:23"
																		},
																		"nativeSrc": "5164:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:23",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:23"
																},
																"nativeSrc": "5160:32:23",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:23"
															},
															"nativeSrc": "5157:119:23",
															"nodeType": "YulIf",
															"src": "5157:119:23"
														},
														{
															"nativeSrc": "5286:117:23",
															"nodeType": "YulBlock",
															"src": "5286:117:23",
															"statements": [
																{
																	"nativeSrc": "5301:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:23",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:23",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:23",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:23"
																				},
																				"nativeSrc": "5361:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:23"
																		},
																		"nativeSrc": "5340:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:23",
														"nodeType": "YulTypedName",
														"src": "5117:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:23",
														"nodeType": "YulTypedName",
														"src": "5128:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:23",
														"nodeType": "YulTypedName",
														"src": "5140:6:23",
														"type": ""
													}
												],
												"src": "5081:329:23"
											},
											{
												"body": {
													"nativeSrc": "5481:53:23",
													"nodeType": "YulBlock",
													"src": "5481:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:23",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:23"
																		},
																		"nativeSrc": "5503:24:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:23"
																},
																"nativeSrc": "5491:37:23",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:23"
															},
															"nativeSrc": "5491:37:23",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:23"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:23",
														"nodeType": "YulTypedName",
														"src": "5469:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:23",
														"nodeType": "YulTypedName",
														"src": "5476:3:23",
														"type": ""
													}
												],
												"src": "5416:118:23"
											},
											{
												"body": {
													"nativeSrc": "5666:206:23",
													"nodeType": "YulBlock",
													"src": "5666:206:23",
													"statements": [
														{
															"nativeSrc": "5676:26:23",
															"nodeType": "YulAssignment",
															"src": "5676:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5688:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "5688:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:2:23",
																		"nodeType": "YulLiteral",
																		"src": "5699:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5684:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5684:3:23"
																},
																"nativeSrc": "5684:18:23",
																"nodeType": "YulFunctionCall",
																"src": "5684:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5676:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "5676:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5756:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "5756:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5769:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "5769:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5780:1:23",
																				"nodeType": "YulLiteral",
																				"src": "5780:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5765:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5765:3:23"
																		},
																		"nativeSrc": "5765:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5765:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5712:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "5712:43:23"
																},
																"nativeSrc": "5712:71:23",
																"nodeType": "YulFunctionCall",
																"src": "5712:71:23"
															},
															"nativeSrc": "5712:71:23",
															"nodeType": "YulExpressionStatement",
															"src": "5712:71:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5837:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "5837:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5850:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "5850:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5861:2:23",
																				"nodeType": "YulLiteral",
																				"src": "5861:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5846:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5846:3:23"
																		},
																		"nativeSrc": "5846:18:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5846:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5793:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "5793:43:23"
																},
																"nativeSrc": "5793:72:23",
																"nodeType": "YulFunctionCall",
																"src": "5793:72:23"
															},
															"nativeSrc": "5793:72:23",
															"nodeType": "YulExpressionStatement",
															"src": "5793:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5540:332:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5630:9:23",
														"nodeType": "YulTypedName",
														"src": "5630:9:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5642:6:23",
														"nodeType": "YulTypedName",
														"src": "5642:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5650:6:23",
														"nodeType": "YulTypedName",
														"src": "5650:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5661:4:23",
														"nodeType": "YulTypedName",
														"src": "5661:4:23",
														"type": ""
													}
												],
												"src": "5540:332:23"
											},
											{
												"body": {
													"nativeSrc": "5976:124:23",
													"nodeType": "YulBlock",
													"src": "5976:124:23",
													"statements": [
														{
															"nativeSrc": "5986:26:23",
															"nodeType": "YulAssignment",
															"src": "5986:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5998:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "5998:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6009:2:23",
																		"nodeType": "YulLiteral",
																		"src": "6009:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5994:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:23"
																},
																"nativeSrc": "5994:18:23",
																"nodeType": "YulFunctionCall",
																"src": "5994:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5986:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "5986:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6066:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "6066:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6079:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "6079:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6090:1:23",
																				"nodeType": "YulLiteral",
																				"src": "6090:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6075:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "6075:3:23"
																		},
																		"nativeSrc": "6075:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6075:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6022:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "6022:43:23"
																},
																"nativeSrc": "6022:71:23",
																"nodeType": "YulFunctionCall",
																"src": "6022:71:23"
															},
															"nativeSrc": "6022:71:23",
															"nodeType": "YulExpressionStatement",
															"src": "6022:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5878:222:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5948:9:23",
														"nodeType": "YulTypedName",
														"src": "5948:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5960:6:23",
														"nodeType": "YulTypedName",
														"src": "5960:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5971:4:23",
														"nodeType": "YulTypedName",
														"src": "5971:4:23",
														"type": ""
													}
												],
												"src": "5878:222:23"
											},
											{
												"body": {
													"nativeSrc": "6189:391:23",
													"nodeType": "YulBlock",
													"src": "6189:391:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "6235:83:23",
																"nodeType": "YulBlock",
																"src": "6235:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6237:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "6237:77:23"
																			},
																			"nativeSrc": "6237:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "6237:79:23"
																		},
																		"nativeSrc": "6237:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "6237:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6210:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "6210:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6219:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "6219:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6206:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "6206:3:23"
																		},
																		"nativeSrc": "6206:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6206:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6231:2:23",
																		"nodeType": "YulLiteral",
																		"src": "6231:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6202:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6202:3:23"
																},
																"nativeSrc": "6202:32:23",
																"nodeType": "YulFunctionCall",
																"src": "6202:32:23"
															},
															"nativeSrc": "6199:119:23",
															"nodeType": "YulIf",
															"src": "6199:119:23"
														},
														{
															"nativeSrc": "6328:117:23",
															"nodeType": "YulBlock",
															"src": "6328:117:23",
															"statements": [
																{
																	"nativeSrc": "6343:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6343:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6357:1:23",
																		"nodeType": "YulLiteral",
																		"src": "6357:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6347:6:23",
																			"nodeType": "YulTypedName",
																			"src": "6347:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6372:63:23",
																	"nodeType": "YulAssignment",
																	"src": "6372:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6407:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "6407:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6418:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "6418:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6403:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "6403:3:23"
																				},
																				"nativeSrc": "6403:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "6403:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6427:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "6427:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6382:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "6382:20:23"
																		},
																		"nativeSrc": "6382:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6382:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6372:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "6372:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6455:118:23",
															"nodeType": "YulBlock",
															"src": "6455:118:23",
															"statements": [
																{
																	"nativeSrc": "6470:16:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6470:16:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6484:2:23",
																		"nodeType": "YulLiteral",
																		"src": "6484:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6474:6:23",
																			"nodeType": "YulTypedName",
																			"src": "6474:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6500:63:23",
																	"nodeType": "YulAssignment",
																	"src": "6500:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6535:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "6535:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6546:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "6546:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6531:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "6531:3:23"
																				},
																				"nativeSrc": "6531:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "6531:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6555:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "6555:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6510:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "6510:20:23"
																		},
																		"nativeSrc": "6510:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6510:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6500:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "6500:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6106:474:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6151:9:23",
														"nodeType": "YulTypedName",
														"src": "6151:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6162:7:23",
														"nodeType": "YulTypedName",
														"src": "6162:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6174:6:23",
														"nodeType": "YulTypedName",
														"src": "6174:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6182:6:23",
														"nodeType": "YulTypedName",
														"src": "6182:6:23",
														"type": ""
													}
												],
												"src": "6106:474:23"
											},
											{
												"body": {
													"nativeSrc": "6687:40:23",
													"nodeType": "YulBlock",
													"src": "6687:40:23",
													"statements": [
														{
															"nativeSrc": "6698:22:23",
															"nodeType": "YulAssignment",
															"src": "6698:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6714:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "6714:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6708:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "6708:5:23"
																},
																"nativeSrc": "6708:12:23",
																"nodeType": "YulFunctionCall",
																"src": "6708:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6698:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6698:6:23"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6586:141:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6670:5:23",
														"nodeType": "YulTypedName",
														"src": "6670:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6680:6:23",
														"nodeType": "YulTypedName",
														"src": "6680:6:23",
														"type": ""
													}
												],
												"src": "6586:141:23"
											},
											{
												"body": {
													"nativeSrc": "6871:73:23",
													"nodeType": "YulBlock",
													"src": "6871:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6888:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "6888:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6893:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "6893:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6881:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6881:6:23"
																},
																"nativeSrc": "6881:19:23",
																"nodeType": "YulFunctionCall",
																"src": "6881:19:23"
															},
															"nativeSrc": "6881:19:23",
															"nodeType": "YulExpressionStatement",
															"src": "6881:19:23"
														},
														{
															"nativeSrc": "6909:29:23",
															"nodeType": "YulAssignment",
															"src": "6909:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6928:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "6928:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:4:23",
																		"nodeType": "YulLiteral",
																		"src": "6933:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6924:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6924:3:23"
																},
																"nativeSrc": "6924:14:23",
																"nodeType": "YulFunctionCall",
																"src": "6924:14:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6909:11:23",
																	"nodeType": "YulIdentifier",
																	"src": "6909:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6733:211:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6843:3:23",
														"nodeType": "YulTypedName",
														"src": "6843:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6848:6:23",
														"nodeType": "YulTypedName",
														"src": "6848:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6859:11:23",
														"nodeType": "YulTypedName",
														"src": "6859:11:23",
														"type": ""
													}
												],
												"src": "6733:211:23"
											},
											{
												"body": {
													"nativeSrc": "7049:60:23",
													"nodeType": "YulBlock",
													"src": "7049:60:23",
													"statements": [
														{
															"nativeSrc": "7059:11:23",
															"nodeType": "YulAssignment",
															"src": "7059:11:23",
															"value": {
																"name": "ptr",
																"nativeSrc": "7067:3:23",
																"nodeType": "YulIdentifier",
																"src": "7067:3:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7059:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "7059:4:23"
																}
															]
														},
														{
															"nativeSrc": "7080:22:23",
															"nodeType": "YulAssignment",
															"src": "7080:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7092:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "7092:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7097:4:23",
																		"nodeType": "YulLiteral",
																		"src": "7097:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7088:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "7088:3:23"
																},
																"nativeSrc": "7088:14:23",
																"nodeType": "YulFunctionCall",
																"src": "7088:14:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7080:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "7080:4:23"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6950:159:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7036:3:23",
														"nodeType": "YulTypedName",
														"src": "7036:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7044:4:23",
														"nodeType": "YulTypedName",
														"src": "7044:4:23",
														"type": ""
													}
												],
												"src": "6950:159:23"
											},
											{
												"body": {
													"nativeSrc": "7170:53:23",
													"nodeType": "YulBlock",
													"src": "7170:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7187:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "7187:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7210:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "7210:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7192:17:23",
																			"nodeType": "YulIdentifier",
																			"src": "7192:17:23"
																		},
																		"nativeSrc": "7192:24:23",
																		"nodeType": "YulFunctionCall",
																		"src": "7192:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7180:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "7180:6:23"
																},
																"nativeSrc": "7180:37:23",
																"nodeType": "YulFunctionCall",
																"src": "7180:37:23"
															},
															"nativeSrc": "7180:37:23",
															"nodeType": "YulExpressionStatement",
															"src": "7180:37:23"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "7115:108:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7158:5:23",
														"nodeType": "YulTypedName",
														"src": "7158:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7165:3:23",
														"nodeType": "YulTypedName",
														"src": "7165:3:23",
														"type": ""
													}
												],
												"src": "7115:108:23"
											},
											{
												"body": {
													"nativeSrc": "7284:53:23",
													"nodeType": "YulBlock",
													"src": "7284:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7301:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "7301:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7324:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "7324:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7306:17:23",
																			"nodeType": "YulIdentifier",
																			"src": "7306:17:23"
																		},
																		"nativeSrc": "7306:24:23",
																		"nodeType": "YulFunctionCall",
																		"src": "7306:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7294:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "7294:6:23"
																},
																"nativeSrc": "7294:37:23",
																"nodeType": "YulFunctionCall",
																"src": "7294:37:23"
															},
															"nativeSrc": "7294:37:23",
															"nodeType": "YulExpressionStatement",
															"src": "7294:37:23"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "7229:108:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7272:5:23",
														"nodeType": "YulTypedName",
														"src": "7272:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7279:3:23",
														"nodeType": "YulTypedName",
														"src": "7279:3:23",
														"type": ""
													}
												],
												"src": "7229:108:23"
											},
											{
												"body": {
													"nativeSrc": "7519:412:23",
													"nodeType": "YulBlock",
													"src": "7519:412:23",
													"statements": [
														{
															"nativeSrc": "7529:26:23",
															"nodeType": "YulVariableDeclaration",
															"src": "7529:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7545:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "7545:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7550:4:23",
																		"nodeType": "YulLiteral",
																		"src": "7550:4:23",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7541:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "7541:3:23"
																},
																"nativeSrc": "7541:14:23",
																"nodeType": "YulFunctionCall",
																"src": "7541:14:23"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "7533:4:23",
																	"nodeType": "YulTypedName",
																	"src": "7533:4:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7565:173:23",
															"nodeType": "YulBlock",
															"src": "7565:173:23",
															"statements": [
																{
																	"nativeSrc": "7609:43:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7609:43:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7639:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "7639:5:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7646:4:23",
																						"nodeType": "YulLiteral",
																						"src": "7646:4:23",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7635:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "7635:3:23"
																				},
																				"nativeSrc": "7635:16:23",
																				"nodeType": "YulFunctionCall",
																				"src": "7635:16:23"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7629:5:23",
																			"nodeType": "YulIdentifier",
																			"src": "7629:5:23"
																		},
																		"nativeSrc": "7629:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "7629:23:23"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7613:12:23",
																			"nodeType": "YulTypedName",
																			"src": "7613:12:23",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7699:12:23",
																				"nodeType": "YulIdentifier",
																				"src": "7699:12:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7717:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "7717:3:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7722:4:23",
																						"nodeType": "YulLiteral",
																						"src": "7722:4:23",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7713:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "7713:3:23"
																				},
																				"nativeSrc": "7713:14:23",
																				"nodeType": "YulFunctionCall",
																				"src": "7713:14:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "7665:33:23",
																			"nodeType": "YulIdentifier",
																			"src": "7665:33:23"
																		},
																		"nativeSrc": "7665:63:23",
																		"nodeType": "YulFunctionCall",
																		"src": "7665:63:23"
																	},
																	"nativeSrc": "7665:63:23",
																	"nodeType": "YulExpressionStatement",
																	"src": "7665:63:23"
																}
															]
														},
														{
															"nativeSrc": "7748:176:23",
															"nodeType": "YulBlock",
															"src": "7748:176:23",
															"statements": [
																{
																	"nativeSrc": "7795:43:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7795:43:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7825:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "7825:5:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7832:4:23",
																						"nodeType": "YulLiteral",
																						"src": "7832:4:23",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7821:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "7821:3:23"
																				},
																				"nativeSrc": "7821:16:23",
																				"nodeType": "YulFunctionCall",
																				"src": "7821:16:23"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7815:5:23",
																			"nodeType": "YulIdentifier",
																			"src": "7815:5:23"
																		},
																		"nativeSrc": "7815:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "7815:23:23"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7799:12:23",
																			"nodeType": "YulTypedName",
																			"src": "7799:12:23",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7885:12:23",
																				"nodeType": "YulIdentifier",
																				"src": "7885:12:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7903:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "7903:3:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7908:4:23",
																						"nodeType": "YulLiteral",
																						"src": "7908:4:23",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7899:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "7899:3:23"
																				},
																				"nativeSrc": "7899:14:23",
																				"nodeType": "YulFunctionCall",
																				"src": "7899:14:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7851:33:23",
																			"nodeType": "YulIdentifier",
																			"src": "7851:33:23"
																		},
																		"nativeSrc": "7851:63:23",
																		"nodeType": "YulFunctionCall",
																		"src": "7851:63:23"
																	},
																	"nativeSrc": "7851:63:23",
																	"nodeType": "YulExpressionStatement",
																	"src": "7851:63:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_TeamMember_$213_memory_ptr_to_t_struct$_TeamMember_$213_memory_ptr",
												"nativeSrc": "7409:522:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7506:5:23",
														"nodeType": "YulTypedName",
														"src": "7506:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7513:3:23",
														"nodeType": "YulTypedName",
														"src": "7513:3:23",
														"type": ""
													}
												],
												"src": "7409:522:23"
											},
											{
												"body": {
													"nativeSrc": "8071:153:23",
													"nodeType": "YulBlock",
													"src": "8071:153:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8169:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "8169:6:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8177:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "8177:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_TeamMember_$213_memory_ptr_to_t_struct$_TeamMember_$213_memory_ptr",
																	"nativeSrc": "8081:87:23",
																	"nodeType": "YulIdentifier",
																	"src": "8081:87:23"
																},
																"nativeSrc": "8081:100:23",
																"nodeType": "YulFunctionCall",
																"src": "8081:100:23"
															},
															"nativeSrc": "8081:100:23",
															"nodeType": "YulExpressionStatement",
															"src": "8081:100:23"
														},
														{
															"nativeSrc": "8190:28:23",
															"nodeType": "YulAssignment",
															"src": "8190:28:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8208:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "8208:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8213:4:23",
																		"nodeType": "YulLiteral",
																		"src": "8213:4:23",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8204:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "8204:3:23"
																},
																"nativeSrc": "8204:14:23",
																"nodeType": "YulFunctionCall",
																"src": "8204:14:23"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "8190:10:23",
																	"nodeType": "YulIdentifier",
																	"src": "8190:10:23"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_TeamMember_$213_memory_ptr_to_t_struct$_TeamMember_$213_memory_ptr",
												"nativeSrc": "7937:287:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "8044:6:23",
														"nodeType": "YulTypedName",
														"src": "8044:6:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8052:3:23",
														"nodeType": "YulTypedName",
														"src": "8052:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "8060:10:23",
														"nodeType": "YulTypedName",
														"src": "8060:10:23",
														"type": ""
													}
												],
												"src": "7937:287:23"
											},
											{
												"body": {
													"nativeSrc": "8332:38:23",
													"nodeType": "YulBlock",
													"src": "8332:38:23",
													"statements": [
														{
															"nativeSrc": "8342:22:23",
															"nodeType": "YulAssignment",
															"src": "8342:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8354:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "8354:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8359:4:23",
																		"nodeType": "YulLiteral",
																		"src": "8359:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8350:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "8350:3:23"
																},
																"nativeSrc": "8350:14:23",
																"nodeType": "YulFunctionCall",
																"src": "8350:14:23"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "8342:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "8342:4:23"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "8230:140:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8319:3:23",
														"nodeType": "YulTypedName",
														"src": "8319:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "8327:4:23",
														"nodeType": "YulTypedName",
														"src": "8327:4:23",
														"type": ""
													}
												],
												"src": "8230:140:23"
											},
											{
												"body": {
													"nativeSrc": "8624:770:23",
													"nodeType": "YulBlock",
													"src": "8624:770:23",
													"statements": [
														{
															"nativeSrc": "8634:95:23",
															"nodeType": "YulVariableDeclaration",
															"src": "8634:95:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8723:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "8723:5:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "8648:74:23",
																	"nodeType": "YulIdentifier",
																	"src": "8648:74:23"
																},
																"nativeSrc": "8648:81:23",
																"nodeType": "YulFunctionCall",
																"src": "8648:81:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8638:6:23",
																	"nodeType": "YulTypedName",
																	"src": "8638:6:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8738:120:23",
															"nodeType": "YulAssignment",
															"src": "8738:120:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8846:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "8846:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8851:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "8851:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8745:100:23",
																	"nodeType": "YulIdentifier",
																	"src": "8745:100:23"
																},
																"nativeSrc": "8745:113:23",
																"nodeType": "YulFunctionCall",
																"src": "8745:113:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8738:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "8738:3:23"
																}
															]
														},
														{
															"nativeSrc": "8867:98:23",
															"nodeType": "YulVariableDeclaration",
															"src": "8867:98:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8959:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "8959:5:23"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "8882:76:23",
																	"nodeType": "YulIdentifier",
																	"src": "8882:76:23"
																},
																"nativeSrc": "8882:83:23",
																"nodeType": "YulFunctionCall",
																"src": "8882:83:23"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8871:7:23",
																	"nodeType": "YulTypedName",
																	"src": "8871:7:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8974:21:23",
															"nodeType": "YulVariableDeclaration",
															"src": "8974:21:23",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8988:7:23",
																"nodeType": "YulIdentifier",
																"src": "8988:7:23"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8978:6:23",
																	"nodeType": "YulTypedName",
																	"src": "8978:6:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9064:305:23",
																"nodeType": "YulBlock",
																"src": "9064:305:23",
																"statements": [
																	{
																		"nativeSrc": "9078:34:23",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9078:34:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9105:6:23",
																					"nodeType": "YulIdentifier",
																					"src": "9105:6:23"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9099:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "9099:5:23"
																			},
																			"nativeSrc": "9099:13:23",
																			"nodeType": "YulFunctionCall",
																			"src": "9099:13:23"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "9082:13:23",
																				"nodeType": "YulTypedName",
																				"src": "9082:13:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9125:124:23",
																		"nodeType": "YulAssignment",
																		"src": "9125:124:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "9230:13:23",
																					"nodeType": "YulIdentifier",
																					"src": "9230:13:23"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "9245:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "9245:3:23"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_TeamMember_$213_memory_ptr_to_t_struct$_TeamMember_$213_memory_ptr",
																				"nativeSrc": "9132:97:23",
																				"nodeType": "YulIdentifier",
																				"src": "9132:97:23"
																			},
																			"nativeSrc": "9132:117:23",
																			"nodeType": "YulFunctionCall",
																			"src": "9132:117:23"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9125:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "9125:3:23"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9262:97:23",
																		"nodeType": "YulAssignment",
																		"src": "9262:97:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9352:6:23",
																					"nodeType": "YulIdentifier",
																					"src": "9352:6:23"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "9272:79:23",
																				"nodeType": "YulIdentifier",
																				"src": "9272:79:23"
																			},
																			"nativeSrc": "9272:87:23",
																			"nodeType": "YulFunctionCall",
																			"src": "9272:87:23"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9262:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "9262:6:23"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9026:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "9026:1:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9029:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "9029:6:23"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9023:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "9023:2:23"
																},
																"nativeSrc": "9023:13:23",
																"nodeType": "YulFunctionCall",
																"src": "9023:13:23"
															},
															"nativeSrc": "9004:365:23",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9037:18:23",
																"nodeType": "YulBlock",
																"src": "9037:18:23",
																"statements": [
																	{
																		"nativeSrc": "9039:14:23",
																		"nodeType": "YulAssignment",
																		"src": "9039:14:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9048:1:23",
																					"nodeType": "YulIdentifier",
																					"src": "9048:1:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9051:1:23",
																					"nodeType": "YulLiteral",
																					"src": "9051:1:23",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9044:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "9044:3:23"
																			},
																			"nativeSrc": "9044:9:23",
																			"nodeType": "YulFunctionCall",
																			"src": "9044:9:23"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9039:1:23",
																				"nodeType": "YulIdentifier",
																				"src": "9039:1:23"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9008:14:23",
																"nodeType": "YulBlock",
																"src": "9008:14:23",
																"statements": [
																	{
																		"nativeSrc": "9010:10:23",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9010:10:23",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9019:1:23",
																			"nodeType": "YulLiteral",
																			"src": "9019:1:23",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "9014:1:23",
																				"nodeType": "YulTypedName",
																				"src": "9014:1:23",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9004:365:23"
														},
														{
															"nativeSrc": "9378:10:23",
															"nodeType": "YulAssignment",
															"src": "9378:10:23",
															"value": {
																"name": "pos",
																"nativeSrc": "9385:3:23",
																"nodeType": "YulIdentifier",
																"src": "9385:3:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9378:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "9378:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "8446:948:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8603:5:23",
														"nodeType": "YulTypedName",
														"src": "8603:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8610:3:23",
														"nodeType": "YulTypedName",
														"src": "8610:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8619:3:23",
														"nodeType": "YulTypedName",
														"src": "8619:3:23",
														"type": ""
													}
												],
												"src": "8446:948:23"
											},
											{
												"body": {
													"nativeSrc": "9602:279:23",
													"nodeType": "YulBlock",
													"src": "9602:279:23",
													"statements": [
														{
															"nativeSrc": "9612:26:23",
															"nodeType": "YulAssignment",
															"src": "9612:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9624:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "9624:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9635:2:23",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9620:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "9620:3:23"
																},
																"nativeSrc": "9620:18:23",
																"nodeType": "YulFunctionCall",
																"src": "9620:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9612:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "9612:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9659:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "9659:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9670:1:23",
																				"nodeType": "YulLiteral",
																				"src": "9670:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9655:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "9655:3:23"
																		},
																		"nativeSrc": "9655:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "9655:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9678:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "9678:4:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9684:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "9684:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9674:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "9674:3:23"
																		},
																		"nativeSrc": "9674:20:23",
																		"nodeType": "YulFunctionCall",
																		"src": "9674:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9648:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "9648:6:23"
																},
																"nativeSrc": "9648:47:23",
																"nodeType": "YulFunctionCall",
																"src": "9648:47:23"
															},
															"nativeSrc": "9648:47:23",
															"nodeType": "YulExpressionStatement",
															"src": "9648:47:23"
														},
														{
															"nativeSrc": "9704:170:23",
															"nodeType": "YulAssignment",
															"src": "9704:170:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9860:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "9860:6:23"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9869:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "9869:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9712:147:23",
																	"nodeType": "YulIdentifier",
																	"src": "9712:147:23"
																},
																"nativeSrc": "9712:162:23",
																"nodeType": "YulFunctionCall",
																"src": "9712:162:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9704:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "9704:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "9400:481:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9574:9:23",
														"nodeType": "YulTypedName",
														"src": "9574:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9586:6:23",
														"nodeType": "YulTypedName",
														"src": "9586:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9597:4:23",
														"nodeType": "YulTypedName",
														"src": "9597:4:23",
														"type": ""
													}
												],
												"src": "9400:481:23"
											},
											{
												"body": {
													"nativeSrc": "9915:152:23",
													"nodeType": "YulBlock",
													"src": "9915:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9932:1:23",
																		"nodeType": "YulLiteral",
																		"src": "9932:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9935:77:23",
																		"nodeType": "YulLiteral",
																		"src": "9935:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9925:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "9925:6:23"
																},
																"nativeSrc": "9925:88:23",
																"nodeType": "YulFunctionCall",
																"src": "9925:88:23"
															},
															"nativeSrc": "9925:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "9925:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10029:1:23",
																		"nodeType": "YulLiteral",
																		"src": "10029:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10032:4:23",
																		"nodeType": "YulLiteral",
																		"src": "10032:4:23",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10022:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "10022:6:23"
																},
																"nativeSrc": "10022:15:23",
																"nodeType": "YulFunctionCall",
																"src": "10022:15:23"
															},
															"nativeSrc": "10022:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "10022:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10053:1:23",
																		"nodeType": "YulLiteral",
																		"src": "10053:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10056:4:23",
																		"nodeType": "YulLiteral",
																		"src": "10056:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10046:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "10046:6:23"
																},
																"nativeSrc": "10046:15:23",
																"nodeType": "YulFunctionCall",
																"src": "10046:15:23"
															},
															"nativeSrc": "10046:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "10046:15:23"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9887:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "9887:180:23"
											},
											{
												"body": {
													"nativeSrc": "10124:269:23",
													"nodeType": "YulBlock",
													"src": "10124:269:23",
													"statements": [
														{
															"nativeSrc": "10134:22:23",
															"nodeType": "YulAssignment",
															"src": "10134:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10148:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "10148:4:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10154:1:23",
																		"nodeType": "YulLiteral",
																		"src": "10154:1:23",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10144:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "10144:3:23"
																},
																"nativeSrc": "10144:12:23",
																"nodeType": "YulFunctionCall",
																"src": "10144:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10134:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "10134:6:23"
																}
															]
														},
														{
															"nativeSrc": "10165:38:23",
															"nodeType": "YulVariableDeclaration",
															"src": "10165:38:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10195:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "10195:4:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10201:1:23",
																		"nodeType": "YulLiteral",
																		"src": "10201:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10191:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "10191:3:23"
																},
																"nativeSrc": "10191:12:23",
																"nodeType": "YulFunctionCall",
																"src": "10191:12:23"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10169:18:23",
																	"nodeType": "YulTypedName",
																	"src": "10169:18:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10242:51:23",
																"nodeType": "YulBlock",
																"src": "10242:51:23",
																"statements": [
																	{
																		"nativeSrc": "10256:27:23",
																		"nodeType": "YulAssignment",
																		"src": "10256:27:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10270:6:23",
																					"nodeType": "YulIdentifier",
																					"src": "10270:6:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10278:4:23",
																					"nodeType": "YulLiteral",
																					"src": "10278:4:23",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10266:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "10266:3:23"
																			},
																			"nativeSrc": "10266:17:23",
																			"nodeType": "YulFunctionCall",
																			"src": "10266:17:23"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10256:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "10256:6:23"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10222:18:23",
																		"nodeType": "YulIdentifier",
																		"src": "10222:18:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10215:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "10215:6:23"
																},
																"nativeSrc": "10215:26:23",
																"nodeType": "YulFunctionCall",
																"src": "10215:26:23"
															},
															"nativeSrc": "10212:81:23",
															"nodeType": "YulIf",
															"src": "10212:81:23"
														},
														{
															"body": {
																"nativeSrc": "10345:42:23",
																"nodeType": "YulBlock",
																"src": "10345:42:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10359:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "10359:16:23"
																			},
																			"nativeSrc": "10359:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "10359:18:23"
																		},
																		"nativeSrc": "10359:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "10359:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10309:18:23",
																		"nodeType": "YulIdentifier",
																		"src": "10309:18:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10332:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "10332:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10340:2:23",
																				"nodeType": "YulLiteral",
																				"src": "10340:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10329:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "10329:2:23"
																		},
																		"nativeSrc": "10329:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "10329:14:23"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10306:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "10306:2:23"
																},
																"nativeSrc": "10306:38:23",
																"nodeType": "YulFunctionCall",
																"src": "10306:38:23"
															},
															"nativeSrc": "10303:84:23",
															"nodeType": "YulIf",
															"src": "10303:84:23"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10073:320:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10108:4:23",
														"nodeType": "YulTypedName",
														"src": "10108:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10117:6:23",
														"nodeType": "YulTypedName",
														"src": "10117:6:23",
														"type": ""
													}
												],
												"src": "10073:320:23"
											},
											{
												"body": {
													"nativeSrc": "10505:66:23",
													"nodeType": "YulBlock",
													"src": "10505:66:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10527:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "10527:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10535:1:23",
																				"nodeType": "YulLiteral",
																				"src": "10535:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10523:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "10523:3:23"
																		},
																		"nativeSrc": "10523:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "10523:14:23"
																	},
																	{
																		"hexValue": "5465616d20746f6b656e7320617265206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "10539:24:23",
																		"nodeType": "YulLiteral",
																		"src": "10539:24:23",
																		"type": "",
																		"value": "Team tokens are locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10516:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "10516:6:23"
																},
																"nativeSrc": "10516:48:23",
																"nodeType": "YulFunctionCall",
																"src": "10516:48:23"
															},
															"nativeSrc": "10516:48:23",
															"nodeType": "YulExpressionStatement",
															"src": "10516:48:23"
														}
													]
												},
												"name": "store_literal_in_memory_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf",
												"nativeSrc": "10399:172:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10497:6:23",
														"nodeType": "YulTypedName",
														"src": "10497:6:23",
														"type": ""
													}
												],
												"src": "10399:172:23"
											},
											{
												"body": {
													"nativeSrc": "10723:220:23",
													"nodeType": "YulBlock",
													"src": "10723:220:23",
													"statements": [
														{
															"nativeSrc": "10733:74:23",
															"nodeType": "YulAssignment",
															"src": "10733:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10799:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "10799:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10804:2:23",
																		"nodeType": "YulLiteral",
																		"src": "10804:2:23",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10740:58:23",
																	"nodeType": "YulIdentifier",
																	"src": "10740:58:23"
																},
																"nativeSrc": "10740:67:23",
																"nodeType": "YulFunctionCall",
																"src": "10740:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10733:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "10733:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10905:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "10905:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf",
																	"nativeSrc": "10816:88:23",
																	"nodeType": "YulIdentifier",
																	"src": "10816:88:23"
																},
																"nativeSrc": "10816:93:23",
																"nodeType": "YulFunctionCall",
																"src": "10816:93:23"
															},
															"nativeSrc": "10816:93:23",
															"nodeType": "YulExpressionStatement",
															"src": "10816:93:23"
														},
														{
															"nativeSrc": "10918:19:23",
															"nodeType": "YulAssignment",
															"src": "10918:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10929:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "10929:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10934:2:23",
																		"nodeType": "YulLiteral",
																		"src": "10934:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10925:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "10925:3:23"
																},
																"nativeSrc": "10925:12:23",
																"nodeType": "YulFunctionCall",
																"src": "10925:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10918:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "10918:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10577:366:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10711:3:23",
														"nodeType": "YulTypedName",
														"src": "10711:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10719:3:23",
														"nodeType": "YulTypedName",
														"src": "10719:3:23",
														"type": ""
													}
												],
												"src": "10577:366:23"
											},
											{
												"body": {
													"nativeSrc": "11120:248:23",
													"nodeType": "YulBlock",
													"src": "11120:248:23",
													"statements": [
														{
															"nativeSrc": "11130:26:23",
															"nodeType": "YulAssignment",
															"src": "11130:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11142:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "11142:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11153:2:23",
																		"nodeType": "YulLiteral",
																		"src": "11153:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11138:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11138:3:23"
																},
																"nativeSrc": "11138:18:23",
																"nodeType": "YulFunctionCall",
																"src": "11138:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11130:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "11130:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11177:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "11177:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11188:1:23",
																				"nodeType": "YulLiteral",
																				"src": "11188:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11173:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "11173:3:23"
																		},
																		"nativeSrc": "11173:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "11173:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11196:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "11196:4:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11202:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "11202:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11192:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "11192:3:23"
																		},
																		"nativeSrc": "11192:20:23",
																		"nodeType": "YulFunctionCall",
																		"src": "11192:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11166:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "11166:6:23"
																},
																"nativeSrc": "11166:47:23",
																"nodeType": "YulFunctionCall",
																"src": "11166:47:23"
															},
															"nativeSrc": "11166:47:23",
															"nodeType": "YulExpressionStatement",
															"src": "11166:47:23"
														},
														{
															"nativeSrc": "11222:139:23",
															"nodeType": "YulAssignment",
															"src": "11222:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11356:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "11356:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11230:124:23",
																	"nodeType": "YulIdentifier",
																	"src": "11230:124:23"
																},
																"nativeSrc": "11230:131:23",
																"nodeType": "YulFunctionCall",
																"src": "11230:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11222:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "11222:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10949:419:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11100:9:23",
														"nodeType": "YulTypedName",
														"src": "11100:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11115:4:23",
														"nodeType": "YulTypedName",
														"src": "11115:4:23",
														"type": ""
													}
												],
												"src": "10949:419:23"
											},
											{
												"body": {
													"nativeSrc": "11480:63:23",
													"nodeType": "YulBlock",
													"src": "11480:63:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11502:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "11502:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11510:1:23",
																				"nodeType": "YulLiteral",
																				"src": "11510:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11498:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "11498:3:23"
																		},
																		"nativeSrc": "11498:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "11498:14:23"
																	},
																	{
																		"hexValue": "496e646578206f7574206f6620626f756e6473",
																		"kind": "string",
																		"nativeSrc": "11514:21:23",
																		"nodeType": "YulLiteral",
																		"src": "11514:21:23",
																		"type": "",
																		"value": "Index out of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11491:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "11491:6:23"
																},
																"nativeSrc": "11491:45:23",
																"nodeType": "YulFunctionCall",
																"src": "11491:45:23"
															},
															"nativeSrc": "11491:45:23",
															"nodeType": "YulExpressionStatement",
															"src": "11491:45:23"
														}
													]
												},
												"name": "store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
												"nativeSrc": "11374:169:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11472:6:23",
														"nodeType": "YulTypedName",
														"src": "11472:6:23",
														"type": ""
													}
												],
												"src": "11374:169:23"
											},
											{
												"body": {
													"nativeSrc": "11695:220:23",
													"nodeType": "YulBlock",
													"src": "11695:220:23",
													"statements": [
														{
															"nativeSrc": "11705:74:23",
															"nodeType": "YulAssignment",
															"src": "11705:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11771:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "11771:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11776:2:23",
																		"nodeType": "YulLiteral",
																		"src": "11776:2:23",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11712:58:23",
																	"nodeType": "YulIdentifier",
																	"src": "11712:58:23"
																},
																"nativeSrc": "11712:67:23",
																"nodeType": "YulFunctionCall",
																"src": "11712:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11705:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11705:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11877:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "11877:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																	"nativeSrc": "11788:88:23",
																	"nodeType": "YulIdentifier",
																	"src": "11788:88:23"
																},
																"nativeSrc": "11788:93:23",
																"nodeType": "YulFunctionCall",
																"src": "11788:93:23"
															},
															"nativeSrc": "11788:93:23",
															"nodeType": "YulExpressionStatement",
															"src": "11788:93:23"
														},
														{
															"nativeSrc": "11890:19:23",
															"nodeType": "YulAssignment",
															"src": "11890:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11901:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "11901:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11906:2:23",
																		"nodeType": "YulLiteral",
																		"src": "11906:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11897:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11897:3:23"
																},
																"nativeSrc": "11897:12:23",
																"nodeType": "YulFunctionCall",
																"src": "11897:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11890:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11890:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11549:366:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11683:3:23",
														"nodeType": "YulTypedName",
														"src": "11683:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11691:3:23",
														"nodeType": "YulTypedName",
														"src": "11691:3:23",
														"type": ""
													}
												],
												"src": "11549:366:23"
											},
											{
												"body": {
													"nativeSrc": "12092:248:23",
													"nodeType": "YulBlock",
													"src": "12092:248:23",
													"statements": [
														{
															"nativeSrc": "12102:26:23",
															"nodeType": "YulAssignment",
															"src": "12102:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12114:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "12114:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12125:2:23",
																		"nodeType": "YulLiteral",
																		"src": "12125:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12110:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "12110:3:23"
																},
																"nativeSrc": "12110:18:23",
																"nodeType": "YulFunctionCall",
																"src": "12110:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12102:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "12102:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12149:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "12149:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12160:1:23",
																				"nodeType": "YulLiteral",
																				"src": "12160:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12145:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "12145:3:23"
																		},
																		"nativeSrc": "12145:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "12145:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12168:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "12168:4:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12174:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "12174:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12164:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "12164:3:23"
																		},
																		"nativeSrc": "12164:20:23",
																		"nodeType": "YulFunctionCall",
																		"src": "12164:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12138:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12138:6:23"
																},
																"nativeSrc": "12138:47:23",
																"nodeType": "YulFunctionCall",
																"src": "12138:47:23"
															},
															"nativeSrc": "12138:47:23",
															"nodeType": "YulExpressionStatement",
															"src": "12138:47:23"
														},
														{
															"nativeSrc": "12194:139:23",
															"nodeType": "YulAssignment",
															"src": "12194:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12328:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "12328:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12202:124:23",
																	"nodeType": "YulIdentifier",
																	"src": "12202:124:23"
																},
																"nativeSrc": "12202:131:23",
																"nodeType": "YulFunctionCall",
																"src": "12202:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12194:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "12194:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11921:419:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12072:9:23",
														"nodeType": "YulTypedName",
														"src": "12072:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12087:4:23",
														"nodeType": "YulTypedName",
														"src": "12087:4:23",
														"type": ""
													}
												],
												"src": "11921:419:23"
											},
											{
												"body": {
													"nativeSrc": "12374:152:23",
													"nodeType": "YulBlock",
													"src": "12374:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12391:1:23",
																		"nodeType": "YulLiteral",
																		"src": "12391:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12394:77:23",
																		"nodeType": "YulLiteral",
																		"src": "12394:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12384:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12384:6:23"
																},
																"nativeSrc": "12384:88:23",
																"nodeType": "YulFunctionCall",
																"src": "12384:88:23"
															},
															"nativeSrc": "12384:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "12384:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12488:1:23",
																		"nodeType": "YulLiteral",
																		"src": "12488:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12491:4:23",
																		"nodeType": "YulLiteral",
																		"src": "12491:4:23",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12481:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12481:6:23"
																},
																"nativeSrc": "12481:15:23",
																"nodeType": "YulFunctionCall",
																"src": "12481:15:23"
															},
															"nativeSrc": "12481:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "12481:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12512:1:23",
																		"nodeType": "YulLiteral",
																		"src": "12512:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12515:4:23",
																		"nodeType": "YulLiteral",
																		"src": "12515:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12505:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12505:6:23"
																},
																"nativeSrc": "12505:15:23",
																"nodeType": "YulFunctionCall",
																"src": "12505:15:23"
															},
															"nativeSrc": "12505:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "12505:15:23"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12346:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "12346:180:23"
											},
											{
												"body": {
													"nativeSrc": "12575:79:23",
													"nodeType": "YulBlock",
													"src": "12575:79:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "12632:16:23",
																"nodeType": "YulBlock",
																"src": "12632:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12641:1:23",
																					"nodeType": "YulLiteral",
																					"src": "12641:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12644:1:23",
																					"nodeType": "YulLiteral",
																					"src": "12644:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12634:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "12634:6:23"
																			},
																			"nativeSrc": "12634:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "12634:12:23"
																		},
																		"nativeSrc": "12634:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "12634:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12598:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "12598:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12623:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "12623:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "12605:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "12605:17:23"
																				},
																				"nativeSrc": "12605:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "12605:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12595:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "12595:2:23"
																		},
																		"nativeSrc": "12595:35:23",
																		"nodeType": "YulFunctionCall",
																		"src": "12595:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12588:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12588:6:23"
																},
																"nativeSrc": "12588:43:23",
																"nodeType": "YulFunctionCall",
																"src": "12588:43:23"
															},
															"nativeSrc": "12585:63:23",
															"nodeType": "YulIf",
															"src": "12585:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "12532:122:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12568:5:23",
														"nodeType": "YulTypedName",
														"src": "12568:5:23",
														"type": ""
													}
												],
												"src": "12532:122:23"
											},
											{
												"body": {
													"nativeSrc": "12723:80:23",
													"nodeType": "YulBlock",
													"src": "12723:80:23",
													"statements": [
														{
															"nativeSrc": "12733:22:23",
															"nodeType": "YulAssignment",
															"src": "12733:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12748:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "12748:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12742:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "12742:5:23"
																},
																"nativeSrc": "12742:13:23",
																"nodeType": "YulFunctionCall",
																"src": "12742:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12733:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "12733:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12791:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "12791:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "12764:26:23",
																	"nodeType": "YulIdentifier",
																	"src": "12764:26:23"
																},
																"nativeSrc": "12764:33:23",
																"nodeType": "YulFunctionCall",
																"src": "12764:33:23"
															},
															"nativeSrc": "12764:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "12764:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "12660:143:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12701:6:23",
														"nodeType": "YulTypedName",
														"src": "12701:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12709:3:23",
														"nodeType": "YulTypedName",
														"src": "12709:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12717:5:23",
														"nodeType": "YulTypedName",
														"src": "12717:5:23",
														"type": ""
													}
												],
												"src": "12660:143:23"
											},
											{
												"body": {
													"nativeSrc": "12852:47:23",
													"nodeType": "YulBlock",
													"src": "12852:47:23",
													"statements": [
														{
															"nativeSrc": "12862:31:23",
															"nodeType": "YulAssignment",
															"src": "12862:31:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12884:1:23",
																		"nodeType": "YulLiteral",
																		"src": "12884:1:23",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12887:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "12887:5:23"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "12873:10:23",
																	"nodeType": "YulIdentifier",
																	"src": "12873:10:23"
																},
																"nativeSrc": "12873:20:23",
																"nodeType": "YulFunctionCall",
																"src": "12873:20:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12862:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "12862:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "12809:90:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12834:5:23",
														"nodeType": "YulTypedName",
														"src": "12834:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12844:7:23",
														"nodeType": "YulTypedName",
														"src": "12844:7:23",
														"type": ""
													}
												],
												"src": "12809:90:23"
											},
											{
												"body": {
													"nativeSrc": "12946:77:23",
													"nodeType": "YulBlock",
													"src": "12946:77:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "13001:16:23",
																"nodeType": "YulBlock",
																"src": "13001:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13010:1:23",
																					"nodeType": "YulLiteral",
																					"src": "13010:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13013:1:23",
																					"nodeType": "YulLiteral",
																					"src": "13013:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13003:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "13003:6:23"
																			},
																			"nativeSrc": "13003:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "13003:12:23"
																		},
																		"nativeSrc": "13003:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "13003:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12969:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "12969:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12992:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "12992:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "12976:15:23",
																					"nodeType": "YulIdentifier",
																					"src": "12976:15:23"
																				},
																				"nativeSrc": "12976:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "12976:22:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12966:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "12966:2:23"
																		},
																		"nativeSrc": "12966:33:23",
																		"nodeType": "YulFunctionCall",
																		"src": "12966:33:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12959:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12959:6:23"
																},
																"nativeSrc": "12959:41:23",
																"nodeType": "YulFunctionCall",
																"src": "12959:41:23"
															},
															"nativeSrc": "12956:61:23",
															"nodeType": "YulIf",
															"src": "12956:61:23"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "12905:118:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12939:5:23",
														"nodeType": "YulTypedName",
														"src": "12939:5:23",
														"type": ""
													}
												],
												"src": "12905:118:23"
											},
											{
												"body": {
													"nativeSrc": "13090:78:23",
													"nodeType": "YulBlock",
													"src": "13090:78:23",
													"statements": [
														{
															"nativeSrc": "13100:22:23",
															"nodeType": "YulAssignment",
															"src": "13100:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13115:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "13115:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13109:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "13109:5:23"
																},
																"nativeSrc": "13109:13:23",
																"nodeType": "YulFunctionCall",
																"src": "13109:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13100:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "13100:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13156:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "13156:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "13131:24:23",
																	"nodeType": "YulIdentifier",
																	"src": "13131:24:23"
																},
																"nativeSrc": "13131:31:23",
																"nodeType": "YulFunctionCall",
																"src": "13131:31:23"
															},
															"nativeSrc": "13131:31:23",
															"nodeType": "YulExpressionStatement",
															"src": "13131:31:23"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nativeSrc": "13029:139:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13068:6:23",
														"nodeType": "YulTypedName",
														"src": "13068:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13076:3:23",
														"nodeType": "YulTypedName",
														"src": "13076:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13084:5:23",
														"nodeType": "YulTypedName",
														"src": "13084:5:23",
														"type": ""
													}
												],
												"src": "13029:139:23"
											},
											{
												"body": {
													"nativeSrc": "13218:45:23",
													"nodeType": "YulBlock",
													"src": "13218:45:23",
													"statements": [
														{
															"nativeSrc": "13228:29:23",
															"nodeType": "YulAssignment",
															"src": "13228:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13243:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "13243:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13250:6:23",
																		"nodeType": "YulLiteral",
																		"src": "13250:6:23",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13239:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13239:3:23"
																},
																"nativeSrc": "13239:18:23",
																"nodeType": "YulFunctionCall",
																"src": "13239:18:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13228:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "13228:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "13174:89:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13200:5:23",
														"nodeType": "YulTypedName",
														"src": "13200:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13210:7:23",
														"nodeType": "YulTypedName",
														"src": "13210:7:23",
														"type": ""
													}
												],
												"src": "13174:89:23"
											},
											{
												"body": {
													"nativeSrc": "13311:78:23",
													"nodeType": "YulBlock",
													"src": "13311:78:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "13367:16:23",
																"nodeType": "YulBlock",
																"src": "13367:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13376:1:23",
																					"nodeType": "YulLiteral",
																					"src": "13376:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13379:1:23",
																					"nodeType": "YulLiteral",
																					"src": "13379:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13369:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "13369:6:23"
																			},
																			"nativeSrc": "13369:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "13369:12:23"
																		},
																		"nativeSrc": "13369:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "13369:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13334:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "13334:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13358:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "13358:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "13341:16:23",
																					"nodeType": "YulIdentifier",
																					"src": "13341:16:23"
																				},
																				"nativeSrc": "13341:23:23",
																				"nodeType": "YulFunctionCall",
																				"src": "13341:23:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13331:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "13331:2:23"
																		},
																		"nativeSrc": "13331:34:23",
																		"nodeType": "YulFunctionCall",
																		"src": "13331:34:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13324:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "13324:6:23"
																},
																"nativeSrc": "13324:42:23",
																"nodeType": "YulFunctionCall",
																"src": "13324:42:23"
															},
															"nativeSrc": "13321:62:23",
															"nodeType": "YulIf",
															"src": "13321:62:23"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "13269:120:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13304:5:23",
														"nodeType": "YulTypedName",
														"src": "13304:5:23",
														"type": ""
													}
												],
												"src": "13269:120:23"
											},
											{
												"body": {
													"nativeSrc": "13457:79:23",
													"nodeType": "YulBlock",
													"src": "13457:79:23",
													"statements": [
														{
															"nativeSrc": "13467:22:23",
															"nodeType": "YulAssignment",
															"src": "13467:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13482:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "13482:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13476:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "13476:5:23"
																},
																"nativeSrc": "13476:13:23",
																"nodeType": "YulFunctionCall",
																"src": "13476:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13467:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "13467:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13524:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "13524:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "13498:25:23",
																	"nodeType": "YulIdentifier",
																	"src": "13498:25:23"
																},
																"nativeSrc": "13498:32:23",
																"nodeType": "YulFunctionCall",
																"src": "13498:32:23"
															},
															"nativeSrc": "13498:32:23",
															"nodeType": "YulExpressionStatement",
															"src": "13498:32:23"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "13395:141:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13435:6:23",
														"nodeType": "YulTypedName",
														"src": "13435:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13443:3:23",
														"nodeType": "YulTypedName",
														"src": "13443:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13451:5:23",
														"nodeType": "YulTypedName",
														"src": "13451:5:23",
														"type": ""
													}
												],
												"src": "13395:141:23"
											},
											{
												"body": {
													"nativeSrc": "13583:77:23",
													"nodeType": "YulBlock",
													"src": "13583:77:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "13638:16:23",
																"nodeType": "YulBlock",
																"src": "13638:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13647:1:23",
																					"nodeType": "YulLiteral",
																					"src": "13647:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13650:1:23",
																					"nodeType": "YulLiteral",
																					"src": "13650:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13640:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "13640:6:23"
																			},
																			"nativeSrc": "13640:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "13640:12:23"
																		},
																		"nativeSrc": "13640:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "13640:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13606:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "13606:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13629:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "13629:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "13613:15:23",
																					"nodeType": "YulIdentifier",
																					"src": "13613:15:23"
																				},
																				"nativeSrc": "13613:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "13613:22:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13603:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "13603:2:23"
																		},
																		"nativeSrc": "13603:33:23",
																		"nodeType": "YulFunctionCall",
																		"src": "13603:33:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13596:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "13596:6:23"
																},
																"nativeSrc": "13596:41:23",
																"nodeType": "YulFunctionCall",
																"src": "13596:41:23"
															},
															"nativeSrc": "13593:61:23",
															"nodeType": "YulIf",
															"src": "13593:61:23"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "13542:118:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13576:5:23",
														"nodeType": "YulTypedName",
														"src": "13576:5:23",
														"type": ""
													}
												],
												"src": "13542:118:23"
											},
											{
												"body": {
													"nativeSrc": "13727:78:23",
													"nodeType": "YulBlock",
													"src": "13727:78:23",
													"statements": [
														{
															"nativeSrc": "13737:22:23",
															"nodeType": "YulAssignment",
															"src": "13737:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13752:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "13752:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13746:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "13746:5:23"
																},
																"nativeSrc": "13746:13:23",
																"nodeType": "YulFunctionCall",
																"src": "13746:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13737:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "13737:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13793:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "13793:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "13768:24:23",
																	"nodeType": "YulIdentifier",
																	"src": "13768:24:23"
																},
																"nativeSrc": "13768:31:23",
																"nodeType": "YulFunctionCall",
																"src": "13768:31:23"
															},
															"nativeSrc": "13768:31:23",
															"nodeType": "YulExpressionStatement",
															"src": "13768:31:23"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "13666:139:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13705:6:23",
														"nodeType": "YulTypedName",
														"src": "13705:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13713:3:23",
														"nodeType": "YulTypedName",
														"src": "13713:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13721:5:23",
														"nodeType": "YulTypedName",
														"src": "13721:5:23",
														"type": ""
													}
												],
												"src": "13666:139:23"
											},
											{
												"body": {
													"nativeSrc": "13851:76:23",
													"nodeType": "YulBlock",
													"src": "13851:76:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "13905:16:23",
																"nodeType": "YulBlock",
																"src": "13905:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13914:1:23",
																					"nodeType": "YulLiteral",
																					"src": "13914:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13917:1:23",
																					"nodeType": "YulLiteral",
																					"src": "13917:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13907:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "13907:6:23"
																			},
																			"nativeSrc": "13907:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "13907:12:23"
																		},
																		"nativeSrc": "13907:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "13907:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13874:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "13874:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13896:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "13896:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13881:14:23",
																					"nodeType": "YulIdentifier",
																					"src": "13881:14:23"
																				},
																				"nativeSrc": "13881:21:23",
																				"nodeType": "YulFunctionCall",
																				"src": "13881:21:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13871:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "13871:2:23"
																		},
																		"nativeSrc": "13871:32:23",
																		"nodeType": "YulFunctionCall",
																		"src": "13871:32:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13864:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "13864:6:23"
																},
																"nativeSrc": "13864:40:23",
																"nodeType": "YulFunctionCall",
																"src": "13864:40:23"
															},
															"nativeSrc": "13861:60:23",
															"nodeType": "YulIf",
															"src": "13861:60:23"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13811:116:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13844:5:23",
														"nodeType": "YulTypedName",
														"src": "13844:5:23",
														"type": ""
													}
												],
												"src": "13811:116:23"
											},
											{
												"body": {
													"nativeSrc": "13993:77:23",
													"nodeType": "YulBlock",
													"src": "13993:77:23",
													"statements": [
														{
															"nativeSrc": "14003:22:23",
															"nodeType": "YulAssignment",
															"src": "14003:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14018:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "14018:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14012:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "14012:5:23"
																},
																"nativeSrc": "14012:13:23",
																"nodeType": "YulFunctionCall",
																"src": "14012:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14003:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "14003:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14058:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "14058:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14034:23:23",
																	"nodeType": "YulIdentifier",
																	"src": "14034:23:23"
																},
																"nativeSrc": "14034:30:23",
																"nodeType": "YulFunctionCall",
																"src": "14034:30:23"
															},
															"nativeSrc": "14034:30:23",
															"nodeType": "YulExpressionStatement",
															"src": "14034:30:23"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13933:137:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13971:6:23",
														"nodeType": "YulTypedName",
														"src": "13971:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13979:3:23",
														"nodeType": "YulTypedName",
														"src": "13979:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13987:5:23",
														"nodeType": "YulTypedName",
														"src": "13987:5:23",
														"type": ""
													}
												],
												"src": "13933:137:23"
											},
											{
												"body": {
													"nativeSrc": "14245:1102:23",
													"nodeType": "YulBlock",
													"src": "14245:1102:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "14292:83:23",
																"nodeType": "YulBlock",
																"src": "14292:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14294:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "14294:77:23"
																			},
																			"nativeSrc": "14294:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "14294:79:23"
																		},
																		"nativeSrc": "14294:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "14294:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14266:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "14266:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14275:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "14275:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14262:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "14262:3:23"
																		},
																		"nativeSrc": "14262:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "14262:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14287:3:23",
																		"nodeType": "YulLiteral",
																		"src": "14287:3:23",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14258:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "14258:3:23"
																},
																"nativeSrc": "14258:33:23",
																"nodeType": "YulFunctionCall",
																"src": "14258:33:23"
															},
															"nativeSrc": "14255:120:23",
															"nodeType": "YulIf",
															"src": "14255:120:23"
														},
														{
															"nativeSrc": "14385:128:23",
															"nodeType": "YulBlock",
															"src": "14385:128:23",
															"statements": [
																{
																	"nativeSrc": "14400:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14400:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14414:1:23",
																		"nodeType": "YulLiteral",
																		"src": "14414:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14404:6:23",
																			"nodeType": "YulTypedName",
																			"src": "14404:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14429:74:23",
																	"nodeType": "YulAssignment",
																	"src": "14429:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14475:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "14475:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14486:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "14486:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14471:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "14471:3:23"
																				},
																				"nativeSrc": "14471:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "14471:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14495:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "14495:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "14439:31:23",
																			"nodeType": "YulIdentifier",
																			"src": "14439:31:23"
																		},
																		"nativeSrc": "14439:64:23",
																		"nodeType": "YulFunctionCall",
																		"src": "14439:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14429:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "14429:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14523:127:23",
															"nodeType": "YulBlock",
															"src": "14523:127:23",
															"statements": [
																{
																	"nativeSrc": "14538:16:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14538:16:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14552:2:23",
																		"nodeType": "YulLiteral",
																		"src": "14552:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14542:6:23",
																			"nodeType": "YulTypedName",
																			"src": "14542:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14568:72:23",
																	"nodeType": "YulAssignment",
																	"src": "14568:72:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14612:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "14612:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14623:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "14623:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14608:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "14608:3:23"
																				},
																				"nativeSrc": "14608:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "14608:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14632:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "14632:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nativeSrc": "14578:29:23",
																			"nodeType": "YulIdentifier",
																			"src": "14578:29:23"
																		},
																		"nativeSrc": "14578:62:23",
																		"nodeType": "YulFunctionCall",
																		"src": "14578:62:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14568:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "14568:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14660:128:23",
															"nodeType": "YulBlock",
															"src": "14660:128:23",
															"statements": [
																{
																	"nativeSrc": "14675:16:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14675:16:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14689:2:23",
																		"nodeType": "YulLiteral",
																		"src": "14689:2:23",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14679:6:23",
																			"nodeType": "YulTypedName",
																			"src": "14679:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14705:73:23",
																	"nodeType": "YulAssignment",
																	"src": "14705:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14750:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "14750:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14761:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "14761:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14746:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "14746:3:23"
																				},
																				"nativeSrc": "14746:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "14746:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14770:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "14770:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "14715:30:23",
																			"nodeType": "YulIdentifier",
																			"src": "14715:30:23"
																		},
																		"nativeSrc": "14715:63:23",
																		"nodeType": "YulFunctionCall",
																		"src": "14715:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "14705:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "14705:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14798:128:23",
															"nodeType": "YulBlock",
															"src": "14798:128:23",
															"statements": [
																{
																	"nativeSrc": "14813:16:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14813:16:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14827:2:23",
																		"nodeType": "YulLiteral",
																		"src": "14827:2:23",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14817:6:23",
																			"nodeType": "YulTypedName",
																			"src": "14817:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14843:73:23",
																	"nodeType": "YulAssignment",
																	"src": "14843:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14888:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "14888:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14899:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "14899:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14884:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "14884:3:23"
																				},
																				"nativeSrc": "14884:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "14884:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14908:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "14908:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "14853:30:23",
																			"nodeType": "YulIdentifier",
																			"src": "14853:30:23"
																		},
																		"nativeSrc": "14853:63:23",
																		"nodeType": "YulFunctionCall",
																		"src": "14853:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "14843:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "14843:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14936:129:23",
															"nodeType": "YulBlock",
															"src": "14936:129:23",
															"statements": [
																{
																	"nativeSrc": "14951:17:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14951:17:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14965:3:23",
																		"nodeType": "YulLiteral",
																		"src": "14965:3:23",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14955:6:23",
																			"nodeType": "YulTypedName",
																			"src": "14955:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14982:73:23",
																	"nodeType": "YulAssignment",
																	"src": "14982:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15027:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "15027:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15038:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "15038:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15023:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "15023:3:23"
																				},
																				"nativeSrc": "15023:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "15023:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15047:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "15047:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "14992:30:23",
																			"nodeType": "YulIdentifier",
																			"src": "14992:30:23"
																		},
																		"nativeSrc": "14992:63:23",
																		"nodeType": "YulFunctionCall",
																		"src": "14992:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "14982:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "14982:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15075:128:23",
															"nodeType": "YulBlock",
															"src": "15075:128:23",
															"statements": [
																{
																	"nativeSrc": "15090:17:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15090:17:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15104:3:23",
																		"nodeType": "YulLiteral",
																		"src": "15104:3:23",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15094:6:23",
																			"nodeType": "YulTypedName",
																			"src": "15094:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15121:72:23",
																	"nodeType": "YulAssignment",
																	"src": "15121:72:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15165:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "15165:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15176:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "15176:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15161:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "15161:3:23"
																				},
																				"nativeSrc": "15161:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "15161:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15185:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "15185:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "15131:29:23",
																			"nodeType": "YulIdentifier",
																			"src": "15131:29:23"
																		},
																		"nativeSrc": "15131:62:23",
																		"nodeType": "YulFunctionCall",
																		"src": "15131:62:23"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "15121:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "15121:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15213:127:23",
															"nodeType": "YulBlock",
															"src": "15213:127:23",
															"statements": [
																{
																	"nativeSrc": "15228:17:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15228:17:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15242:3:23",
																		"nodeType": "YulLiteral",
																		"src": "15242:3:23",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15232:6:23",
																			"nodeType": "YulTypedName",
																			"src": "15232:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15259:71:23",
																	"nodeType": "YulAssignment",
																	"src": "15259:71:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15302:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "15302:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15313:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "15313:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15298:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "15298:3:23"
																				},
																				"nativeSrc": "15298:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "15298:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15322:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "15322:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "15269:28:23",
																			"nodeType": "YulIdentifier",
																			"src": "15269:28:23"
																		},
																		"nativeSrc": "15269:61:23",
																		"nodeType": "YulFunctionCall",
																		"src": "15269:61:23"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "15259:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "15259:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nativeSrc": "14076:1271:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14167:9:23",
														"nodeType": "YulTypedName",
														"src": "14167:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14178:7:23",
														"nodeType": "YulTypedName",
														"src": "14178:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14190:6:23",
														"nodeType": "YulTypedName",
														"src": "14190:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14198:6:23",
														"nodeType": "YulTypedName",
														"src": "14198:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14206:6:23",
														"nodeType": "YulTypedName",
														"src": "14206:6:23",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14214:6:23",
														"nodeType": "YulTypedName",
														"src": "14214:6:23",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "14222:6:23",
														"nodeType": "YulTypedName",
														"src": "14222:6:23",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "14230:6:23",
														"nodeType": "YulTypedName",
														"src": "14230:6:23",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "14238:6:23",
														"nodeType": "YulTypedName",
														"src": "14238:6:23",
														"type": ""
													}
												],
												"src": "14076:1271:23"
											},
											{
												"body": {
													"nativeSrc": "15381:152:23",
													"nodeType": "YulBlock",
													"src": "15381:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15398:1:23",
																		"nodeType": "YulLiteral",
																		"src": "15398:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15401:77:23",
																		"nodeType": "YulLiteral",
																		"src": "15401:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15391:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "15391:6:23"
																},
																"nativeSrc": "15391:88:23",
																"nodeType": "YulFunctionCall",
																"src": "15391:88:23"
															},
															"nativeSrc": "15391:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "15391:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15495:1:23",
																		"nodeType": "YulLiteral",
																		"src": "15495:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15498:4:23",
																		"nodeType": "YulLiteral",
																		"src": "15498:4:23",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15488:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "15488:6:23"
																},
																"nativeSrc": "15488:15:23",
																"nodeType": "YulFunctionCall",
																"src": "15488:15:23"
															},
															"nativeSrc": "15488:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "15488:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15519:1:23",
																		"nodeType": "YulLiteral",
																		"src": "15519:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15522:4:23",
																		"nodeType": "YulLiteral",
																		"src": "15522:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15512:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "15512:6:23"
																},
																"nativeSrc": "15512:15:23",
																"nodeType": "YulFunctionCall",
																"src": "15512:15:23"
															},
															"nativeSrc": "15512:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "15512:15:23"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15353:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "15353:180:23"
											},
											{
												"body": {
													"nativeSrc": "15587:362:23",
													"nodeType": "YulBlock",
													"src": "15587:362:23",
													"statements": [
														{
															"nativeSrc": "15597:25:23",
															"nodeType": "YulAssignment",
															"src": "15597:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15620:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "15620:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15602:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "15602:17:23"
																},
																"nativeSrc": "15602:20:23",
																"nodeType": "YulFunctionCall",
																"src": "15602:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15597:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "15597:1:23"
																}
															]
														},
														{
															"nativeSrc": "15631:25:23",
															"nodeType": "YulAssignment",
															"src": "15631:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15654:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "15654:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15636:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "15636:17:23"
																},
																"nativeSrc": "15636:20:23",
																"nodeType": "YulFunctionCall",
																"src": "15636:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15631:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "15631:1:23"
																}
															]
														},
														{
															"nativeSrc": "15665:28:23",
															"nodeType": "YulVariableDeclaration",
															"src": "15665:28:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15688:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "15688:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15691:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "15691:1:23"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15684:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "15684:3:23"
																},
																"nativeSrc": "15684:9:23",
																"nodeType": "YulFunctionCall",
																"src": "15684:9:23"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15669:11:23",
																	"nodeType": "YulTypedName",
																	"src": "15669:11:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15702:41:23",
															"nodeType": "YulAssignment",
															"src": "15702:41:23",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "15731:11:23",
																		"nodeType": "YulIdentifier",
																		"src": "15731:11:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15713:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "15713:17:23"
																},
																"nativeSrc": "15713:30:23",
																"nodeType": "YulFunctionCall",
																"src": "15713:30:23"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15702:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "15702:7:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15920:22:23",
																"nodeType": "YulBlock",
																"src": "15920:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15922:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "15922:16:23"
																			},
																			"nativeSrc": "15922:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "15922:18:23"
																		},
																		"nativeSrc": "15922:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "15922:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15853:1:23",
																						"nodeType": "YulIdentifier",
																						"src": "15853:1:23"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15846:6:23",
																					"nodeType": "YulIdentifier",
																					"src": "15846:6:23"
																				},
																				"nativeSrc": "15846:9:23",
																				"nodeType": "YulFunctionCall",
																				"src": "15846:9:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15876:1:23",
																						"nodeType": "YulIdentifier",
																						"src": "15876:1:23"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15883:7:23",
																								"nodeType": "YulIdentifier",
																								"src": "15883:7:23"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15892:1:23",
																								"nodeType": "YulIdentifier",
																								"src": "15892:1:23"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15879:3:23",
																							"nodeType": "YulIdentifier",
																							"src": "15879:3:23"
																						},
																						"nativeSrc": "15879:15:23",
																						"nodeType": "YulFunctionCall",
																						"src": "15879:15:23"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15873:2:23",
																					"nodeType": "YulIdentifier",
																					"src": "15873:2:23"
																				},
																				"nativeSrc": "15873:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "15873:22:23"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15826:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "15826:2:23"
																		},
																		"nativeSrc": "15826:83:23",
																		"nodeType": "YulFunctionCall",
																		"src": "15826:83:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15806:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "15806:6:23"
																},
																"nativeSrc": "15806:113:23",
																"nodeType": "YulFunctionCall",
																"src": "15806:113:23"
															},
															"nativeSrc": "15803:139:23",
															"nodeType": "YulIf",
															"src": "15803:139:23"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15539:410:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15570:1:23",
														"nodeType": "YulTypedName",
														"src": "15570:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15573:1:23",
														"nodeType": "YulTypedName",
														"src": "15573:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15579:7:23",
														"nodeType": "YulTypedName",
														"src": "15579:7:23",
														"type": ""
													}
												],
												"src": "15539:410:23"
											},
											{
												"body": {
													"nativeSrc": "15983:152:23",
													"nodeType": "YulBlock",
													"src": "15983:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16000:1:23",
																		"nodeType": "YulLiteral",
																		"src": "16000:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16003:77:23",
																		"nodeType": "YulLiteral",
																		"src": "16003:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15993:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "15993:6:23"
																},
																"nativeSrc": "15993:88:23",
																"nodeType": "YulFunctionCall",
																"src": "15993:88:23"
															},
															"nativeSrc": "15993:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "15993:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16097:1:23",
																		"nodeType": "YulLiteral",
																		"src": "16097:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16100:4:23",
																		"nodeType": "YulLiteral",
																		"src": "16100:4:23",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16090:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "16090:6:23"
																},
																"nativeSrc": "16090:15:23",
																"nodeType": "YulFunctionCall",
																"src": "16090:15:23"
															},
															"nativeSrc": "16090:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "16090:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16121:1:23",
																		"nodeType": "YulLiteral",
																		"src": "16121:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16124:4:23",
																		"nodeType": "YulLiteral",
																		"src": "16124:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16114:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "16114:6:23"
																},
																"nativeSrc": "16114:15:23",
																"nodeType": "YulFunctionCall",
																"src": "16114:15:23"
															},
															"nativeSrc": "16114:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "16114:15:23"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15955:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "15955:180:23"
											},
											{
												"body": {
													"nativeSrc": "16183:143:23",
													"nodeType": "YulBlock",
													"src": "16183:143:23",
													"statements": [
														{
															"nativeSrc": "16193:25:23",
															"nodeType": "YulAssignment",
															"src": "16193:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16216:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "16216:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16198:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "16198:17:23"
																},
																"nativeSrc": "16198:20:23",
																"nodeType": "YulFunctionCall",
																"src": "16198:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16193:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "16193:1:23"
																}
															]
														},
														{
															"nativeSrc": "16227:25:23",
															"nodeType": "YulAssignment",
															"src": "16227:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16250:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "16250:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16232:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "16232:17:23"
																},
																"nativeSrc": "16232:20:23",
																"nodeType": "YulFunctionCall",
																"src": "16232:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16227:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "16227:1:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16274:22:23",
																"nodeType": "YulBlock",
																"src": "16274:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "16276:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "16276:16:23"
																			},
																			"nativeSrc": "16276:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "16276:18:23"
																		},
																		"nativeSrc": "16276:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "16276:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16271:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "16271:1:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16264:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "16264:6:23"
																},
																"nativeSrc": "16264:9:23",
																"nodeType": "YulFunctionCall",
																"src": "16264:9:23"
															},
															"nativeSrc": "16261:35:23",
															"nodeType": "YulIf",
															"src": "16261:35:23"
														},
														{
															"nativeSrc": "16306:14:23",
															"nodeType": "YulAssignment",
															"src": "16306:14:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16315:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "16315:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16318:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "16318:1:23"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16311:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "16311:3:23"
																},
																"nativeSrc": "16311:9:23",
																"nodeType": "YulFunctionCall",
																"src": "16311:9:23"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "16306:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "16306:1:23"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "16141:185:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16172:1:23",
														"nodeType": "YulTypedName",
														"src": "16172:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16175:1:23",
														"nodeType": "YulTypedName",
														"src": "16175:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "16181:1:23",
														"nodeType": "YulTypedName",
														"src": "16181:1:23",
														"type": ""
													}
												],
												"src": "16141:185:23"
											},
											{
												"body": {
													"nativeSrc": "16486:288:23",
													"nodeType": "YulBlock",
													"src": "16486:288:23",
													"statements": [
														{
															"nativeSrc": "16496:26:23",
															"nodeType": "YulAssignment",
															"src": "16496:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16508:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "16508:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16519:2:23",
																		"nodeType": "YulLiteral",
																		"src": "16519:2:23",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16504:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "16504:3:23"
																},
																"nativeSrc": "16504:18:23",
																"nodeType": "YulFunctionCall",
																"src": "16504:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16496:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "16496:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16576:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "16576:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16589:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "16589:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16600:1:23",
																				"nodeType": "YulLiteral",
																				"src": "16600:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16585:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "16585:3:23"
																		},
																		"nativeSrc": "16585:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "16585:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16532:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "16532:43:23"
																},
																"nativeSrc": "16532:71:23",
																"nodeType": "YulFunctionCall",
																"src": "16532:71:23"
															},
															"nativeSrc": "16532:71:23",
															"nodeType": "YulExpressionStatement",
															"src": "16532:71:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16657:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "16657:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16670:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "16670:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16681:2:23",
																				"nodeType": "YulLiteral",
																				"src": "16681:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16666:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "16666:3:23"
																		},
																		"nativeSrc": "16666:18:23",
																		"nodeType": "YulFunctionCall",
																		"src": "16666:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16613:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "16613:43:23"
																},
																"nativeSrc": "16613:72:23",
																"nodeType": "YulFunctionCall",
																"src": "16613:72:23"
															},
															"nativeSrc": "16613:72:23",
															"nodeType": "YulExpressionStatement",
															"src": "16613:72:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16739:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "16739:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16752:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "16752:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16763:2:23",
																				"nodeType": "YulLiteral",
																				"src": "16763:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16748:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "16748:3:23"
																		},
																		"nativeSrc": "16748:18:23",
																		"nodeType": "YulFunctionCall",
																		"src": "16748:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16695:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "16695:43:23"
																},
																"nativeSrc": "16695:72:23",
																"nodeType": "YulFunctionCall",
																"src": "16695:72:23"
															},
															"nativeSrc": "16695:72:23",
															"nodeType": "YulExpressionStatement",
															"src": "16695:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16332:442:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16442:9:23",
														"nodeType": "YulTypedName",
														"src": "16442:9:23",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16454:6:23",
														"nodeType": "YulTypedName",
														"src": "16454:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16462:6:23",
														"nodeType": "YulTypedName",
														"src": "16462:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16470:6:23",
														"nodeType": "YulTypedName",
														"src": "16470:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16481:4:23",
														"nodeType": "YulTypedName",
														"src": "16481:4:23",
														"type": ""
													}
												],
												"src": "16332:442:23"
											},
											{
												"body": {
													"nativeSrc": "16824:147:23",
													"nodeType": "YulBlock",
													"src": "16824:147:23",
													"statements": [
														{
															"nativeSrc": "16834:25:23",
															"nodeType": "YulAssignment",
															"src": "16834:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16857:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "16857:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16839:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "16839:17:23"
																},
																"nativeSrc": "16839:20:23",
																"nodeType": "YulFunctionCall",
																"src": "16839:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16834:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "16834:1:23"
																}
															]
														},
														{
															"nativeSrc": "16868:25:23",
															"nodeType": "YulAssignment",
															"src": "16868:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16891:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "16891:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16873:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "16873:17:23"
																},
																"nativeSrc": "16873:20:23",
																"nodeType": "YulFunctionCall",
																"src": "16873:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16868:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "16868:1:23"
																}
															]
														},
														{
															"nativeSrc": "16902:16:23",
															"nodeType": "YulAssignment",
															"src": "16902:16:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16913:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "16913:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16916:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "16916:1:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16909:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "16909:3:23"
																},
																"nativeSrc": "16909:9:23",
																"nodeType": "YulFunctionCall",
																"src": "16909:9:23"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16902:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "16902:3:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16942:22:23",
																"nodeType": "YulBlock",
																"src": "16942:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16944:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "16944:16:23"
																			},
																			"nativeSrc": "16944:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "16944:18:23"
																		},
																		"nativeSrc": "16944:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "16944:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16934:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "16934:1:23"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16937:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "16937:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16931:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "16931:2:23"
																},
																"nativeSrc": "16931:10:23",
																"nodeType": "YulFunctionCall",
																"src": "16931:10:23"
															},
															"nativeSrc": "16928:36:23",
															"nodeType": "YulIf",
															"src": "16928:36:23"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16780:191:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16811:1:23",
														"nodeType": "YulTypedName",
														"src": "16811:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16814:1:23",
														"nodeType": "YulTypedName",
														"src": "16814:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16820:3:23",
														"nodeType": "YulTypedName",
														"src": "16820:3:23",
														"type": ""
													}
												],
												"src": "16780:191:23"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct CSYDToken.TeamMember -> struct CSYDToken.TeamMember\n    function abi_encode_t_struct$_TeamMember_$213_memory_ptr_to_t_struct$_TeamMember_$213_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // memberAddress\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // investmentAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TeamMember_$213_memory_ptr_to_t_struct$_TeamMember_$213_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TeamMember_$213_memory_ptr_to_t_struct$_TeamMember_$213_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct CSYDToken.TeamMember[] -> struct CSYDToken.TeamMember[]\n    function abi_encode_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TeamMember_$213_memory_ptr_to_t_struct$_TeamMember_$213_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Team tokens are locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(memPtr) {\n\n        mstore(add(memPtr, 0), \"Index out of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061012a575f3560e01c806388e56ec6116100ab578063bdd3d8251161006f578063bdd3d82514610337578063dd62ed3e14610355578063eb91d37e14610385578063efded147146103a3578063f2fde38b146103c15761012a565b806388e56ec61461027c5780638da5cb5b146102ad578063902d55a5146102cb57806395d89b41146102e9578063a9059cbb146103075761012a565b8063313ce567116100f2578063313ce567146101e8578063359289981461020657806370a0823114610224578063715018a61461025457806376ae9b2d1461025e5761012a565b806306fdde031461012e578063095ea7b31461014c57806318160ddd1461017c57806319ca43ab1461019a57806323b872dd146101b8575b5f5ffd5b6101366103dd565b604051610143919061120f565b60405180910390f35b610166600480360381019061016191906112c0565b61046d565b6040516101739190611318565b60405180910390f35b61018461048f565b6040516101919190611340565b60405180910390f35b6101a2610498565b6040516101af9190611340565b60405180910390f35b6101d260048036038101906101cd9190611359565b6104a4565b6040516101df9190611318565b60405180910390f35b6101f0610513565b6040516101fd91906113c4565b60405180910390f35b61020e61051b565b60405161021b9190611340565b60405180910390f35b61023e600480360381019061023991906113dd565b610523565b60405161024b9190611340565b60405180910390f35b61025c610568565b005b61026661057b565b6040516102739190611340565b60405180910390f35b61029660048036038101906102919190611408565b610581565b6040516102a4929190611442565b60405180910390f35b6102b5610669565b6040516102c29190611469565b60405180910390f35b6102d3610691565b6040516102e09190611340565b60405180910390f35b6102f16106a0565b6040516102fe919061120f565b60405180910390f35b610321600480360381019061031c91906112c0565b610730565b60405161032e9190611318565b60405180910390f35b61033f61079d565b60405161034c9190611469565b60405180910390f35b61036f600480360381019061036a9190611482565b6107c2565b60405161037c9190611340565b60405180910390f35b61038d610844565b60405161039a9190611340565b60405180910390f35b6103ab610943565b6040516103b891906115b3565b60405180910390f35b6103db60048036038101906103d691906113dd565b6109fd565b005b6060600380546103ec90611600565b80601f016020809104026020016040519081016040528092919081815260200182805461041890611600565b80156104635780601f1061043a57610100808354040283529160200191610463565b820191905f5260205f20905b81548152906001019060200180831161044657829003601f168201915b5050505050905090565b5f5f610477610a81565b9050610484818585610a88565b600191505092915050565b5f600254905090565b5f600680549050905090565b5f81600754421015806104bf5750806104bc33610523565b10155b6104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f59061167a565b60405180910390fd5b610509858585610a9a565b9150509392505050565b5f6012905090565b6305a39a8081565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610570610ac8565b6105795f610b4f565b565b60075481565b5f5f60068054905083106105ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c1906116e2565b60405180910390fd5b5f600684815481106105df576105de611700565b5b905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050805f015181602001519250925050915091565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6a9b18ab5df7180b6b80000081565b6060600480546106af90611600565b80601f01602080910402602001604051908101604052809291908181526020018280546106db90611600565b80156107265780601f106106fd57610100808354040283529160200191610726565b820191905f5260205f20905b81548152906001019060200180831161070957829003601f168201915b5050505050905090565b5f816007544210158061074b57508061074833610523565b10155b61078a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107819061167a565b60405180910390fd5b6107948484610c12565b91505092915050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156108b4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108d89190611818565b505050505050905078010000000000000000000000000000000000000000000000008173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1661093291906118e2565b61093c9190611950565b9250505090565b60606006805480602002602001604051908101604052809291908181526020015f905b828210156109f4578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610966565b50505050905090565b610a05610ac8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a75575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a6c9190611469565b60405180910390fd5b610a7e81610b4f565b50565b5f33905090565b610a958383836001610c34565b505050565b5f5f610aa4610a81565b9050610ab1858285610e03565b610abc858585610e96565b60019150509392505050565b610ad0610a81565b73ffffffffffffffffffffffffffffffffffffffff16610aee610669565b73ffffffffffffffffffffffffffffffffffffffff1614610b4d57610b11610a81565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b449190611469565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f610c1c610a81565b9050610c29818585610e96565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ca4575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c9b9190611469565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d14575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d0b9190611469565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610dfd578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610df49190611340565b60405180910390a35b50505050565b5f610e0e84846107c2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610e905781811015610e81578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e7893929190611980565b60405180910390fd5b610e8f84848484035f610c34565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f06575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610efd9190611469565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f76575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f6d9190611469565b60405180910390fd5b610f81838383610f86565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fd6578060025f828254610fca91906119b5565b925050819055506110a4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561105f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161105693929190611980565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110eb578060025f8282540392505081905550611135565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111929190611340565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111e18261119f565b6111eb81856111a9565b93506111fb8185602086016111b9565b611204816111c7565b840191505092915050565b5f6020820190508181035f83015261122781846111d7565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61125c82611233565b9050919050565b61126c81611252565b8114611276575f5ffd5b50565b5f8135905061128781611263565b92915050565b5f819050919050565b61129f8161128d565b81146112a9575f5ffd5b50565b5f813590506112ba81611296565b92915050565b5f5f604083850312156112d6576112d561122f565b5b5f6112e385828601611279565b92505060206112f4858286016112ac565b9150509250929050565b5f8115159050919050565b611312816112fe565b82525050565b5f60208201905061132b5f830184611309565b92915050565b61133a8161128d565b82525050565b5f6020820190506113535f830184611331565b92915050565b5f5f5f606084860312156113705761136f61122f565b5b5f61137d86828701611279565b935050602061138e86828701611279565b925050604061139f868287016112ac565b9150509250925092565b5f60ff82169050919050565b6113be816113a9565b82525050565b5f6020820190506113d75f8301846113b5565b92915050565b5f602082840312156113f2576113f161122f565b5b5f6113ff84828501611279565b91505092915050565b5f6020828403121561141d5761141c61122f565b5b5f61142a848285016112ac565b91505092915050565b61143c81611252565b82525050565b5f6040820190506114555f830185611433565b6114626020830184611331565b9392505050565b5f60208201905061147c5f830184611433565b92915050565b5f5f604083850312156114985761149761122f565b5b5f6114a585828601611279565b92505060206114b685828601611279565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6114f281611252565b82525050565b6115018161128d565b82525050565b604082015f82015161151b5f8501826114e9565b50602082015161152e60208501826114f8565b50505050565b5f61153f8383611507565b60408301905092915050565b5f602082019050919050565b5f611561826114c0565b61156b81856114ca565b9350611576836114da565b805f5b838110156115a657815161158d8882611534565b97506115988361154b565b925050600181019050611579565b5085935050505092915050565b5f6020820190508181035f8301526115cb8184611557565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061161757607f821691505b60208210810361162a576116296115d3565b5b50919050565b7f5465616d20746f6b656e7320617265206c6f636b6564000000000000000000005f82015250565b5f6116646016836111a9565b915061166f82611630565b602082019050919050565b5f6020820190508181035f83015261169181611658565b9050919050565b7f496e646578206f7574206f6620626f756e6473000000000000000000000000005f82015250565b5f6116cc6013836111a9565b91506116d782611698565b602082019050919050565b5f6020820190508181035f8301526116f9816116c0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b61173681611233565b8114611740575f5ffd5b50565b5f815190506117518161172d565b92915050565b5f8160020b9050919050565b61176c81611757565b8114611776575f5ffd5b50565b5f8151905061178781611763565b92915050565b5f61ffff82169050919050565b6117a38161178d565b81146117ad575f5ffd5b50565b5f815190506117be8161179a565b92915050565b6117cd816113a9565b81146117d7575f5ffd5b50565b5f815190506117e8816117c4565b92915050565b6117f7816112fe565b8114611801575f5ffd5b50565b5f81519050611812816117ee565b92915050565b5f5f5f5f5f5f5f60e0888a0312156118335761183261122f565b5b5f6118408a828b01611743565b97505060206118518a828b01611779565b96505060406118628a828b016117b0565b95505060606118738a828b016117b0565b94505060806118848a828b016117b0565b93505060a06118958a828b016117da565b92505060c06118a68a828b01611804565b91505092959891949750929550565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118ec8261128d565b91506118f78361128d565b92508282026119058161128d565b9150828204841483151761191c5761191b6118b5565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61195a8261128d565b91506119658361128d565b92508261197557611974611923565b5b828204905092915050565b5f6060820190506119935f830186611433565b6119a06020830185611331565b6119ad6040830184611331565b949350505050565b5f6119bf8261128d565b91506119ca8361128d565b92508282019050808211156119e2576119e16118b5565b5b9291505056fea264697066735822122088a0fac46f0416773b1c6079ee7fbc85dd2ff5eb19b7f105cbc3a4ab1e45027064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88E56EC6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xBDD3D825 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xEFDED147 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C1 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x88E56EC6 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x307 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x35928998 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x76AE9B2D EQ PUSH2 0x25E JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x19CA43AB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH2 0x568 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1442 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH2 0x79D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AB PUSH2 0x943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0x1600 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x418 SWAP1 PUSH2 0x1600 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x463 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x463 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x446 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x477 PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP PUSH2 0x484 DUP2 DUP6 DUP6 PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x4BF JUMPI POP DUP1 PUSH2 0x4BC CALLER PUSH2 0x523 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x509 DUP6 DUP6 DUP6 PUSH2 0xA9A JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x5A39A80 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x570 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x579 PUSH0 PUSH2 0xB4F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C1 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5DF JUMPI PUSH2 0x5DE PUSH2 0x1700 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x9B18AB5DF7180B6B800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6AF SWAP1 PUSH2 0x1600 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6DB SWAP1 PUSH2 0x1600 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x726 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x726 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x709 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x74B JUMPI POP DUP1 PUSH2 0x748 CALLER PUSH2 0x523 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x781 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x794 DUP5 DUP5 PUSH2 0xC12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0x1818 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH25 0x1000000000000000000000000000000000000000000000000 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x932 SWAP2 SWAP1 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x9F4 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA05 PUSH2 0xAC8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA75 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6C SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7E DUP2 PUSH2 0xB4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA95 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC34 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAA4 PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP PUSH2 0xAB1 DUP6 DUP3 DUP6 PUSH2 0xE03 JUMP JUMPDEST PUSH2 0xABC DUP6 DUP6 DUP6 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAD0 PUSH2 0xA81 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAEE PUSH2 0x669 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB4D JUMPI PUSH2 0xB11 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB44 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xC1C PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP PUSH2 0xC29 DUP2 DUP6 DUP6 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9B SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD14 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDFD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDF4 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE0E DUP5 DUP5 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xE90 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE81 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE8F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF06 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFD SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6D SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF81 DUP4 DUP4 DUP4 PUSH2 0xF86 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x19B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10A4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x105F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1056 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1135 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1192 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11E1 DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x11EB DUP2 DUP6 PUSH2 0x11A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x11FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B9 JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0x11C7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1227 DUP2 DUP5 PUSH2 0x11D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x125C DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126C DUP2 PUSH2 0x1252 JUMP JUMPDEST DUP2 EQ PUSH2 0x1276 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1287 DUP2 PUSH2 0x1263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129F DUP2 PUSH2 0x128D JUMP JUMPDEST DUP2 EQ PUSH2 0x12A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12BA DUP2 PUSH2 0x1296 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D6 JUMPI PUSH2 0x12D5 PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E3 DUP6 DUP3 DUP7 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12F4 DUP6 DUP3 DUP7 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1312 DUP2 PUSH2 0x12FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132B PUSH0 DUP4 ADD DUP5 PUSH2 0x1309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133A DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1353 PUSH0 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x136F PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x137D DUP7 DUP3 DUP8 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x138E DUP7 DUP3 DUP8 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x139F DUP7 DUP3 DUP8 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BE DUP2 PUSH2 0x13A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x13B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F2 JUMPI PUSH2 0x13F1 PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13FF DUP5 DUP3 DUP6 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141D JUMPI PUSH2 0x141C PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x142A DUP5 DUP3 DUP6 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x143C DUP2 PUSH2 0x1252 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1455 PUSH0 DUP4 ADD DUP6 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x1462 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x147C PUSH0 DUP4 ADD DUP5 PUSH2 0x1433 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1498 JUMPI PUSH2 0x1497 PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F2 DUP2 PUSH2 0x1252 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1501 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x151B PUSH0 DUP6 ADD DUP3 PUSH2 0x14E9 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x152E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x14F8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x153F DUP4 DUP4 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1561 DUP3 PUSH2 0x14C0 JUMP JUMPDEST PUSH2 0x156B DUP2 DUP6 PUSH2 0x14CA JUMP JUMPDEST SWAP4 POP PUSH2 0x1576 DUP4 PUSH2 0x14DA JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A6 JUMPI DUP2 MLOAD PUSH2 0x158D DUP9 DUP3 PUSH2 0x1534 JUMP JUMPDEST SWAP8 POP PUSH2 0x1598 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1579 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15CB DUP2 DUP5 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1617 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x162A JUMPI PUSH2 0x1629 PUSH2 0x15D3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5465616D20746F6B656E7320617265206C6F636B656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1664 PUSH1 0x16 DUP4 PUSH2 0x11A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP3 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1691 DUP2 PUSH2 0x1658 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16CC PUSH1 0x13 DUP4 PUSH2 0x11A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x16D7 DUP3 PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16F9 DUP2 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1736 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP2 EQ PUSH2 0x1740 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1751 DUP2 PUSH2 0x172D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x176C DUP2 PUSH2 0x1757 JUMP JUMPDEST DUP2 EQ PUSH2 0x1776 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1787 DUP2 PUSH2 0x1763 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A3 DUP2 PUSH2 0x178D JUMP JUMPDEST DUP2 EQ PUSH2 0x17AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17BE DUP2 PUSH2 0x179A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17CD DUP2 PUSH2 0x13A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17E8 DUP2 PUSH2 0x17C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F7 DUP2 PUSH2 0x12FE JUMP JUMPDEST DUP2 EQ PUSH2 0x1801 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1812 DUP2 PUSH2 0x17EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1833 JUMPI PUSH2 0x1832 PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1840 DUP11 DUP3 DUP12 ADD PUSH2 0x1743 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1851 DUP11 DUP3 DUP12 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1862 DUP11 DUP3 DUP12 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1873 DUP11 DUP3 DUP12 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1884 DUP11 DUP3 DUP12 ADD PUSH2 0x17B0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1895 DUP11 DUP3 DUP12 ADD PUSH2 0x17DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x18A6 DUP11 DUP3 DUP12 ADD PUSH2 0x1804 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18EC DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP PUSH2 0x18F7 DUP4 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1905 DUP2 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x191C JUMPI PUSH2 0x191B PUSH2 0x18B5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x195A DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP PUSH2 0x1965 DUP4 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1975 JUMPI PUSH2 0x1974 PUSH2 0x1923 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1993 PUSH0 DUP4 ADD DUP7 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x19A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x19AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19BF DUP3 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP PUSH2 0x19CA DUP4 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19E2 JUMPI PUSH2 0x19E1 PUSH2 0x18B5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 LOG0 STATICCALL 0xC4 PUSH16 0x416773B1C6079EE7FBC85DD2FF5EB19 0xB7 CALL SDIV 0xCB 0xC3 LOG4 0xAB 0x1E GASLIMIT MUL PUSH17 0x64736F6C634300081E0033000000000000 ",
							"sourceMap": "2608:3678:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6148:135:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5173:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2737:55:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:5;;;:::i;:::-;;3027:30:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5812:328;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1638:85:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:59:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4973:162:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3064:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5375:282:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5665:139;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:7;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;6148:135:4:-;6199:7;6226:11;:18;;;;6219:25;;6148:135;:::o;5173:194::-;5290:4;5273:6;4847:15;;4828;:34;;:69;;;;4891:6;4866:21;4876:10;4866:9;:21::i;:::-;:31;;4828:69;4820:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;5314:45:::1;5333:6;5341:9;5352:6;5314:18;:45::i;:::-;5307:52;;5173:194:::0;;;;;;:::o;2688:82:7:-;2737:5;2761:2;2754:9;;2688:82;:::o;2737:55:4:-;2780:12;2737:55;:::o;2933:116:7:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:5:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3027:30:4:-;;;;:::o;5812:328::-;5871:7;5880;5916:11;:18;;;;5908:5;:26;5900:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;5991:24;6018:11;6030:5;6018:18;;;;;;;;:::i;:::-;;;;;;;;;;;;5991:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6055:6;:20;;;6077:6;:23;;;6047:54;;;;;5812:328;;;:::o;1638:85:5:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2656:59:4:-;2695:20;2656:59;:::o;1962:93:7:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;4973:162:4:-;5070:4;5053:6;4847:15;;4828;:34;;:69;;;;4891:6;4866:21;4876:10;4866:9;:21::i;:::-;:31;;4828:69;4820:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;5094:33:::1;5109:9;5120:6;5094:14;:33::i;:::-;5087:40;;4973:162:::0;;;;;:::o;3064:26::-;;;;;;;;;;;;;:::o;3455:140:7:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;5375:282:4:-;5423:13;5449:19;5486:11;;;;;;;;;;;5449:49;;5510:20;5546:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5509:49;;;;;;;;5626:6;5609:12;5601:21;;5585:12;5577:21;;:45;;;;:::i;:::-;:56;;;;:::i;:::-;5569:64;;5438:219;;5375:282;:::o;5665:139::-;5712:19;5751:11;5744:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5665:139;:::o;2543:215:5:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;8630:128:7:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;1796:162:5:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3244:178:7:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:99:23:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:332::-;5661:4;5699:2;5688:9;5684:18;5676:26;;5712:71;5780:1;5769:9;5765:17;5756:6;5712:71;:::i;:::-;5793:72;5861:2;5850:9;5846:18;5837:6;5793:72;:::i;:::-;5540:332;;;;;:::o;5878:222::-;5971:4;6009:2;5998:9;5994:18;5986:26;;6022:71;6090:1;6079:9;6075:17;6066:6;6022:71;:::i;:::-;5878:222;;;;:::o;6106:474::-;6174:6;6182;6231:2;6219:9;6210:7;6206:23;6202:32;6199:119;;;6237:79;;:::i;:::-;6199:119;6357:1;6382:53;6427:7;6418:6;6407:9;6403:22;6382:53;:::i;:::-;6372:63;;6328:117;6484:2;6510:53;6555:7;6546:6;6535:9;6531:22;6510:53;:::i;:::-;6500:63;;6455:118;6106:474;;;;;:::o;6586:141::-;6680:6;6714:5;6708:12;6698:22;;6586:141;;;:::o;6733:211::-;6859:11;6893:6;6888:3;6881:19;6933:4;6928:3;6924:14;6909:29;;6733:211;;;;:::o;6950:159::-;7044:4;7067:3;7059:11;;7097:4;7092:3;7088:14;7080:22;;6950:159;;;:::o;7115:108::-;7192:24;7210:5;7192:24;:::i;:::-;7187:3;7180:37;7115:108;;:::o;7229:::-;7306:24;7324:5;7306:24;:::i;:::-;7301:3;7294:37;7229:108;;:::o;7409:522::-;7550:4;7545:3;7541:14;7646:4;7639:5;7635:16;7629:23;7665:63;7722:4;7717:3;7713:14;7699:12;7665:63;:::i;:::-;7565:173;7832:4;7825:5;7821:16;7815:23;7851:63;7908:4;7903:3;7899:14;7885:12;7851:63;:::i;:::-;7748:176;7519:412;7409:522;;:::o;7937:287::-;8060:10;8081:100;8177:3;8169:6;8081:100;:::i;:::-;8213:4;8208:3;8204:14;8190:28;;7937:287;;;;:::o;8230:140::-;8327:4;8359;8354:3;8350:14;8342:22;;8230:140;;;:::o;8446:948::-;8619:3;8648:81;8723:5;8648:81;:::i;:::-;8745:113;8851:6;8846:3;8745:113;:::i;:::-;8738:120;;8882:83;8959:5;8882:83;:::i;:::-;8988:7;9019:1;9004:365;9029:6;9026:1;9023:13;9004:365;;;9105:6;9099:13;9132:117;9245:3;9230:13;9132:117;:::i;:::-;9125:124;;9272:87;9352:6;9272:87;:::i;:::-;9262:97;;9064:305;9051:1;9048;9044:9;9039:14;;9004:365;;;9008:14;9385:3;9378:10;;8624:770;;;8446:948;;;;:::o;9400:481::-;9597:4;9635:2;9624:9;9620:18;9612:26;;9684:9;9678:4;9674:20;9670:1;9659:9;9655:17;9648:47;9712:162;9869:4;9860:6;9712:162;:::i;:::-;9704:170;;9400:481;;;;:::o;9887:180::-;9935:77;9932:1;9925:88;10032:4;10029:1;10022:15;10056:4;10053:1;10046:15;10073:320;10117:6;10154:1;10148:4;10144:12;10134:22;;10201:1;10195:4;10191:12;10222:18;10212:81;;10278:4;10270:6;10266:17;10256:27;;10212:81;10340:2;10332:6;10329:14;10309:18;10306:38;10303:84;;10359:18;;:::i;:::-;10303:84;10124:269;10073:320;;;:::o;10399:172::-;10539:24;10535:1;10527:6;10523:14;10516:48;10399:172;:::o;10577:366::-;10719:3;10740:67;10804:2;10799:3;10740:67;:::i;:::-;10733:74;;10816:93;10905:3;10816:93;:::i;:::-;10934:2;10929:3;10925:12;10918:19;;10577:366;;;:::o;10949:419::-;11115:4;11153:2;11142:9;11138:18;11130:26;;11202:9;11196:4;11192:20;11188:1;11177:9;11173:17;11166:47;11230:131;11356:4;11230:131;:::i;:::-;11222:139;;10949:419;;;:::o;11374:169::-;11514:21;11510:1;11502:6;11498:14;11491:45;11374:169;:::o;11549:366::-;11691:3;11712:67;11776:2;11771:3;11712:67;:::i;:::-;11705:74;;11788:93;11877:3;11788:93;:::i;:::-;11906:2;11901:3;11897:12;11890:19;;11549:366;;;:::o;11921:419::-;12087:4;12125:2;12114:9;12110:18;12102:26;;12174:9;12168:4;12164:20;12160:1;12149:9;12145:17;12138:47;12202:131;12328:4;12202:131;:::i;:::-;12194:139;;11921:419;;;:::o;12346:180::-;12394:77;12391:1;12384:88;12491:4;12488:1;12481:15;12515:4;12512:1;12505:15;12532:122;12605:24;12623:5;12605:24;:::i;:::-;12598:5;12595:35;12585:63;;12644:1;12641;12634:12;12585:63;12532:122;:::o;12660:143::-;12717:5;12748:6;12742:13;12733:22;;12764:33;12791:5;12764:33;:::i;:::-;12660:143;;;;:::o;12809:90::-;12844:7;12887:5;12884:1;12873:20;12862:31;;12809:90;;;:::o;12905:118::-;12976:22;12992:5;12976:22;:::i;:::-;12969:5;12966:33;12956:61;;13013:1;13010;13003:12;12956:61;12905:118;:::o;13029:139::-;13084:5;13115:6;13109:13;13100:22;;13131:31;13156:5;13131:31;:::i;:::-;13029:139;;;;:::o;13174:89::-;13210:7;13250:6;13243:5;13239:18;13228:29;;13174:89;;;:::o;13269:120::-;13341:23;13358:5;13341:23;:::i;:::-;13334:5;13331:34;13321:62;;13379:1;13376;13369:12;13321:62;13269:120;:::o;13395:141::-;13451:5;13482:6;13476:13;13467:22;;13498:32;13524:5;13498:32;:::i;:::-;13395:141;;;;:::o;13542:118::-;13613:22;13629:5;13613:22;:::i;:::-;13606:5;13603:33;13593:61;;13650:1;13647;13640:12;13593:61;13542:118;:::o;13666:139::-;13721:5;13752:6;13746:13;13737:22;;13768:31;13793:5;13768:31;:::i;:::-;13666:139;;;;:::o;13811:116::-;13881:21;13896:5;13881:21;:::i;:::-;13874:5;13871:32;13861:60;;13917:1;13914;13907:12;13861:60;13811:116;:::o;13933:137::-;13987:5;14018:6;14012:13;14003:22;;14034:30;14058:5;14034:30;:::i;:::-;13933:137;;;;:::o;14076:1271::-;14190:6;14198;14206;14214;14222;14230;14238;14287:3;14275:9;14266:7;14262:23;14258:33;14255:120;;;14294:79;;:::i;:::-;14255:120;14414:1;14439:64;14495:7;14486:6;14475:9;14471:22;14439:64;:::i;:::-;14429:74;;14385:128;14552:2;14578:62;14632:7;14623:6;14612:9;14608:22;14578:62;:::i;:::-;14568:72;;14523:127;14689:2;14715:63;14770:7;14761:6;14750:9;14746:22;14715:63;:::i;:::-;14705:73;;14660:128;14827:2;14853:63;14908:7;14899:6;14888:9;14884:22;14853:63;:::i;:::-;14843:73;;14798:128;14965:3;14992:63;15047:7;15038:6;15027:9;15023:22;14992:63;:::i;:::-;14982:73;;14936:129;15104:3;15131:62;15185:7;15176:6;15165:9;15161:22;15131:62;:::i;:::-;15121:72;;15075:128;15242:3;15269:61;15322:7;15313:6;15302:9;15298:22;15269:61;:::i;:::-;15259:71;;15213:127;14076:1271;;;;;;;;;;:::o;15353:180::-;15401:77;15398:1;15391:88;15498:4;15495:1;15488:15;15522:4;15519:1;15512:15;15539:410;15579:7;15602:20;15620:1;15602:20;:::i;:::-;15597:25;;15636:20;15654:1;15636:20;:::i;:::-;15631:25;;15691:1;15688;15684:9;15713:30;15731:11;15713:30;:::i;:::-;15702:41;;15892:1;15883:7;15879:15;15876:1;15873:22;15853:1;15846:9;15826:83;15803:139;;15922:18;;:::i;:::-;15803:139;15587:362;15539:410;;;;:::o;15955:180::-;16003:77;16000:1;15993:88;16100:4;16097:1;16090:15;16124:4;16121:1;16114:15;16141:185;16181:1;16198:20;16216:1;16198:20;:::i;:::-;16193:25;;16232:20;16250:1;16232:20;:::i;:::-;16227:25;;16271:1;16261:35;;16276:18;;:::i;:::-;16261:35;16318:1;16315;16311:9;16306:14;;16141:185;;;;:::o;16332:442::-;16481:4;16519:2;16508:9;16504:18;16496:26;;16532:71;16600:1;16589:9;16585:17;16576:6;16532:71;:::i;:::-;16613:72;16681:2;16670:9;16666:18;16657:6;16613:72;:::i;:::-;16695;16763:2;16752:9;16748:18;16739:6;16695:72;:::i;:::-;16332:442;;;;;;:::o;16780:191::-;16820:3;16839:20;16857:1;16839:20;:::i;:::-;16834:25;;16873:20;16891:1;16873:20;:::i;:::-;16868:25;;16916:1;16913;16909:9;16902:16;;16937:3;16934:1;16931:10;16928:36;;;16944:18;;:::i;:::-;16928:36;16780:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1337200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TEAM_LOCK_PERIOD()": "370",
								"TOTAL_SUPPLY()": "392",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2895",
								"decimals()": "361",
								"getCurrentPrice()": "infinite",
								"getTeamMember(uint256)": "infinite",
								"getTeamMemberCount()": "2530",
								"getTeamMembers()": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"teamLockedUntil()": "2536",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapPool()": "2530"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2608,
									"end": 6286,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3101,
									"end": 4763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3218,
									"end": 3228,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "6373796400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "4353594400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 5,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3276,
									"end": 3277,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3254,
									"end": 3266,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3254,
									"end": 3273,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3254,
									"end": 3277,
									"modifierDepth": 2,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3246,
									"end": 3315,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 3246,
									"end": 3315,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3340,
									"end": 3352,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3337,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 3326,
									"end": 3337,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3352,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3365,
									"end": 3388,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3391,
									"end": 3392,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3365,
									"end": 3392,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3365,
									"end": 3392,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3461,
									"end": 3470,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3473,
									"end": 3474,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3461,
									"end": 3474,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3461,
									"end": 3474,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3456,
									"end": 3654,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 3456,
									"end": 3654,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3480,
									"end": 3492,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3480,
									"end": 3499,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3476,
									"end": 3477,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3476,
									"end": 3499,
									"modifierDepth": 2,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3456,
									"end": 3654,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3456,
									"end": 3654,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3456,
									"end": 3654,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3552,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3553,
									"end": 3554,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 3540,
									"end": 3555,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3555,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3572,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3540,
									"end": 3572,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3572,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3521,
									"end": 3572,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3521,
									"end": 3572,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3521,
									"end": 3572,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3521,
									"end": 3572,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3521,
									"end": 3572,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3521,
									"end": 3572,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3521,
									"end": 3572,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3521,
									"end": 3572,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3521,
									"end": 3572,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3521,
									"end": 3572,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3598,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 3604,
									"end": 3616,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3617,
									"end": 3618,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 3604,
									"end": 3619,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3619,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3587,
									"end": 3620,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3501,
									"end": 3504,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3501,
									"end": 3504,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3501,
									"end": 3504,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3501,
									"end": 3504,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3501,
									"end": 3504,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3501,
									"end": 3504,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3501,
									"end": 3504,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3456,
									"end": 3654,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 3456,
									"end": 3654,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3456,
									"end": 3654,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3456,
									"end": 3654,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3456,
									"end": 3654,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3666,
									"end": 3680,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3703,
									"end": 3706,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 3698,
									"end": 3700,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 2695,
									"end": 2715,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "9B18AB5DF7180B6B800000"
								},
								{
									"begin": 3683,
									"end": 3700,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 3683,
									"end": 3700,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3700,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3700,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 3683,
									"end": 3700,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3700,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 3683,
									"end": 3700,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3706,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 3683,
									"end": 3706,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3706,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3706,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 3683,
									"end": 3706,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3706,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 3683,
									"end": 3706,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3666,
									"end": 3706,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3666,
									"end": 3706,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3736,
									"end": 3761,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3764,
									"end": 3765,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3736,
									"end": 3765,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3736,
									"end": 3765,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3814,
									"end": 3823,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3826,
									"end": 3827,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3814,
									"end": 3827,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3814,
									"end": 3827,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3809,
									"end": 4090,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 3809,
									"end": 4090,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 3844,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 3851,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 3851,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 3851,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 3851,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3829,
									"end": 3830,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3829,
									"end": 3851,
									"modifierDepth": 2,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3809,
									"end": 4090,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3809,
									"end": 4090,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 3809,
									"end": 4090,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3873,
									"end": 3886,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3934,
									"end": 3949,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3924,
									"end": 3930,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 3902,
									"end": 3903,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 3890,
									"end": 3904,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3904,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3921,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3890,
									"end": 3921,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3921,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3930,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 3890,
									"end": 3930,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3930,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3930,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 3890,
									"end": 3930,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3890,
									"end": 3930,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 3890,
									"end": 3930,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3889,
									"end": 3949,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 3889,
									"end": 3949,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3889,
									"end": 3949,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3889,
									"end": 3949,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 3889,
									"end": 3949,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3889,
									"end": 3949,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 3889,
									"end": 3949,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3873,
									"end": 3949,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3873,
									"end": 3949,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3995,
									"end": 4037,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 4001,
									"end": 4012,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 4013,
									"end": 4014,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 4001,
									"end": 4015,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4015,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4001,
									"end": 4029,
									"modifierDepth": 2,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4031,
									"end": 4036,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3995,
									"end": 4000,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 3995,
									"end": 4000,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3995,
									"end": 4000,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 3995,
									"end": 4037,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3995,
									"end": 4037,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3995,
									"end": 4037,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3995,
									"end": 4037,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 3995,
									"end": 4037,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4073,
									"end": 4078,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4078,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4078,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 4052,
									"end": 4078,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4078,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4078,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 4052,
									"end": 4078,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4078,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 4052,
									"end": 4078,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4078,
									"modifierDepth": 2,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4078,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3858,
									"end": 4090,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3853,
									"end": 3856,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3853,
									"end": 3856,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3853,
									"end": 3856,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3853,
									"end": 3856,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3853,
									"end": 3856,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3853,
									"end": 3856,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3853,
									"end": 3856,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3809,
									"end": 4090,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 3809,
									"end": 4090,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3809,
									"end": 4090,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 3809,
									"end": 4090,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3809,
									"end": 4090,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4189,
									"end": 4195,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4168,
									"end": 4185,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4168,
									"end": 4195,
									"modifierDepth": 2,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4168,
									"end": 4195,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 4160,
									"end": 4233,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 4160,
									"end": 4233,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4246,
									"end": 4291,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 4252,
									"end": 4262,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 4273,
									"end": 4290,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4264,
									"end": 4270,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4264,
									"end": 4290,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 4264,
									"end": 4290,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4264,
									"end": 4290,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4264,
									"end": 4290,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 4264,
									"end": 4290,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4264,
									"end": 4290,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 4264,
									"end": 4290,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4246,
									"end": 4251,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 4246,
									"end": 4251,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4246,
									"end": 4251,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 4246,
									"end": 4291,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4246,
									"end": 4291,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 4246,
									"end": 4291,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4246,
									"end": 4291,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 4246,
									"end": 4291,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4348,
									"end": 4393,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 4362,
									"end": 4366,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 4389,
									"end": 4392,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 4384,
									"end": 4386,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 2695,
									"end": 2715,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "9B18AB5DF7180B6B800000"
								},
								{
									"begin": 4369,
									"end": 4386,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 4369,
									"end": 4386,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4369,
									"end": 4386,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4369,
									"end": 4386,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 4369,
									"end": 4386,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4369,
									"end": 4386,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 4369,
									"end": 4386,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4369,
									"end": 4392,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 4369,
									"end": 4392,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4369,
									"end": 4392,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4369,
									"end": 4392,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 4369,
									"end": 4392,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4369,
									"end": 4392,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 4369,
									"end": 4392,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4348,
									"end": 4353,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 4348,
									"end": 4353,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4348,
									"end": 4353,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 4348,
									"end": 4393,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4348,
									"end": 4393,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 4348,
									"end": 4393,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4348,
									"end": 4393,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 4348,
									"end": 4393,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2780,
									"end": 2792,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "5A39A80"
								},
								{
									"begin": 4440,
									"end": 4455,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 4
								},
								{
									"begin": 4440,
									"end": 4474,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 4440,
									"end": 4474,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4440,
									"end": 4474,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4440,
									"end": 4474,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 4440,
									"end": 4474,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4440,
									"end": 4474,
									"modifierDepth": 2,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 4440,
									"end": 4474,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4422,
									"end": 4437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 4422,
									"end": 4474,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4422,
									"end": 4474,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4422,
									"end": 4474,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4422,
									"end": 4474,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3235,
									"end": 4763,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3235,
									"end": 4763,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3235,
									"end": 4763,
									"modifierDepth": 2,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 4763,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 5,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 7,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 7,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 7,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 23,
									"value": "78"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 23,
									"value": "79"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 23,
									"value": "80"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 23,
									"value": "81"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 457,
									"end": 559,
									"name": "tag",
									"source": 23,
									"value": "82"
								},
								{
									"begin": 457,
									"end": 559,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 498,
									"end": 504,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 551,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 545,
									"end": 552,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 533,
									"end": 538,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 529,
									"end": 543,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 525,
									"end": 553,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 515,
									"end": 553,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 515,
									"end": 553,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 457,
									"end": 559,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 457,
									"end": 559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 565,
									"end": 745,
									"name": "tag",
									"source": 23,
									"value": "83"
								},
								{
									"begin": 565,
									"end": 745,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 613,
									"end": 690,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 610,
									"end": 611,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 603,
									"end": 691,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 710,
									"end": 714,
									"name": "PUSH",
									"source": 23,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 700,
									"end": 715,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 734,
									"end": 738,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "tag",
									"source": 23,
									"value": "84"
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "135"
								},
								{
									"begin": 856,
									"end": 860,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "82"
								},
								{
									"begin": 834,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 834,
									"end": 861,
									"name": "tag",
									"source": 23,
									"value": "135"
								},
								{
									"begin": 834,
									"end": 861,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 826,
									"end": 832,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 822,
									"end": 862,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 952,
									"end": 962,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 949,
									"end": 971,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 928,
									"end": 946,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 916,
									"end": 926,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 913,
									"end": 947,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 910,
									"end": 972,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 907,
									"end": 995,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 907,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "136"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "137"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "83"
								},
								{
									"begin": 975,
									"end": 993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 975,
									"end": 993,
									"name": "tag",
									"source": 23,
									"value": "137"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 907,
									"end": 995,
									"name": "tag",
									"source": 23,
									"value": "136"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1011,
									"end": 1013,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1026,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 794,
									"end": 1032,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 751,
									"end": 1032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "tag",
									"source": 23,
									"value": "85"
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "139"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "78"
								},
								{
									"begin": 1099,
									"end": 1119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "tag",
									"source": 23,
									"value": "139"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "140"
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1148,
									"end": 1154,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "84"
								},
								{
									"begin": 1128,
									"end": 1161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "tag",
									"source": 23,
									"value": "140"
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1038,
									"end": 1167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1173,
									"end": 1511,
									"name": "tag",
									"source": 23,
									"value": "86"
								},
								{
									"begin": 1173,
									"end": 1511,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1277,
									"end": 1281,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 1385,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1359,
									"end": 1365,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1356,
									"end": 1386,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 1353,
									"end": 1409,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 1353,
									"end": 1409,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "142"
								},
								{
									"begin": 1353,
									"end": 1409,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 1389,
									"end": 1407,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "143"
								},
								{
									"begin": 1389,
									"end": 1407,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "83"
								},
								{
									"begin": 1389,
									"end": 1407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1389,
									"end": 1407,
									"name": "tag",
									"source": 23,
									"value": "143"
								},
								{
									"begin": 1389,
									"end": 1407,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1353,
									"end": 1409,
									"name": "tag",
									"source": 23,
									"value": "142"
								},
								{
									"begin": 1353,
									"end": 1409,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1439,
									"end": 1443,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 1431,
									"end": 1437,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1427,
									"end": 1444,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 1419,
									"end": 1444,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1419,
									"end": 1444,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1499,
									"end": 1503,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 1493,
									"end": 1497,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1489,
									"end": 1504,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 1481,
									"end": 1504,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1481,
									"end": 1504,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1173,
									"end": 1511,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1173,
									"end": 1511,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1173,
									"end": 1511,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1173,
									"end": 1511,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1517,
									"end": 1634,
									"name": "tag",
									"source": 23,
									"value": "87"
								},
								{
									"begin": 1517,
									"end": 1634,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1623,
									"end": 1624,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1616,
									"end": 1628,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 1640,
									"end": 1757,
									"name": "tag",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 1640,
									"end": 1757,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1746,
									"end": 1747,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1739,
									"end": 1751,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 1886,
									"end": 2012,
									"name": "tag",
									"source": 23,
									"value": "90"
								},
								{
									"begin": 1886,
									"end": 2012,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1923,
									"end": 1930,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1963,
									"end": 2005,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1956,
									"end": 1961,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1952,
									"end": 2006,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1941,
									"end": 2006,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1941,
									"end": 2006,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1886,
									"end": 2012,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1886,
									"end": 2012,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1886,
									"end": 2012,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1886,
									"end": 2012,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2018,
									"end": 2114,
									"name": "tag",
									"source": 23,
									"value": "91"
								},
								{
									"begin": 2018,
									"end": 2114,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2084,
									"end": 2108,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "149"
								},
								{
									"begin": 2102,
									"end": 2107,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2084,
									"end": 2108,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "90"
								},
								{
									"begin": 2084,
									"end": 2108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2084,
									"end": 2108,
									"name": "tag",
									"source": 23,
									"value": "149"
								},
								{
									"begin": 2084,
									"end": 2108,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2073,
									"end": 2108,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2073,
									"end": 2108,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2018,
									"end": 2114,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 2018,
									"end": 2114,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2018,
									"end": 2114,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2018,
									"end": 2114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2120,
									"end": 2242,
									"name": "tag",
									"source": 23,
									"value": "92"
								},
								{
									"begin": 2120,
									"end": 2242,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2193,
									"end": 2217,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "151"
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2193,
									"end": 2217,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "91"
								},
								{
									"begin": 2193,
									"end": 2217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2193,
									"end": 2217,
									"name": "tag",
									"source": 23,
									"value": "151"
								},
								{
									"begin": 2193,
									"end": 2217,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2186,
									"end": 2191,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2183,
									"end": 2218,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 2173,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "152"
								},
								{
									"begin": 2173,
									"end": 2236,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 2232,
									"end": 2233,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2229,
									"end": 2230,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2222,
									"end": 2234,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 2173,
									"end": 2236,
									"name": "tag",
									"source": 23,
									"value": "152"
								},
								{
									"begin": 2173,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2120,
									"end": 2242,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2120,
									"end": 2242,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2248,
									"end": 2391,
									"name": "tag",
									"source": 23,
									"value": "93"
								},
								{
									"begin": 2248,
									"end": 2391,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2305,
									"end": 2310,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2336,
									"end": 2342,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2330,
									"end": 2343,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 2321,
									"end": 2343,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2321,
									"end": 2343,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2352,
									"end": 2385,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "154"
								},
								{
									"begin": 2379,
									"end": 2384,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2352,
									"end": 2385,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "92"
								},
								{
									"begin": 2352,
									"end": 2385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2352,
									"end": 2385,
									"name": "tag",
									"source": 23,
									"value": "154"
								},
								{
									"begin": 2352,
									"end": 2385,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2248,
									"end": 2391,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 2248,
									"end": 2391,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 2248,
									"end": 2391,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2248,
									"end": 2391,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2248,
									"end": 2391,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2397,
									"end": 2474,
									"name": "tag",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 2397,
									"end": 2474,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2434,
									"end": 2441,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2463,
									"end": 2468,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2452,
									"end": 2468,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2452,
									"end": 2468,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2397,
									"end": 2474,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 2397,
									"end": 2474,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2397,
									"end": 2474,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2397,
									"end": 2474,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2480,
									"end": 2602,
									"name": "tag",
									"source": 23,
									"value": "95"
								},
								{
									"begin": 2480,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2553,
									"end": 2577,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "157"
								},
								{
									"begin": 2571,
									"end": 2576,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2553,
									"end": 2577,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 2553,
									"end": 2577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2553,
									"end": 2577,
									"name": "tag",
									"source": 23,
									"value": "157"
								},
								{
									"begin": 2553,
									"end": 2577,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2546,
									"end": 2551,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2543,
									"end": 2578,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 2533,
									"end": 2596,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "158"
								},
								{
									"begin": 2533,
									"end": 2596,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2589,
									"end": 2590,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 2533,
									"end": 2596,
									"name": "tag",
									"source": 23,
									"value": "158"
								},
								{
									"begin": 2533,
									"end": 2596,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2480,
									"end": 2602,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2480,
									"end": 2602,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2608,
									"end": 2751,
									"name": "tag",
									"source": 23,
									"value": "96"
								},
								{
									"begin": 2608,
									"end": 2751,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2665,
									"end": 2670,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2696,
									"end": 2702,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 2681,
									"end": 2703,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2681,
									"end": 2703,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2712,
									"end": 2745,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "160"
								},
								{
									"begin": 2739,
									"end": 2744,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2712,
									"end": 2745,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "95"
								},
								{
									"begin": 2712,
									"end": 2745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2712,
									"end": 2745,
									"name": "tag",
									"source": 23,
									"value": "160"
								},
								{
									"begin": 2712,
									"end": 2745,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2608,
									"end": 2751,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 2608,
									"end": 2751,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 2608,
									"end": 2751,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2608,
									"end": 2751,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2608,
									"end": 2751,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2792,
									"end": 3422,
									"name": "tag",
									"source": 23,
									"value": "97"
								},
								{
									"begin": 2792,
									"end": 3422,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2879,
									"end": 2884,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2923,
									"end": 2927,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 2911,
									"end": 2920,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2906,
									"end": 2909,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2902,
									"end": 2921,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 2898,
									"end": 2928,
									"name": "SLT",
									"source": 23
								},
								{
									"begin": 2895,
									"end": 3012,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 2895,
									"end": 3012,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "162"
								},
								{
									"begin": 2895,
									"end": 3012,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 2931,
									"end": 3010,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "163"
								},
								{
									"begin": 2931,
									"end": 3010,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 2931,
									"end": 3010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2931,
									"end": 3010,
									"name": "tag",
									"source": 23,
									"value": "163"
								},
								{
									"begin": 2931,
									"end": 3010,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2895,
									"end": 3012,
									"name": "tag",
									"source": 23,
									"value": "162"
								},
								{
									"begin": 2895,
									"end": 3012,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3030,
									"end": 3051,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "164"
								},
								{
									"begin": 3046,
									"end": 3050,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 3030,
									"end": 3051,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "85"
								},
								{
									"begin": 3030,
									"end": 3051,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3030,
									"end": 3051,
									"name": "tag",
									"source": 23,
									"value": "164"
								},
								{
									"begin": 3030,
									"end": 3051,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3021,
									"end": 3051,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 3021,
									"end": 3051,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3119,
									"end": 3120,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3159,
									"end": 3219,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "165"
								},
								{
									"begin": 3215,
									"end": 3218,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 3206,
									"end": 3212,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3195,
									"end": 3204,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 3191,
									"end": 3213,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3159,
									"end": 3219,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "93"
								},
								{
									"begin": 3159,
									"end": 3219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3159,
									"end": 3219,
									"name": "tag",
									"source": 23,
									"value": "165"
								},
								{
									"begin": 3159,
									"end": 3219,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3152,
									"end": 3156,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3145,
									"end": 3150,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 3141,
									"end": 3157,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3134,
									"end": 3220,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 3061,
									"end": 3231,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3302,
									"end": 3304,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 3343,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "166"
								},
								{
									"begin": 3399,
									"end": 3402,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 3390,
									"end": 3396,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3379,
									"end": 3388,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 3375,
									"end": 3397,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3343,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "96"
								},
								{
									"begin": 3343,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3343,
									"end": 3403,
									"name": "tag",
									"source": 23,
									"value": "166"
								},
								{
									"begin": 3343,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3336,
									"end": 3340,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 3329,
									"end": 3334,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 3325,
									"end": 3341,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3318,
									"end": 3404,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 3241,
									"end": 3415,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2792,
									"end": 3422,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 2792,
									"end": 3422,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 2792,
									"end": 3422,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2792,
									"end": 3422,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2792,
									"end": 3422,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3465,
									"end": 4278,
									"name": "tag",
									"source": 23,
									"value": "98"
								},
								{
									"begin": 3465,
									"end": 4278,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3599,
									"end": 3604,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3624,
									"end": 3732,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "168"
								},
								{
									"begin": 3640,
									"end": 3731,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "169"
								},
								{
									"begin": 3724,
									"end": 3730,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 3640,
									"end": 3731,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "86"
								},
								{
									"begin": 3640,
									"end": 3731,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3640,
									"end": 3731,
									"name": "tag",
									"source": 23,
									"value": "169"
								},
								{
									"begin": 3640,
									"end": 3731,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3624,
									"end": 3732,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "85"
								},
								{
									"begin": 3624,
									"end": 3732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3624,
									"end": 3732,
									"name": "tag",
									"source": 23,
									"value": "168"
								},
								{
									"begin": 3624,
									"end": 3732,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3615,
									"end": 3732,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 3615,
									"end": 3732,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3752,
									"end": 3757,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 3781,
									"end": 3787,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 3774,
									"end": 3779,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3767,
									"end": 3788,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 3815,
									"end": 3819,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 3808,
									"end": 3813,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3804,
									"end": 3820,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3797,
									"end": 3820,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 3797,
									"end": 3820,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3868,
									"end": 3872,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 3860,
									"end": 3866,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 3856,
									"end": 3873,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 3848,
									"end": 3854,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 3844,
									"end": 3874,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3897,
									"end": 3900,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 3889,
									"end": 3895,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 3886,
									"end": 3901,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 3883,
									"end": 4005,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 3883,
									"end": 4005,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "170"
								},
								{
									"begin": 3883,
									"end": 4005,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 3916,
									"end": 3995,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "171"
								},
								{
									"begin": 3916,
									"end": 3995,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "87"
								},
								{
									"begin": 3916,
									"end": 3995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3916,
									"end": 3995,
									"name": "tag",
									"source": 23,
									"value": "171"
								},
								{
									"begin": 3916,
									"end": 3995,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3883,
									"end": 4005,
									"name": "tag",
									"source": 23,
									"value": "170"
								},
								{
									"begin": 3883,
									"end": 4005,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4031,
									"end": 4037,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 4014,
									"end": 4272,
									"name": "tag",
									"source": 23,
									"value": "172"
								},
								{
									"begin": 4014,
									"end": 4272,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4048,
									"end": 4054,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 4043,
									"end": 4046,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 4040,
									"end": 4055,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 4014,
									"end": 4272,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 4014,
									"end": 4272,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "174"
								},
								{
									"begin": 4014,
									"end": 4272,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 4123,
									"end": 4126,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 4152,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "175"
								},
								{
									"begin": 4223,
									"end": 4226,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 4211,
									"end": 4221,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4152,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "97"
								},
								{
									"begin": 4152,
									"end": 4227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4152,
									"end": 4227,
									"name": "tag",
									"source": 23,
									"value": "175"
								},
								{
									"begin": 4152,
									"end": 4227,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4147,
									"end": 4150,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 4140,
									"end": 4228,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 4257,
									"end": 4261,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 4252,
									"end": 4255,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 4248,
									"end": 4262,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4241,
									"end": 4262,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 4241,
									"end": 4262,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4090,
									"end": 4272,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4074,
									"end": 4078,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 4069,
									"end": 4072,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 4065,
									"end": 4079,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4058,
									"end": 4079,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 4058,
									"end": 4079,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4014,
									"end": 4272,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "172"
								},
								{
									"begin": 4014,
									"end": 4272,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4014,
									"end": 4272,
									"name": "tag",
									"source": 23,
									"value": "174"
								},
								{
									"begin": 4014,
									"end": 4272,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4018,
									"end": 4039,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3605,
									"end": 4278,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3605,
									"end": 4278,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3465,
									"end": 4278,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 3465,
									"end": 4278,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 3465,
									"end": 4278,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3465,
									"end": 4278,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3465,
									"end": 4278,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3465,
									"end": 4278,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4321,
									"end": 4760,
									"name": "tag",
									"source": 23,
									"value": "99"
								},
								{
									"begin": 4321,
									"end": 4760,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4430,
									"end": 4435,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 4479,
									"end": 4482,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 4464,
									"end": 4470,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 4460,
									"end": 4477,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4456,
									"end": 4483,
									"name": "SLT",
									"source": 23
								},
								{
									"begin": 4446,
									"end": 4568,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "177"
								},
								{
									"begin": 4446,
									"end": 4568,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 4487,
									"end": 4566,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "178"
								},
								{
									"begin": 4487,
									"end": 4566,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "81"
								},
								{
									"begin": 4487,
									"end": 4566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4487,
									"end": 4566,
									"name": "tag",
									"source": 23,
									"value": "178"
								},
								{
									"begin": 4487,
									"end": 4566,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4446,
									"end": 4568,
									"name": "tag",
									"source": 23,
									"value": "177"
								},
								{
									"begin": 4446,
									"end": 4568,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4597,
									"end": 4603,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 4591,
									"end": 4604,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 4622,
									"end": 4754,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "179"
								},
								{
									"begin": 4750,
									"end": 4753,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 4742,
									"end": 4748,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 4727,
									"end": 4733,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 4723,
									"end": 4740,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4622,
									"end": 4754,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "98"
								},
								{
									"begin": 4622,
									"end": 4754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4622,
									"end": 4754,
									"name": "tag",
									"source": 23,
									"value": "179"
								},
								{
									"begin": 4622,
									"end": 4754,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4613,
									"end": 4754,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 4613,
									"end": 4754,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4436,
									"end": 4760,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4321,
									"end": 4760,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 4321,
									"end": 4760,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 4321,
									"end": 4760,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4321,
									"end": 4760,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4321,
									"end": 4760,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4766,
									"end": 5530,
									"name": "tag",
									"source": 23,
									"value": "3"
								},
								{
									"begin": 4766,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4897,
									"end": 4903,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 4905,
									"end": 4911,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 4954,
									"end": 4956,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 4942,
									"end": 4951,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 4933,
									"end": 4940,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 4929,
									"end": 4952,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 4925,
									"end": 4957,
									"name": "SLT",
									"source": 23
								},
								{
									"begin": 4922,
									"end": 5041,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 4922,
									"end": 5041,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "181"
								},
								{
									"begin": 4922,
									"end": 5041,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 4960,
									"end": 5039,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "182"
								},
								{
									"begin": 4960,
									"end": 5039,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "79"
								},
								{
									"begin": 4960,
									"end": 5039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4960,
									"end": 5039,
									"name": "tag",
									"source": 23,
									"value": "182"
								},
								{
									"begin": 4960,
									"end": 5039,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4922,
									"end": 5041,
									"name": "tag",
									"source": 23,
									"value": "181"
								},
								{
									"begin": 4922,
									"end": 5041,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5101,
									"end": 5102,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5090,
									"end": 5099,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 5086,
									"end": 5103,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 5080,
									"end": 5104,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 5131,
									"end": 5149,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5123,
									"end": 5129,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 5120,
									"end": 5150,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 5117,
									"end": 5234,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 5117,
									"end": 5234,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "183"
								},
								{
									"begin": 5117,
									"end": 5234,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 5153,
									"end": 5232,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "184"
								},
								{
									"begin": 5153,
									"end": 5232,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "80"
								},
								{
									"begin": 5153,
									"end": 5232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5153,
									"end": 5232,
									"name": "tag",
									"source": 23,
									"value": "184"
								},
								{
									"begin": 5153,
									"end": 5232,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5117,
									"end": 5234,
									"name": "tag",
									"source": 23,
									"value": "183"
								},
								{
									"begin": 5117,
									"end": 5234,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5258,
									"end": 5374,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "185"
								},
								{
									"begin": 5366,
									"end": 5373,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 5357,
									"end": 5363,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5346,
									"end": 5355,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 5342,
									"end": 5364,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 5258,
									"end": 5374,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "99"
								},
								{
									"begin": 5258,
									"end": 5374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5258,
									"end": 5374,
									"name": "tag",
									"source": 23,
									"value": "185"
								},
								{
									"begin": 5258,
									"end": 5374,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5248,
									"end": 5374,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 5248,
									"end": 5374,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5051,
									"end": 5384,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5423,
									"end": 5425,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 5449,
									"end": 5513,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "186"
								},
								{
									"begin": 5505,
									"end": 5512,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 5496,
									"end": 5502,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5485,
									"end": 5494,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 5481,
									"end": 5503,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 5449,
									"end": 5513,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "93"
								},
								{
									"begin": 5449,
									"end": 5513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5449,
									"end": 5513,
									"name": "tag",
									"source": 23,
									"value": "186"
								},
								{
									"begin": 5449,
									"end": 5513,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5439,
									"end": 5513,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5439,
									"end": 5513,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5394,
									"end": 5523,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4766,
									"end": 5530,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 4766,
									"end": 5530,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4766,
									"end": 5530,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 4766,
									"end": 5530,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 4766,
									"end": 5530,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4766,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5536,
									"end": 5635,
									"name": "tag",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 5536,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5588,
									"end": 5594,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5622,
									"end": 5627,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 5616,
									"end": 5628,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 5606,
									"end": 5628,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5606,
									"end": 5628,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5536,
									"end": 5635,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5536,
									"end": 5635,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5536,
									"end": 5635,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5536,
									"end": 5635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5641,
									"end": 5821,
									"name": "tag",
									"source": 23,
									"value": "101"
								},
								{
									"begin": 5641,
									"end": 5821,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5689,
									"end": 5766,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5686,
									"end": 5687,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5679,
									"end": 5767,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 5786,
									"end": 5790,
									"name": "PUSH",
									"source": 23,
									"value": "22"
								},
								{
									"begin": 5783,
									"end": 5784,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 5776,
									"end": 5791,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 5810,
									"end": 5814,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 5807,
									"end": 5808,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5800,
									"end": 5815,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 5827,
									"end": 6147,
									"name": "tag",
									"source": 23,
									"value": "102"
								},
								{
									"begin": 5827,
									"end": 6147,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5871,
									"end": 5877,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5908,
									"end": 5909,
									"name": "PUSH",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 5902,
									"end": 5906,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5898,
									"end": 5910,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 5888,
									"end": 5910,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5888,
									"end": 5910,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5955,
									"end": 5956,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 5949,
									"end": 5953,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5945,
									"end": 5957,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 5976,
									"end": 5994,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 5966,
									"end": 6047,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "190"
								},
								{
									"begin": 5966,
									"end": 6047,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 6032,
									"end": 6036,
									"name": "PUSH",
									"source": 23,
									"value": "7F"
								},
								{
									"begin": 6024,
									"end": 6030,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 6020,
									"end": 6037,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 6010,
									"end": 6037,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 6010,
									"end": 6037,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5966,
									"end": 6047,
									"name": "tag",
									"source": 23,
									"value": "190"
								},
								{
									"begin": 5966,
									"end": 6047,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6094,
									"end": 6096,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 6086,
									"end": 6092,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 6083,
									"end": 6097,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 6063,
									"end": 6081,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 6060,
									"end": 6098,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 6057,
									"end": 6141,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "191"
								},
								{
									"begin": 6057,
									"end": 6141,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 6113,
									"end": 6131,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "192"
								},
								{
									"begin": 6113,
									"end": 6131,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "101"
								},
								{
									"begin": 6113,
									"end": 6131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6113,
									"end": 6131,
									"name": "tag",
									"source": 23,
									"value": "192"
								},
								{
									"begin": 6113,
									"end": 6131,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6057,
									"end": 6141,
									"name": "tag",
									"source": 23,
									"value": "191"
								},
								{
									"begin": 6057,
									"end": 6141,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5878,
									"end": 6147,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5827,
									"end": 6147,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5827,
									"end": 6147,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5827,
									"end": 6147,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5827,
									"end": 6147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6153,
									"end": 6294,
									"name": "tag",
									"source": 23,
									"value": "103"
								},
								{
									"begin": 6153,
									"end": 6294,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6202,
									"end": 6206,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6225,
									"end": 6228,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 6217,
									"end": 6228,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6217,
									"end": 6228,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6248,
									"end": 6251,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 6245,
									"end": 6246,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6238,
									"end": 6252,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 6282,
									"end": 6286,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 6279,
									"end": 6280,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6269,
									"end": 6287,
									"name": "KECCAK256",
									"source": 23
								},
								{
									"begin": 6261,
									"end": 6287,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6261,
									"end": 6287,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6153,
									"end": 6294,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 6153,
									"end": 6294,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6153,
									"end": 6294,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6153,
									"end": 6294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6300,
									"end": 6393,
									"name": "tag",
									"source": 23,
									"value": "104"
								},
								{
									"begin": 6300,
									"end": 6393,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6337,
									"end": 6343,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6384,
									"end": 6386,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 6379,
									"end": 6381,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 6372,
									"end": 6377,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 6368,
									"end": 6382,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 6364,
									"end": 6387,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 6354,
									"end": 6387,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6354,
									"end": 6387,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6300,
									"end": 6393,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 6300,
									"end": 6393,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6300,
									"end": 6393,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6300,
									"end": 6393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6399,
									"end": 6506,
									"name": "tag",
									"source": 23,
									"value": "105"
								},
								{
									"begin": 6399,
									"end": 6506,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6443,
									"end": 6451,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6493,
									"end": 6498,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 6487,
									"end": 6491,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 6483,
									"end": 6499,
									"name": "SHL",
									"source": 23
								},
								{
									"begin": 6462,
									"end": 6499,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6462,
									"end": 6499,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6399,
									"end": 6506,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 6399,
									"end": 6506,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 6399,
									"end": 6506,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6399,
									"end": 6506,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6399,
									"end": 6506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6512,
									"end": 6905,
									"name": "tag",
									"source": 23,
									"value": "106"
								},
								{
									"begin": 6512,
									"end": 6905,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6581,
									"end": 6587,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6631,
									"end": 6632,
									"name": "PUSH",
									"source": 23,
									"value": "8"
								},
								{
									"begin": 6619,
									"end": 6629,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 6615,
									"end": 6633,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 6654,
									"end": 6751,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "197"
								},
								{
									"begin": 6684,
									"end": 6750,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 6654,
									"end": 6751,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "105"
								},
								{
									"begin": 6654,
									"end": 6751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6654,
									"end": 6751,
									"name": "tag",
									"source": 23,
									"value": "197"
								},
								{
									"begin": 6654,
									"end": 6751,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6772,
									"end": 6811,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "198"
								},
								{
									"begin": 6802,
									"end": 6810,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 6791,
									"end": 6800,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 6772,
									"end": 6811,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "105"
								},
								{
									"begin": 6772,
									"end": 6811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6772,
									"end": 6811,
									"name": "tag",
									"source": 23,
									"value": "198"
								},
								{
									"begin": 6772,
									"end": 6811,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6760,
									"end": 6811,
									"name": "SWAP6",
									"source": 23
								},
								{
									"begin": 6760,
									"end": 6811,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 6840,
									"end": 6849,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 6833,
									"end": 6838,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 6829,
									"end": 6850,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 6820,
									"end": 6850,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 6820,
									"end": 6850,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6893,
									"end": 6897,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 6883,
									"end": 6891,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 6879,
									"end": 6898,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 6872,
									"end": 6877,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 6869,
									"end": 6899,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 6859,
									"end": 6899,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 6859,
									"end": 6899,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6588,
									"end": 6905,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6588,
									"end": 6905,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6512,
									"end": 6905,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 6512,
									"end": 6905,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 6512,
									"end": 6905,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6512,
									"end": 6905,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6512,
									"end": 6905,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6512,
									"end": 6905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6911,
									"end": 6971,
									"name": "tag",
									"source": 23,
									"value": "107"
								},
								{
									"begin": 6911,
									"end": 6971,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6939,
									"end": 6942,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6960,
									"end": 6965,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 6953,
									"end": 6965,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6953,
									"end": 6965,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6911,
									"end": 6971,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 6911,
									"end": 6971,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6911,
									"end": 6971,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6911,
									"end": 6971,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6977,
									"end": 7119,
									"name": "tag",
									"source": 23,
									"value": "108"
								},
								{
									"begin": 6977,
									"end": 7119,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7027,
									"end": 7036,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 7060,
									"end": 7113,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "201"
								},
								{
									"begin": 7078,
									"end": 7112,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "202"
								},
								{
									"begin": 7087,
									"end": 7111,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "203"
								},
								{
									"begin": 7105,
									"end": 7110,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 7087,
									"end": 7111,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 7087,
									"end": 7111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7087,
									"end": 7111,
									"name": "tag",
									"source": 23,
									"value": "203"
								},
								{
									"begin": 7087,
									"end": 7111,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7078,
									"end": 7112,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "107"
								},
								{
									"begin": 7078,
									"end": 7112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7078,
									"end": 7112,
									"name": "tag",
									"source": 23,
									"value": "202"
								},
								{
									"begin": 7078,
									"end": 7112,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7060,
									"end": 7113,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 7060,
									"end": 7113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7060,
									"end": 7113,
									"name": "tag",
									"source": 23,
									"value": "201"
								},
								{
									"begin": 7060,
									"end": 7113,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7047,
									"end": 7113,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 7047,
									"end": 7113,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6977,
									"end": 7119,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 6977,
									"end": 7119,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6977,
									"end": 7119,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6977,
									"end": 7119,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7125,
									"end": 7200,
									"name": "tag",
									"source": 23,
									"value": "109"
								},
								{
									"begin": 7125,
									"end": 7200,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7168,
									"end": 7171,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 7189,
									"end": 7194,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 7182,
									"end": 7194,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 7182,
									"end": 7194,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7125,
									"end": 7200,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 7125,
									"end": 7200,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 7125,
									"end": 7200,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7125,
									"end": 7200,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7206,
									"end": 7475,
									"name": "tag",
									"source": 23,
									"value": "110"
								},
								{
									"begin": 7206,
									"end": 7475,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7316,
									"end": 7355,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "206"
								},
								{
									"begin": 7347,
									"end": 7354,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 7316,
									"end": 7355,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "108"
								},
								{
									"begin": 7316,
									"end": 7355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7316,
									"end": 7355,
									"name": "tag",
									"source": 23,
									"value": "206"
								},
								{
									"begin": 7316,
									"end": 7355,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7377,
									"end": 7468,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "207"
								},
								{
									"begin": 7426,
									"end": 7467,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "208"
								},
								{
									"begin": 7450,
									"end": 7466,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 7426,
									"end": 7467,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "109"
								},
								{
									"begin": 7426,
									"end": 7467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7426,
									"end": 7467,
									"name": "tag",
									"source": 23,
									"value": "208"
								},
								{
									"begin": 7426,
									"end": 7467,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7418,
									"end": 7424,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 7411,
									"end": 7415,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 7405,
									"end": 7416,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 7377,
									"end": 7468,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "106"
								},
								{
									"begin": 7377,
									"end": 7468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7377,
									"end": 7468,
									"name": "tag",
									"source": 23,
									"value": "207"
								},
								{
									"begin": 7377,
									"end": 7468,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7371,
									"end": 7375,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 7364,
									"end": 7469,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 7282,
									"end": 7475,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7206,
									"end": 7475,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7206,
									"end": 7475,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7206,
									"end": 7475,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7206,
									"end": 7475,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7481,
									"end": 7554,
									"name": "tag",
									"source": 23,
									"value": "111"
								},
								{
									"begin": 7481,
									"end": 7554,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7526,
									"end": 7529,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 7540,
									"end": 7548,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 7540,
									"end": 7548,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7481,
									"end": 7554,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 7481,
									"end": 7554,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7560,
									"end": 7749,
									"name": "tag",
									"source": 23,
									"value": "112"
								},
								{
									"begin": 7560,
									"end": 7749,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7637,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "211"
								},
								{
									"begin": 7637,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "111"
								},
								{
									"begin": 7637,
									"end": 7669,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7637,
									"end": 7669,
									"name": "tag",
									"source": 23,
									"value": "211"
								},
								{
									"begin": 7637,
									"end": 7669,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7678,
									"end": 7743,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "212"
								},
								{
									"begin": 7736,
									"end": 7742,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 7728,
									"end": 7734,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 7722,
									"end": 7726,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 7678,
									"end": 7743,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "110"
								},
								{
									"begin": 7678,
									"end": 7743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7678,
									"end": 7743,
									"name": "tag",
									"source": 23,
									"value": "212"
								},
								{
									"begin": 7678,
									"end": 7743,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7613,
									"end": 7749,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7560,
									"end": 7749,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7560,
									"end": 7749,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7560,
									"end": 7749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7755,
									"end": 7941,
									"name": "tag",
									"source": 23,
									"value": "113"
								},
								{
									"begin": 7755,
									"end": 7941,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7815,
									"end": 7935,
									"name": "tag",
									"source": 23,
									"value": "214"
								},
								{
									"begin": 7815,
									"end": 7935,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7832,
									"end": 7835,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 7825,
									"end": 7830,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 7822,
									"end": 7836,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 7815,
									"end": 7935,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 7815,
									"end": 7935,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "216"
								},
								{
									"begin": 7815,
									"end": 7935,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 7886,
									"end": 7925,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "217"
								},
								{
									"begin": 7923,
									"end": 7924,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 7886,
									"end": 7925,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "112"
								},
								{
									"begin": 7886,
									"end": 7925,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7886,
									"end": 7925,
									"name": "tag",
									"source": 23,
									"value": "217"
								},
								{
									"begin": 7886,
									"end": 7925,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7859,
									"end": 7860,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 7852,
									"end": 7857,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 7848,
									"end": 7861,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 7839,
									"end": 7861,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 7839,
									"end": 7861,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7815,
									"end": 7935,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "214"
								},
								{
									"begin": 7815,
									"end": 7935,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7815,
									"end": 7935,
									"name": "tag",
									"source": 23,
									"value": "216"
								},
								{
									"begin": 7815,
									"end": 7935,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7755,
									"end": 7941,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7755,
									"end": 7941,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7755,
									"end": 7941,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7947,
									"end": 8490,
									"name": "tag",
									"source": 23,
									"value": "114"
								},
								{
									"begin": 7947,
									"end": 8490,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8048,
									"end": 8050,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 8043,
									"end": 8046,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8040,
									"end": 8051,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 8037,
									"end": 8483,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 8037,
									"end": 8483,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "219"
								},
								{
									"begin": 8037,
									"end": 8483,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 8082,
									"end": 8120,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "220"
								},
								{
									"begin": 8114,
									"end": 8119,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 8082,
									"end": 8120,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "103"
								},
								{
									"begin": 8082,
									"end": 8120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8082,
									"end": 8120,
									"name": "tag",
									"source": 23,
									"value": "220"
								},
								{
									"begin": 8082,
									"end": 8120,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8166,
									"end": 8195,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "221"
								},
								{
									"begin": 8184,
									"end": 8194,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 8166,
									"end": 8195,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "104"
								},
								{
									"begin": 8166,
									"end": 8195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8166,
									"end": 8195,
									"name": "tag",
									"source": 23,
									"value": "221"
								},
								{
									"begin": 8166,
									"end": 8195,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8156,
									"end": 8164,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 8152,
									"end": 8196,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 8349,
									"end": 8351,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 8337,
									"end": 8347,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 8334,
									"end": 8352,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 8331,
									"end": 8380,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 8331,
									"end": 8380,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "222"
								},
								{
									"begin": 8331,
									"end": 8380,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 8370,
									"end": 8378,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 8355,
									"end": 8378,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 8355,
									"end": 8378,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8331,
									"end": 8380,
									"name": "tag",
									"source": 23,
									"value": "222"
								},
								{
									"begin": 8331,
									"end": 8380,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8393,
									"end": 8473,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "223"
								},
								{
									"begin": 8449,
									"end": 8471,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "224"
								},
								{
									"begin": 8467,
									"end": 8470,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 8449,
									"end": 8471,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "104"
								},
								{
									"begin": 8449,
									"end": 8471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8449,
									"end": 8471,
									"name": "tag",
									"source": 23,
									"value": "224"
								},
								{
									"begin": 8449,
									"end": 8471,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8439,
									"end": 8447,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 8435,
									"end": 8472,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 8422,
									"end": 8433,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8393,
									"end": 8473,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "113"
								},
								{
									"begin": 8393,
									"end": 8473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8393,
									"end": 8473,
									"name": "tag",
									"source": 23,
									"value": "223"
								},
								{
									"begin": 8393,
									"end": 8473,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8052,
									"end": 8483,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8052,
									"end": 8483,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8037,
									"end": 8483,
									"name": "tag",
									"source": 23,
									"value": "219"
								},
								{
									"begin": 8037,
									"end": 8483,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7947,
									"end": 8490,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7947,
									"end": 8490,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7947,
									"end": 8490,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7947,
									"end": 8490,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8496,
									"end": 8613,
									"name": "tag",
									"source": 23,
									"value": "115"
								},
								{
									"begin": 8496,
									"end": 8613,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8550,
									"end": 8558,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 8600,
									"end": 8605,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8594,
									"end": 8598,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8590,
									"end": 8606,
									"name": "SHR",
									"source": 23
								},
								{
									"begin": 8569,
									"end": 8606,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 8569,
									"end": 8606,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8496,
									"end": 8613,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 8496,
									"end": 8613,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 8496,
									"end": 8613,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8496,
									"end": 8613,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8496,
									"end": 8613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8619,
									"end": 8788,
									"name": "tag",
									"source": 23,
									"value": "116"
								},
								{
									"begin": 8619,
									"end": 8788,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8663,
									"end": 8669,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 8696,
									"end": 8747,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "227"
								},
								{
									"begin": 8744,
									"end": 8745,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 8740,
									"end": 8746,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 8732,
									"end": 8737,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 8729,
									"end": 8730,
									"name": "PUSH",
									"source": 23,
									"value": "8"
								},
								{
									"begin": 8725,
									"end": 8738,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 8696,
									"end": 8747,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "115"
								},
								{
									"begin": 8696,
									"end": 8747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8696,
									"end": 8747,
									"name": "tag",
									"source": 23,
									"value": "227"
								},
								{
									"begin": 8696,
									"end": 8747,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8692,
									"end": 8748,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 8777,
									"end": 8781,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 8771,
									"end": 8775,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 8767,
									"end": 8782,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 8757,
									"end": 8782,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 8757,
									"end": 8782,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8670,
									"end": 8788,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8619,
									"end": 8788,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 8619,
									"end": 8788,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 8619,
									"end": 8788,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8619,
									"end": 8788,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8619,
									"end": 8788,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8793,
									"end": 9088,
									"name": "tag",
									"source": 23,
									"value": "117"
								},
								{
									"begin": 8793,
									"end": 9088,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8869,
									"end": 8873,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 9015,
									"end": 9044,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "229"
								},
								{
									"begin": 9040,
									"end": 9043,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 9034,
									"end": 9038,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 9015,
									"end": 9044,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "116"
								},
								{
									"begin": 9015,
									"end": 9044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9015,
									"end": 9044,
									"name": "tag",
									"source": 23,
									"value": "229"
								},
								{
									"begin": 9015,
									"end": 9044,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9007,
									"end": 9044,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 9007,
									"end": 9044,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9077,
									"end": 9080,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9074,
									"end": 9075,
									"name": "PUSH",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 9070,
									"end": 9081,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 9064,
									"end": 9068,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9061,
									"end": 9082,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 9053,
									"end": 9082,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 9053,
									"end": 9082,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8793,
									"end": 9088,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 8793,
									"end": 9088,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 8793,
									"end": 9088,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8793,
									"end": 9088,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8793,
									"end": 9088,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9093,
									"end": 10488,
									"name": "tag",
									"source": 23,
									"value": "9"
								},
								{
									"begin": 9093,
									"end": 10488,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9210,
									"end": 9247,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "231"
								},
								{
									"begin": 9243,
									"end": 9246,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9210,
									"end": 9247,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 9210,
									"end": 9247,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9210,
									"end": 9247,
									"name": "tag",
									"source": 23,
									"value": "231"
								},
								{
									"begin": 9210,
									"end": 9247,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9312,
									"end": 9330,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9304,
									"end": 9310,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 9301,
									"end": 9331,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 9298,
									"end": 9354,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 9298,
									"end": 9354,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "232"
								},
								{
									"begin": 9298,
									"end": 9354,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 9334,
									"end": 9352,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "233"
								},
								{
									"begin": 9334,
									"end": 9352,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "83"
								},
								{
									"begin": 9334,
									"end": 9352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9334,
									"end": 9352,
									"name": "tag",
									"source": 23,
									"value": "233"
								},
								{
									"begin": 9334,
									"end": 9352,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9298,
									"end": 9354,
									"name": "tag",
									"source": 23,
									"value": "232"
								},
								{
									"begin": 9298,
									"end": 9354,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9378,
									"end": 9416,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "234"
								},
								{
									"begin": 9410,
									"end": 9414,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9404,
									"end": 9415,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 9378,
									"end": 9416,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "102"
								},
								{
									"begin": 9378,
									"end": 9416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9378,
									"end": 9416,
									"name": "tag",
									"source": 23,
									"value": "234"
								},
								{
									"begin": 9378,
									"end": 9416,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9463,
									"end": 9530,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "235"
								},
								{
									"begin": 9523,
									"end": 9529,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9515,
									"end": 9521,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9509,
									"end": 9513,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 9463,
									"end": 9530,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "114"
								},
								{
									"begin": 9463,
									"end": 9530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9463,
									"end": 9530,
									"name": "tag",
									"source": 23,
									"value": "235"
								},
								{
									"begin": 9463,
									"end": 9530,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9557,
									"end": 9558,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 9581,
									"end": 9585,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 9568,
									"end": 9585,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 9568,
									"end": 9585,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9613,
									"end": 9615,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 9605,
									"end": 9611,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 9602,
									"end": 9616,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 9630,
									"end": 9631,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 9625,
									"end": 10243,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 9625,
									"end": 10243,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 9625,
									"end": 10243,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "237"
								},
								{
									"begin": 9625,
									"end": 10243,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 10287,
									"end": 10288,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 10304,
									"end": 10310,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 10301,
									"end": 10378,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 10301,
									"end": 10378,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "238"
								},
								{
									"begin": 10301,
									"end": 10378,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 10353,
									"end": 10362,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10348,
									"end": 10351,
									"name": "DUP8",
									"source": 23
								},
								{
									"begin": 10344,
									"end": 10363,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 10338,
									"end": 10364,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 10329,
									"end": 10364,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 10329,
									"end": 10364,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10301,
									"end": 10378,
									"name": "tag",
									"source": 23,
									"value": "238"
								},
								{
									"begin": 10301,
									"end": 10378,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10404,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "239"
								},
								{
									"begin": 10464,
									"end": 10470,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 10457,
									"end": 10462,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10404,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "117"
								},
								{
									"begin": 10404,
									"end": 10471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10404,
									"end": 10471,
									"name": "tag",
									"source": 23,
									"value": "239"
								},
								{
									"begin": 10404,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10398,
									"end": 10402,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 10391,
									"end": 10472,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 10260,
									"end": 10482,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9595,
									"end": 10482,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "236"
								},
								{
									"begin": 9595,
									"end": 10482,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9625,
									"end": 10243,
									"name": "tag",
									"source": 23,
									"value": "237"
								},
								{
									"begin": 9625,
									"end": 10243,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9677,
									"end": 9681,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 9673,
									"end": 9682,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 9665,
									"end": 9671,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 9661,
									"end": 9683,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 9711,
									"end": 9748,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "240"
								},
								{
									"begin": 9743,
									"end": 9747,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 9711,
									"end": 9748,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "103"
								},
								{
									"begin": 9711,
									"end": 9748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9711,
									"end": 9748,
									"name": "tag",
									"source": 23,
									"value": "240"
								},
								{
									"begin": 9711,
									"end": 9748,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9770,
									"end": 9771,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 9784,
									"end": 9992,
									"name": "tag",
									"source": 23,
									"value": "241"
								},
								{
									"begin": 9784,
									"end": 9992,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9798,
									"end": 9805,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9795,
									"end": 9796,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 9792,
									"end": 9806,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 9784,
									"end": 9992,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 9784,
									"end": 9992,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "243"
								},
								{
									"begin": 9784,
									"end": 9992,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 9877,
									"end": 9886,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 9872,
									"end": 9875,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 9868,
									"end": 9887,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 9862,
									"end": 9888,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 9854,
									"end": 9860,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9847,
									"end": 9889,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 9928,
									"end": 9929,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 9920,
									"end": 9926,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9916,
									"end": 9930,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 9906,
									"end": 9930,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 9906,
									"end": 9930,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9975,
									"end": 9977,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 9964,
									"end": 9973,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 9960,
									"end": 9978,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 9947,
									"end": 9978,
									"name": "SWAP5",
									"source": 23
								},
								{
									"begin": 9947,
									"end": 9978,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9821,
									"end": 9825,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 9818,
									"end": 9819,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 9814,
									"end": 9826,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 9809,
									"end": 9826,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 9809,
									"end": 9826,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9784,
									"end": 9992,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "241"
								},
								{
									"begin": 9784,
									"end": 9992,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9784,
									"end": 9992,
									"name": "tag",
									"source": 23,
									"value": "243"
								},
								{
									"begin": 9784,
									"end": 9992,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10020,
									"end": 10026,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 10011,
									"end": 10018,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 10008,
									"end": 10027,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 10005,
									"end": 10184,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 10005,
									"end": 10184,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "244"
								},
								{
									"begin": 10005,
									"end": 10184,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 10078,
									"end": 10087,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 10073,
									"end": 10076,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 10069,
									"end": 10088,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 10063,
									"end": 10089,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 10121,
									"end": 10169,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "245"
								},
								{
									"begin": 10163,
									"end": 10167,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 10155,
									"end": 10161,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 10151,
									"end": 10168,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 10140,
									"end": 10149,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10121,
									"end": 10169,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "116"
								},
								{
									"begin": 10121,
									"end": 10169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10121,
									"end": 10169,
									"name": "tag",
									"source": 23,
									"value": "245"
								},
								{
									"begin": 10121,
									"end": 10169,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10113,
									"end": 10119,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 10106,
									"end": 10170,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 10028,
									"end": 10184,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10005,
									"end": 10184,
									"name": "tag",
									"source": 23,
									"value": "244"
								},
								{
									"begin": 10005,
									"end": 10184,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10230,
									"end": 10231,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 10226,
									"end": 10227,
									"name": "PUSH",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 10218,
									"end": 10224,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 10214,
									"end": 10228,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 10210,
									"end": 10232,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 10204,
									"end": 10208,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 10197,
									"end": 10233,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 9632,
									"end": 10243,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9632,
									"end": 10243,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9632,
									"end": 10243,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9595,
									"end": 10482,
									"name": "tag",
									"source": 23,
									"value": "236"
								},
								{
									"begin": 9595,
									"end": 10482,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9595,
									"end": 10482,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9185,
									"end": 10488,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9185,
									"end": 10488,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9185,
									"end": 10488,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9093,
									"end": 10488,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9093,
									"end": 10488,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9093,
									"end": 10488,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10494,
									"end": 10612,
									"name": "tag",
									"source": 23,
									"value": "118"
								},
								{
									"begin": 10494,
									"end": 10612,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10581,
									"end": 10605,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "247"
								},
								{
									"begin": 10599,
									"end": 10604,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 10581,
									"end": 10605,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "91"
								},
								{
									"begin": 10581,
									"end": 10605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10581,
									"end": 10605,
									"name": "tag",
									"source": 23,
									"value": "247"
								},
								{
									"begin": 10581,
									"end": 10605,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10576,
									"end": 10579,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10569,
									"end": 10606,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 10494,
									"end": 10612,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10494,
									"end": 10612,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10494,
									"end": 10612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10618,
									"end": 10840,
									"name": "tag",
									"source": 23,
									"value": "14"
								},
								{
									"begin": 10618,
									"end": 10840,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10711,
									"end": 10715,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 10749,
									"end": 10751,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 10738,
									"end": 10747,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10734,
									"end": 10752,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 10726,
									"end": 10752,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 10726,
									"end": 10752,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10762,
									"end": 10833,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "249"
								},
								{
									"begin": 10830,
									"end": 10831,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 10819,
									"end": 10828,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 10815,
									"end": 10832,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 10806,
									"end": 10812,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 10762,
									"end": 10833,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "118"
								},
								{
									"begin": 10762,
									"end": 10833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10762,
									"end": 10833,
									"name": "tag",
									"source": 23,
									"value": "249"
								},
								{
									"begin": 10762,
									"end": 10833,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10618,
									"end": 10840,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 10618,
									"end": 10840,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 10618,
									"end": 10840,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10618,
									"end": 10840,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10618,
									"end": 10840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10846,
									"end": 11015,
									"name": "tag",
									"source": 23,
									"value": "119"
								},
								{
									"begin": 10846,
									"end": 11015,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10930,
									"end": 10941,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 10964,
									"end": 10970,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10959,
									"end": 10962,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10952,
									"end": 10971,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 11004,
									"end": 11008,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 10999,
									"end": 11002,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10995,
									"end": 11009,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 10980,
									"end": 11009,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 10980,
									"end": 11009,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10846,
									"end": 11015,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 10846,
									"end": 11015,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 10846,
									"end": 11015,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10846,
									"end": 11015,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10846,
									"end": 11015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11021,
									"end": 11241,
									"name": "tag",
									"source": 23,
									"value": "120"
								},
								{
									"begin": 11021,
									"end": 11241,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11161,
									"end": 11195,
									"name": "PUSH",
									"source": 23,
									"value": "4174206C65617374206F6E65207465616D206D656D6265722072657175697265"
								},
								{
									"begin": 11157,
									"end": 11158,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 11149,
									"end": 11155,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11145,
									"end": 11159,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 11138,
									"end": 11196,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 11230,
									"end": 11233,
									"name": "PUSH",
									"source": 23,
									"value": "6400000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11225,
									"end": 11227,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 11217,
									"end": 11223,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11213,
									"end": 11228,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 11206,
									"end": 11234,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 11021,
									"end": 11241,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11021,
									"end": 11241,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11247,
									"end": 11613,
									"name": "tag",
									"source": 23,
									"value": "121"
								},
								{
									"begin": 11247,
									"end": 11613,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11389,
									"end": 11392,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 11410,
									"end": 11477,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "253"
								},
								{
									"begin": 11474,
									"end": 11476,
									"name": "PUSH",
									"source": 23,
									"value": "21"
								},
								{
									"begin": 11469,
									"end": 11472,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 11410,
									"end": 11477,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "119"
								},
								{
									"begin": 11410,
									"end": 11477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11410,
									"end": 11477,
									"name": "tag",
									"source": 23,
									"value": "253"
								},
								{
									"begin": 11410,
									"end": 11477,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11403,
									"end": 11477,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 11403,
									"end": 11477,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11486,
									"end": 11579,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "254"
								},
								{
									"begin": 11575,
									"end": 11578,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11486,
									"end": 11579,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "120"
								},
								{
									"begin": 11486,
									"end": 11579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11486,
									"end": 11579,
									"name": "tag",
									"source": 23,
									"value": "254"
								},
								{
									"begin": 11486,
									"end": 11579,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11604,
									"end": 11606,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 11599,
									"end": 11602,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11595,
									"end": 11607,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 11588,
									"end": 11607,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 11588,
									"end": 11607,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11247,
									"end": 11613,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 11247,
									"end": 11613,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 11247,
									"end": 11613,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11247,
									"end": 11613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11619,
									"end": 12038,
									"name": "tag",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 11619,
									"end": 12038,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11785,
									"end": 11789,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 11823,
									"end": 11825,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 11812,
									"end": 11821,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11808,
									"end": 11826,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11872,
									"end": 11881,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 11866,
									"end": 11870,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 11862,
									"end": 11882,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 11858,
									"end": 11859,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 11847,
									"end": 11856,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 11843,
									"end": 11860,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 11836,
									"end": 11883,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 11900,
									"end": 12031,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "256"
								},
								{
									"begin": 12026,
									"end": 12030,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 11900,
									"end": 12031,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "121"
								},
								{
									"begin": 11900,
									"end": 12031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11900,
									"end": 12031,
									"name": "tag",
									"source": 23,
									"value": "256"
								},
								{
									"begin": 11900,
									"end": 12031,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11892,
									"end": 12031,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 11892,
									"end": 12031,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11619,
									"end": 12038,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 11619,
									"end": 12038,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 11619,
									"end": 12038,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11619,
									"end": 12038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12044,
									"end": 12224,
									"name": "tag",
									"source": 23,
									"value": "26"
								},
								{
									"begin": 12044,
									"end": 12224,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12092,
									"end": 12169,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12089,
									"end": 12090,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 12082,
									"end": 12170,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 12189,
									"end": 12193,
									"name": "PUSH",
									"source": 23,
									"value": "32"
								},
								{
									"begin": 12186,
									"end": 12187,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 12179,
									"end": 12194,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 12213,
									"end": 12217,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 12210,
									"end": 12211,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 12203,
									"end": 12218,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 12230,
									"end": 12410,
									"name": "tag",
									"source": 23,
									"value": "122"
								},
								{
									"begin": 12230,
									"end": 12410,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12278,
									"end": 12355,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12275,
									"end": 12276,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 12268,
									"end": 12356,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 12375,
									"end": 12379,
									"name": "PUSH",
									"source": 23,
									"value": "11"
								},
								{
									"begin": 12372,
									"end": 12373,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 12365,
									"end": 12380,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 12399,
									"end": 12403,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 12396,
									"end": 12397,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 12389,
									"end": 12404,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 12416,
									"end": 12607,
									"name": "tag",
									"source": 23,
									"value": "28"
								},
								{
									"begin": 12416,
									"end": 12607,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12456,
									"end": 12459,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 12475,
									"end": 12495,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "260"
								},
								{
									"begin": 12493,
									"end": 12494,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12475,
									"end": 12495,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 12475,
									"end": 12495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12475,
									"end": 12495,
									"name": "tag",
									"source": 23,
									"value": "260"
								},
								{
									"begin": 12475,
									"end": 12495,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12470,
									"end": 12495,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 12470,
									"end": 12495,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12509,
									"end": 12529,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "261"
								},
								{
									"begin": 12527,
									"end": 12528,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 12509,
									"end": 12529,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 12509,
									"end": 12529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12509,
									"end": 12529,
									"name": "tag",
									"source": 23,
									"value": "261"
								},
								{
									"begin": 12509,
									"end": 12529,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12504,
									"end": 12529,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 12504,
									"end": 12529,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12552,
									"end": 12553,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12549,
									"end": 12550,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12545,
									"end": 12554,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 12538,
									"end": 12554,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 12538,
									"end": 12554,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12573,
									"end": 12576,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 12570,
									"end": 12571,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12567,
									"end": 12577,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 12564,
									"end": 12600,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 12564,
									"end": 12600,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "262"
								},
								{
									"begin": 12564,
									"end": 12600,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 12580,
									"end": 12598,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "263"
								},
								{
									"begin": 12580,
									"end": 12598,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "122"
								},
								{
									"begin": 12580,
									"end": 12598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12580,
									"end": 12598,
									"name": "tag",
									"source": 23,
									"value": "263"
								},
								{
									"begin": 12580,
									"end": 12598,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12564,
									"end": 12600,
									"name": "tag",
									"source": 23,
									"value": "262"
								},
								{
									"begin": 12564,
									"end": 12600,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12416,
									"end": 12607,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 12416,
									"end": 12607,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 12416,
									"end": 12607,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12416,
									"end": 12607,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12416,
									"end": 12607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12613,
									"end": 13023,
									"name": "tag",
									"source": 23,
									"value": "33"
								},
								{
									"begin": 12613,
									"end": 13023,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12653,
									"end": 12660,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 12676,
									"end": 12696,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "265"
								},
								{
									"begin": 12694,
									"end": 12695,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12676,
									"end": 12696,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 12676,
									"end": 12696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12676,
									"end": 12696,
									"name": "tag",
									"source": 23,
									"value": "265"
								},
								{
									"begin": 12676,
									"end": 12696,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12671,
									"end": 12696,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 12671,
									"end": 12696,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12710,
									"end": 12730,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "266"
								},
								{
									"begin": 12728,
									"end": 12729,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 12710,
									"end": 12730,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 12710,
									"end": 12730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12710,
									"end": 12730,
									"name": "tag",
									"source": 23,
									"value": "266"
								},
								{
									"begin": 12710,
									"end": 12730,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12705,
									"end": 12730,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 12705,
									"end": 12730,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12765,
									"end": 12766,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12762,
									"end": 12763,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12758,
									"end": 12767,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 12787,
									"end": 12817,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "267"
								},
								{
									"begin": 12805,
									"end": 12816,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 12787,
									"end": 12817,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 12787,
									"end": 12817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12787,
									"end": 12817,
									"name": "tag",
									"source": 23,
									"value": "267"
								},
								{
									"begin": 12787,
									"end": 12817,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12776,
									"end": 12817,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 12776,
									"end": 12817,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12966,
									"end": 12967,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12957,
									"end": 12964,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12953,
									"end": 12968,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 12950,
									"end": 12951,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 12947,
									"end": 12969,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 12927,
									"end": 12928,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 12920,
									"end": 12929,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 12900,
									"end": 12983,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 12877,
									"end": 13016,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "268"
								},
								{
									"begin": 12877,
									"end": 13016,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 12996,
									"end": 13014,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "269"
								},
								{
									"begin": 12996,
									"end": 13014,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "122"
								},
								{
									"begin": 12996,
									"end": 13014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12996,
									"end": 13014,
									"name": "tag",
									"source": 23,
									"value": "269"
								},
								{
									"begin": 12996,
									"end": 13014,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12877,
									"end": 13016,
									"name": "tag",
									"source": 23,
									"value": "268"
								},
								{
									"begin": 12877,
									"end": 13016,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12661,
									"end": 13023,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12613,
									"end": 13023,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 12613,
									"end": 13023,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 12613,
									"end": 13023,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12613,
									"end": 13023,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12613,
									"end": 13023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13029,
									"end": 13209,
									"name": "tag",
									"source": 23,
									"value": "123"
								},
								{
									"begin": 13029,
									"end": 13209,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13077,
									"end": 13154,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13074,
									"end": 13075,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 13067,
									"end": 13155,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 13174,
									"end": 13178,
									"name": "PUSH",
									"source": 23,
									"value": "12"
								},
								{
									"begin": 13171,
									"end": 13172,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 13164,
									"end": 13179,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 13198,
									"end": 13202,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 13195,
									"end": 13196,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 13188,
									"end": 13203,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 13215,
									"end": 13400,
									"name": "tag",
									"source": 23,
									"value": "35"
								},
								{
									"begin": 13215,
									"end": 13400,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13255,
									"end": 13256,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 13272,
									"end": 13292,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "272"
								},
								{
									"begin": 13290,
									"end": 13291,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 13272,
									"end": 13292,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 13272,
									"end": 13292,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13272,
									"end": 13292,
									"name": "tag",
									"source": 23,
									"value": "272"
								},
								{
									"begin": 13272,
									"end": 13292,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13267,
									"end": 13292,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 13267,
									"end": 13292,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13306,
									"end": 13326,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "273"
								},
								{
									"begin": 13324,
									"end": 13325,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 13306,
									"end": 13326,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 13306,
									"end": 13326,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13306,
									"end": 13326,
									"name": "tag",
									"source": 23,
									"value": "273"
								},
								{
									"begin": 13306,
									"end": 13326,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13301,
									"end": 13326,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 13301,
									"end": 13326,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13345,
									"end": 13346,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 13335,
									"end": 13370,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "274"
								},
								{
									"begin": 13335,
									"end": 13370,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 13350,
									"end": 13368,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "275"
								},
								{
									"begin": 13350,
									"end": 13368,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "123"
								},
								{
									"begin": 13350,
									"end": 13368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13350,
									"end": 13368,
									"name": "tag",
									"source": 23,
									"value": "275"
								},
								{
									"begin": 13350,
									"end": 13368,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13335,
									"end": 13370,
									"name": "tag",
									"source": 23,
									"value": "274"
								},
								{
									"begin": 13335,
									"end": 13370,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13392,
									"end": 13393,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 13389,
									"end": 13390,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 13385,
									"end": 13394,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 13380,
									"end": 13394,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 13380,
									"end": 13394,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13215,
									"end": 13400,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 13215,
									"end": 13400,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 13215,
									"end": 13400,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13215,
									"end": 13400,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13215,
									"end": 13400,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13406,
									"end": 13626,
									"name": "tag",
									"source": 23,
									"value": "124"
								},
								{
									"begin": 13406,
									"end": 13626,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13546,
									"end": 13580,
									"name": "PUSH",
									"source": 23,
									"value": "546F74616C20646973747269627574696F6E2065786365656473206D61726B65"
								},
								{
									"begin": 13542,
									"end": 13543,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 13534,
									"end": 13540,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 13530,
									"end": 13544,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 13523,
									"end": 13581,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 13615,
									"end": 13618,
									"name": "PUSH",
									"source": 23,
									"value": "7400000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13610,
									"end": 13612,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 13602,
									"end": 13608,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 13598,
									"end": 13613,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 13591,
									"end": 13619,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 13406,
									"end": 13626,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13406,
									"end": 13626,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13632,
									"end": 13998,
									"name": "tag",
									"source": 23,
									"value": "125"
								},
								{
									"begin": 13632,
									"end": 13998,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13774,
									"end": 13777,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 13795,
									"end": 13862,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "278"
								},
								{
									"begin": 13859,
									"end": 13861,
									"name": "PUSH",
									"source": 23,
									"value": "21"
								},
								{
									"begin": 13854,
									"end": 13857,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 13795,
									"end": 13862,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "119"
								},
								{
									"begin": 13795,
									"end": 13862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13795,
									"end": 13862,
									"name": "tag",
									"source": 23,
									"value": "278"
								},
								{
									"begin": 13795,
									"end": 13862,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13788,
									"end": 13862,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 13788,
									"end": 13862,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13871,
									"end": 13964,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "279"
								},
								{
									"begin": 13960,
									"end": 13963,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 13871,
									"end": 13964,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "124"
								},
								{
									"begin": 13871,
									"end": 13964,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13871,
									"end": 13964,
									"name": "tag",
									"source": 23,
									"value": "279"
								},
								{
									"begin": 13871,
									"end": 13964,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13989,
									"end": 13991,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 13984,
									"end": 13987,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 13980,
									"end": 13992,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 13973,
									"end": 13992,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 13973,
									"end": 13992,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13632,
									"end": 13998,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 13632,
									"end": 13998,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 13632,
									"end": 13998,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13632,
									"end": 13998,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14004,
									"end": 14423,
									"name": "tag",
									"source": 23,
									"value": "52"
								},
								{
									"begin": 14004,
									"end": 14423,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14170,
									"end": 14174,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 14208,
									"end": 14210,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 14197,
									"end": 14206,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14193,
									"end": 14211,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 14185,
									"end": 14211,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 14185,
									"end": 14211,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14257,
									"end": 14266,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 14251,
									"end": 14255,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 14247,
									"end": 14267,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 14243,
									"end": 14244,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 14232,
									"end": 14241,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 14228,
									"end": 14245,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 14221,
									"end": 14268,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 14285,
									"end": 14416,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "281"
								},
								{
									"begin": 14411,
									"end": 14415,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 14285,
									"end": 14416,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "125"
								},
								{
									"begin": 14285,
									"end": 14416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14285,
									"end": 14416,
									"name": "tag",
									"source": 23,
									"value": "281"
								},
								{
									"begin": 14285,
									"end": 14416,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14277,
									"end": 14416,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 14277,
									"end": 14416,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14004,
									"end": 14423,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 14004,
									"end": 14423,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 14004,
									"end": 14423,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14004,
									"end": 14423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14429,
									"end": 14623,
									"name": "tag",
									"source": 23,
									"value": "55"
								},
								{
									"begin": 14429,
									"end": 14623,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14469,
									"end": 14473,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 14489,
									"end": 14509,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "283"
								},
								{
									"begin": 14507,
									"end": 14508,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14489,
									"end": 14509,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 14489,
									"end": 14509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14489,
									"end": 14509,
									"name": "tag",
									"source": 23,
									"value": "283"
								},
								{
									"begin": 14489,
									"end": 14509,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14484,
									"end": 14509,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 14484,
									"end": 14509,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14523,
									"end": 14543,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "284"
								},
								{
									"begin": 14541,
									"end": 14542,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 14523,
									"end": 14543,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 14523,
									"end": 14543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14523,
									"end": 14543,
									"name": "tag",
									"source": 23,
									"value": "284"
								},
								{
									"begin": 14523,
									"end": 14543,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14518,
									"end": 14543,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 14518,
									"end": 14543,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14567,
									"end": 14568,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14564,
									"end": 14565,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14560,
									"end": 14569,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 14552,
									"end": 14569,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 14552,
									"end": 14569,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14591,
									"end": 14592,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 14585,
									"end": 14589,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 14582,
									"end": 14593,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 14579,
									"end": 14616,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 14579,
									"end": 14616,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "285"
								},
								{
									"begin": 14579,
									"end": 14616,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 14596,
									"end": 14614,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "286"
								},
								{
									"begin": 14596,
									"end": 14614,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "122"
								},
								{
									"begin": 14596,
									"end": 14614,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14596,
									"end": 14614,
									"name": "tag",
									"source": 23,
									"value": "286"
								},
								{
									"begin": 14596,
									"end": 14614,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14579,
									"end": 14616,
									"name": "tag",
									"source": 23,
									"value": "285"
								},
								{
									"begin": 14579,
									"end": 14616,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14429,
									"end": 14623,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 14429,
									"end": 14623,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 14429,
									"end": 14623,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14429,
									"end": 14623,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14429,
									"end": 14623,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14629,
									"end": 14747,
									"name": "tag",
									"source": 23,
									"value": "126"
								},
								{
									"begin": 14629,
									"end": 14747,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14716,
									"end": 14740,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "288"
								},
								{
									"begin": 14734,
									"end": 14739,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 14716,
									"end": 14740,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 14716,
									"end": 14740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14716,
									"end": 14740,
									"name": "tag",
									"source": 23,
									"value": "288"
								},
								{
									"begin": 14716,
									"end": 14740,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14711,
									"end": 14714,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14704,
									"end": 14741,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 14629,
									"end": 14747,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14629,
									"end": 14747,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14629,
									"end": 14747,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14753,
									"end": 15195,
									"name": "tag",
									"source": 23,
									"value": "73"
								},
								{
									"begin": 14753,
									"end": 15195,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14902,
									"end": 14906,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 14940,
									"end": 14942,
									"name": "PUSH",
									"source": 23,
									"value": "60"
								},
								{
									"begin": 14929,
									"end": 14938,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14925,
									"end": 14943,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 14917,
									"end": 14943,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 14917,
									"end": 14943,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14953,
									"end": 15024,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "290"
								},
								{
									"begin": 15021,
									"end": 15022,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 15010,
									"end": 15019,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 15006,
									"end": 15023,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 14997,
									"end": 15003,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 14953,
									"end": 15024,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "118"
								},
								{
									"begin": 14953,
									"end": 15024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14953,
									"end": 15024,
									"name": "tag",
									"source": 23,
									"value": "290"
								},
								{
									"begin": 14953,
									"end": 15024,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 15034,
									"end": 15106,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "291"
								},
								{
									"begin": 15102,
									"end": 15104,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 15091,
									"end": 15100,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 15087,
									"end": 15105,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 15078,
									"end": 15084,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 15034,
									"end": 15106,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "126"
								},
								{
									"begin": 15034,
									"end": 15106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 15034,
									"end": 15106,
									"name": "tag",
									"source": 23,
									"value": "291"
								},
								{
									"begin": 15034,
									"end": 15106,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 15116,
									"end": 15188,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "292"
								},
								{
									"begin": 15184,
									"end": 15186,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 15173,
									"end": 15182,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 15169,
									"end": 15187,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 15160,
									"end": 15166,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 15116,
									"end": 15188,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "126"
								},
								{
									"begin": 15116,
									"end": 15188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 15116,
									"end": 15188,
									"name": "tag",
									"source": 23,
									"value": "292"
								},
								{
									"begin": 15116,
									"end": 15188,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14753,
									"end": 15195,
									"name": "SWAP5",
									"source": 23
								},
								{
									"begin": 14753,
									"end": 15195,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 14753,
									"end": 15195,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14753,
									"end": 15195,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14753,
									"end": 15195,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14753,
									"end": 15195,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14753,
									"end": 15195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 15201,
									"end": 15423,
									"name": "tag",
									"source": 23,
									"value": "77"
								},
								{
									"begin": 15201,
									"end": 15423,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 15294,
									"end": 15298,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 15332,
									"end": 15334,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 15321,
									"end": 15330,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 15317,
									"end": 15335,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 15309,
									"end": 15335,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 15309,
									"end": 15335,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 15345,
									"end": 15416,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "294"
								},
								{
									"begin": 15413,
									"end": 15414,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 15402,
									"end": 15411,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 15398,
									"end": 15415,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 15389,
									"end": 15395,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 15345,
									"end": 15416,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "126"
								},
								{
									"begin": 15345,
									"end": 15416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 15345,
									"end": 15416,
									"name": "tag",
									"source": 23,
									"value": "294"
								},
								{
									"begin": 15345,
									"end": 15416,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 15201,
									"end": 15423,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 15201,
									"end": 15423,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 15201,
									"end": 15423,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 15201,
									"end": 15423,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 15201,
									"end": 15423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2608,
									"end": 6286,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088a0fac46f0416773b1c6079ee7fbc85dd2ff5eb19b7f105cbc3a4ab1e45027064736f6c634300081e0033",
									".code": [
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "88E56EC6"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "BDD3D825"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "BDD3D825"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "EB91D37E"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "EFDED147"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "88E56EC6"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "902D55A5"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "35928998"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "76AE9B2D"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "19CA43AB"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 6286,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6148,
											"end": 6283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 6148,
											"end": 6283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5173,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5173,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 5173,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2737,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2737,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3027,
											"end": 3057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3027,
											"end": 3057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5812,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5812,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 5812,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2656,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2656,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4973,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4973,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4973,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3064,
											"end": 3090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3064,
											"end": 3090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5375,
											"end": 5657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5375,
											"end": 5657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5665,
											"end": 5804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5665,
											"end": 5804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6206,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6226,
											"end": 6244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6226,
											"end": 6244,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6226,
											"end": 6244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6226,
											"end": 6244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6219,
											"end": 6244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6219,
											"end": 6244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5290,
											"end": 5294,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4847,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4847,
											"end": 4862,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4843,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4862,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4862,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4876,
											"end": 4886,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4866,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4887,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4866,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4897,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4820,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5314,
											"end": 5359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5333,
											"end": 5339,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5352,
											"end": 5358,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5314,
											"end": 5332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5314,
											"end": 5359,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5314,
											"end": 5359,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5314,
											"end": 5359,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5359,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5359,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "5A39A80"
										},
										{
											"begin": 2737,
											"end": 2792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5916,
											"end": 5927,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5908,
											"end": 5913,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5908,
											"end": 5934,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5900,
											"end": 5958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5900,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6030,
											"end": 6035,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6018,
											"end": 6036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6055,
											"end": 6075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6075,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6055,
											"end": 6075,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6100,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6077,
											"end": 6100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6100,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6047,
											"end": 6101,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6047,
											"end": 6101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6047,
											"end": 6101,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6047,
											"end": 6101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6047,
											"end": 6101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 6140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "PUSH",
											"source": 4,
											"value": "9B18AB5DF7180B6B800000"
										},
										{
											"begin": 2656,
											"end": 2715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4847,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4847,
											"end": 4862,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4843,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4862,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4862,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4876,
											"end": 4886,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4866,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4887,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4866,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4897,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4828,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4820,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4820,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5109,
											"end": 5118,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5126,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5094,
											"end": 5127,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5094,
											"end": 5127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5127,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5423,
											"end": 5436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5486,
											"end": 5497,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5486,
											"end": 5497,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5486,
											"end": 5497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5486,
											"end": 5497,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5486,
											"end": 5497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5486,
											"end": 5497,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5486,
											"end": 5497,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5486,
											"end": 5497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5486,
											"end": 5497,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5486,
											"end": 5497,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5486,
											"end": 5497,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5449,
											"end": 5498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5449,
											"end": 5498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5556,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5546,
											"end": 5556,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5556,
											"name": "PUSH",
											"source": 4,
											"value": "3850C7BD"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5546,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5626,
											"end": 5632,
											"name": "PUSH",
											"source": 4,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5609,
											"end": 5621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5601,
											"end": 5622,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5601,
											"end": 5622,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5597,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5598,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5577,
											"end": 5598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5577,
											"end": 5622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5577,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5622,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5577,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5577,
											"end": 5633,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5577,
											"end": 5633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5633,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5577,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5569,
											"end": 5633,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5569,
											"end": 5633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5438,
											"end": 5657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5438,
											"end": 5657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5751,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 7,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 7,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 7,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 7,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 7,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 7,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 7,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 7,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 23,
											"value": "228"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 23,
											"value": "229"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 23,
											"value": "230"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 23
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 23,
											"value": "231"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 23
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 23,
											"value": "232"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "283"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "228"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 23,
											"value": "283"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "284"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "229"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 23,
											"value": "284"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "285"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "230"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 23,
											"value": "285"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "286"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "231"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 23,
											"value": "286"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 23,
											"value": "29"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "232"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 23,
											"value": "234"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 23,
											"value": "236"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 23,
											"value": "237"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "294"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "236"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 23,
											"value": "294"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 23,
											"value": "238"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "296"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "237"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 23,
											"value": "296"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "297"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 23,
											"value": "297"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 23,
											"value": "239"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "299"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "238"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 23,
											"value": "299"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 23,
											"value": "240"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 23,
											"value": "241"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "302"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "240"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 23,
											"value": "302"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "303"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 23,
											"value": "303"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 23,
											"value": "242"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "305"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "241"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 23,
											"value": "305"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 23,
											"value": "32"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "307"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "308"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "234"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 23,
											"value": "308"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 23,
											"value": "307"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "309"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "239"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 23,
											"value": "309"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "310"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "242"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 23,
											"value": "310"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 23,
											"value": "243"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 23,
											"value": "244"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "313"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "243"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 23,
											"value": "313"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 23,
											"value": "35"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "315"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "244"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 23,
											"value": "315"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 23,
											"value": "245"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "317"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "240"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 23,
											"value": "317"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 23,
											"value": "39"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "319"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "245"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 23,
											"value": "319"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 23,
											"value": "45"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "321"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "322"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "234"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 23,
											"value": "322"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 23,
											"value": "321"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "323"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "239"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 23,
											"value": "323"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "324"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "239"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 23,
											"value": "324"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "325"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "242"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 23,
											"value": "325"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 23,
											"value": "246"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 23,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 23,
											"value": "247"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "328"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "246"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 23,
											"value": "328"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 23,
											"value": "51"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "330"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "247"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 23,
											"value": "330"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 23,
											"value": "57"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "332"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "333"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "234"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 23,
											"value": "333"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 23,
											"value": "332"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "334"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "239"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 23,
											"value": "334"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 23,
											"value": "67"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "336"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "337"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "234"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 23,
											"value": "337"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 23,
											"value": "336"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "338"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "242"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 23,
											"value": "338"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 23,
											"value": "248"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "340"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "237"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 23,
											"value": "340"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5540,
											"end": 5872,
											"name": "tag",
											"source": 23,
											"value": "70"
										},
										{
											"begin": 5540,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5661,
											"end": 5665,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5701,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5684,
											"end": 5702,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5676,
											"end": 5702,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5676,
											"end": 5702,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5712,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "342"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5778,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5765,
											"end": 5782,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5756,
											"end": 5762,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5712,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "248"
										},
										{
											"begin": 5712,
											"end": 5783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5712,
											"end": 5783,
											"name": "tag",
											"source": 23,
											"value": "342"
										},
										{
											"begin": 5712,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5793,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "343"
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5850,
											"end": 5859,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5846,
											"end": 5864,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5837,
											"end": 5843,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 5793,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "245"
										},
										{
											"begin": 5793,
											"end": 5865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5793,
											"end": 5865,
											"name": "tag",
											"source": 23,
											"value": "343"
										},
										{
											"begin": 5793,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5540,
											"end": 5872,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 5540,
											"end": 5872,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5540,
											"end": 5872,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5540,
											"end": 5872,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5540,
											"end": 5872,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5540,
											"end": 5872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5878,
											"end": 6100,
											"name": "tag",
											"source": 23,
											"value": "74"
										},
										{
											"begin": 5878,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5971,
											"end": 5975,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6009,
											"end": 6011,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5998,
											"end": 6007,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5986,
											"end": 6012,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5986,
											"end": 6012,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6022,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "345"
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6088,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6075,
											"end": 6092,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 6022,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "248"
										},
										{
											"begin": 6022,
											"end": 6093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6022,
											"end": 6093,
											"name": "tag",
											"source": 23,
											"value": "345"
										},
										{
											"begin": 6022,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5878,
											"end": 6100,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5878,
											"end": 6100,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5878,
											"end": 6100,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5878,
											"end": 6100,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5878,
											"end": 6100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "tag",
											"source": 23,
											"value": "90"
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6174,
											"end": 6180,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6188,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6231,
											"end": 6233,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6228,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6210,
											"end": 6217,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 6206,
											"end": 6229,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 6202,
											"end": 6234,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "347"
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "348"
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "234"
										},
										{
											"begin": 6237,
											"end": 6316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "tag",
											"source": 23,
											"value": "348"
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "tag",
											"source": 23,
											"value": "347"
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6382,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "349"
										},
										{
											"begin": 6427,
											"end": 6434,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 6418,
											"end": 6424,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6407,
											"end": 6416,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 6403,
											"end": 6425,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6382,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "239"
										},
										{
											"begin": 6382,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6382,
											"end": 6435,
											"name": "tag",
											"source": 23,
											"value": "349"
										},
										{
											"begin": 6382,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6372,
											"end": 6435,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6372,
											"end": 6435,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6328,
											"end": 6445,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6484,
											"end": 6486,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "350"
										},
										{
											"begin": 6555,
											"end": 6562,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 6546,
											"end": 6552,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6535,
											"end": 6544,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 6531,
											"end": 6553,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "239"
										},
										{
											"begin": 6510,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "tag",
											"source": 23,
											"value": "350"
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6500,
											"end": 6563,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6500,
											"end": 6563,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6455,
											"end": 6573,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6106,
											"end": 6580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6586,
											"end": 6727,
											"name": "tag",
											"source": 23,
											"value": "249"
										},
										{
											"begin": 6586,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6719,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 6698,
											"end": 6720,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6698,
											"end": 6720,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6586,
											"end": 6727,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6586,
											"end": 6727,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6586,
											"end": 6727,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6586,
											"end": 6727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6733,
											"end": 6944,
											"name": "tag",
											"source": 23,
											"value": "250"
										},
										{
											"begin": 6733,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6859,
											"end": 6870,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6888,
											"end": 6891,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6881,
											"end": 6900,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 6933,
											"end": 6937,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 6931,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6909,
											"end": 6938,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6909,
											"end": 6938,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6733,
											"end": 6944,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6733,
											"end": 6944,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6733,
											"end": 6944,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6733,
											"end": 6944,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6733,
											"end": 6944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6950,
											"end": 7109,
											"name": "tag",
											"source": 23,
											"value": "251"
										},
										{
											"begin": 6950,
											"end": 7109,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7044,
											"end": 7048,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7070,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7059,
											"end": 7070,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7059,
											"end": 7070,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7097,
											"end": 7101,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7092,
											"end": 7095,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7088,
											"end": 7102,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7080,
											"end": 7102,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7080,
											"end": 7102,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6950,
											"end": 7109,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6950,
											"end": 7109,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6950,
											"end": 7109,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6950,
											"end": 7109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7115,
											"end": 7223,
											"name": "tag",
											"source": 23,
											"value": "252"
										},
										{
											"begin": 7115,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7192,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "355"
										},
										{
											"begin": 7210,
											"end": 7215,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7192,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "237"
										},
										{
											"begin": 7192,
											"end": 7216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7192,
											"end": 7216,
											"name": "tag",
											"source": 23,
											"value": "355"
										},
										{
											"begin": 7192,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7187,
											"end": 7190,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7180,
											"end": 7217,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7115,
											"end": 7223,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7115,
											"end": 7223,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7115,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7229,
											"end": 7337,
											"name": "tag",
											"source": 23,
											"value": "253"
										},
										{
											"begin": 7229,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7306,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "357"
										},
										{
											"begin": 7324,
											"end": 7329,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7306,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "240"
										},
										{
											"begin": 7306,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7306,
											"end": 7330,
											"name": "tag",
											"source": 23,
											"value": "357"
										},
										{
											"begin": 7306,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7301,
											"end": 7304,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7294,
											"end": 7331,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7229,
											"end": 7337,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7229,
											"end": 7337,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7229,
											"end": 7337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7409,
											"end": 7931,
											"name": "tag",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 7409,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7550,
											"end": 7554,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 7545,
											"end": 7548,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7541,
											"end": 7555,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7646,
											"end": 7650,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7639,
											"end": 7644,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7635,
											"end": 7651,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7629,
											"end": 7652,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 7665,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "359"
										},
										{
											"begin": 7722,
											"end": 7726,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7720,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 7713,
											"end": 7727,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7699,
											"end": 7711,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7665,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "252"
										},
										{
											"begin": 7665,
											"end": 7728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7665,
											"end": 7728,
											"name": "tag",
											"source": 23,
											"value": "359"
										},
										{
											"begin": 7665,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7565,
											"end": 7738,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7832,
											"end": 7836,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7825,
											"end": 7830,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7821,
											"end": 7837,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7815,
											"end": 7838,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 7851,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "360"
										},
										{
											"begin": 7908,
											"end": 7912,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7906,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 7899,
											"end": 7913,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7885,
											"end": 7897,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7851,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "253"
										},
										{
											"begin": 7851,
											"end": 7914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7851,
											"end": 7914,
											"name": "tag",
											"source": 23,
											"value": "360"
										},
										{
											"begin": 7851,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7748,
											"end": 7924,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7519,
											"end": 7931,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7409,
											"end": 7931,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7409,
											"end": 7931,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7409,
											"end": 7931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7937,
											"end": 8224,
											"name": "tag",
											"source": 23,
											"value": "255"
										},
										{
											"begin": 7937,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "362"
										},
										{
											"begin": 8177,
											"end": 8180,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8081,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 8081,
											"end": 8181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8081,
											"end": 8181,
											"name": "tag",
											"source": 23,
											"value": "362"
										},
										{
											"begin": 8081,
											"end": 8181,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8213,
											"end": 8217,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 8208,
											"end": 8211,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8204,
											"end": 8218,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8190,
											"end": 8218,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8190,
											"end": 8218,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7937,
											"end": 8224,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 7937,
											"end": 8224,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7937,
											"end": 8224,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7937,
											"end": 8224,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7937,
											"end": 8224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8230,
											"end": 8370,
											"name": "tag",
											"source": 23,
											"value": "256"
										},
										{
											"begin": 8230,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8327,
											"end": 8331,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8359,
											"end": 8363,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8357,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8342,
											"end": 8364,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8342,
											"end": 8364,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8230,
											"end": 8370,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8230,
											"end": 8370,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8230,
											"end": 8370,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8230,
											"end": 8370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8446,
											"end": 9394,
											"name": "tag",
											"source": 23,
											"value": "257"
										},
										{
											"begin": 8446,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8619,
											"end": 8622,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8648,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "365"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8648,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "249"
										},
										{
											"begin": 8648,
											"end": 8729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8648,
											"end": 8729,
											"name": "tag",
											"source": 23,
											"value": "365"
										},
										{
											"begin": 8648,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8745,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "366"
										},
										{
											"begin": 8851,
											"end": 8857,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8846,
											"end": 8849,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 8745,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "250"
										},
										{
											"begin": 8745,
											"end": 8858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8745,
											"end": 8858,
											"name": "tag",
											"source": 23,
											"value": "366"
										},
										{
											"begin": 8745,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8738,
											"end": 8858,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 8738,
											"end": 8858,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8882,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "367"
										},
										{
											"begin": 8959,
											"end": 8964,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8882,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "251"
										},
										{
											"begin": 8882,
											"end": 8965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8882,
											"end": 8965,
											"name": "tag",
											"source": 23,
											"value": "367"
										},
										{
											"begin": 8882,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8988,
											"end": 8995,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 9019,
											"end": 9020,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9004,
											"end": 9369,
											"name": "tag",
											"source": 23,
											"value": "368"
										},
										{
											"begin": 9004,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9029,
											"end": 9035,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 9026,
											"end": 9027,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9023,
											"end": 9036,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 9004,
											"end": 9369,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 9004,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "370"
										},
										{
											"begin": 9004,
											"end": 9369,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 9105,
											"end": 9111,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9099,
											"end": 9112,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 9132,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "371"
										},
										{
											"begin": 9245,
											"end": 9248,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 9230,
											"end": 9243,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9132,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "255"
										},
										{
											"begin": 9132,
											"end": 9249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9132,
											"end": 9249,
											"name": "tag",
											"source": 23,
											"value": "371"
										},
										{
											"begin": 9132,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9125,
											"end": 9249,
											"name": "SWAP8",
											"source": 23
										},
										{
											"begin": 9125,
											"end": 9249,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9272,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "372"
										},
										{
											"begin": 9352,
											"end": 9358,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 9272,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "256"
										},
										{
											"begin": 9272,
											"end": 9359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9272,
											"end": 9359,
											"name": "tag",
											"source": 23,
											"value": "372"
										},
										{
											"begin": 9272,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9262,
											"end": 9359,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 9262,
											"end": 9359,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9064,
											"end": 9369,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 9048,
											"end": 9049,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9044,
											"end": 9053,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9039,
											"end": 9053,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9039,
											"end": 9053,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9004,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "368"
										},
										{
											"begin": 9004,
											"end": 9369,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9004,
											"end": 9369,
											"name": "tag",
											"source": 23,
											"value": "370"
										},
										{
											"begin": 9004,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9008,
											"end": 9022,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9385,
											"end": 9388,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 9378,
											"end": 9388,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 9378,
											"end": 9388,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8624,
											"end": 9394,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8624,
											"end": 9394,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8624,
											"end": 9394,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8446,
											"end": 9394,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 8446,
											"end": 9394,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8446,
											"end": 9394,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8446,
											"end": 9394,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8446,
											"end": 9394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9400,
											"end": 9881,
											"name": "tag",
											"source": 23,
											"value": "99"
										},
										{
											"begin": 9400,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9597,
											"end": 9601,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 9624,
											"end": 9633,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9612,
											"end": 9638,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9612,
											"end": 9638,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9684,
											"end": 9693,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9678,
											"end": 9682,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9674,
											"end": 9694,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 9670,
											"end": 9671,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9659,
											"end": 9668,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 9655,
											"end": 9672,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9648,
											"end": 9695,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 9712,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "374"
										},
										{
											"begin": 9869,
											"end": 9873,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9860,
											"end": 9866,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 9712,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "257"
										},
										{
											"begin": 9712,
											"end": 9874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9712,
											"end": 9874,
											"name": "tag",
											"source": 23,
											"value": "374"
										},
										{
											"begin": 9712,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9704,
											"end": 9874,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9704,
											"end": 9874,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9400,
											"end": 9881,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 9400,
											"end": 9881,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9400,
											"end": 9881,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9400,
											"end": 9881,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9400,
											"end": 9881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9887,
											"end": 10067,
											"name": "tag",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 9887,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9935,
											"end": 10012,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9932,
											"end": 9933,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9925,
											"end": 10013,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 10032,
											"end": 10036,
											"name": "PUSH",
											"source": 23,
											"value": "22"
										},
										{
											"begin": 10029,
											"end": 10030,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 10022,
											"end": 10037,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 10056,
											"end": 10060,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 10053,
											"end": 10054,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10046,
											"end": 10061,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 10073,
											"end": 10393,
											"name": "tag",
											"source": 23,
											"value": "105"
										},
										{
											"begin": 10073,
											"end": 10393,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10117,
											"end": 10123,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10154,
											"end": 10155,
											"name": "PUSH",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 10148,
											"end": 10152,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10144,
											"end": 10156,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10134,
											"end": 10156,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10201,
											"end": 10202,
											"name": "PUSH",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 10195,
											"end": 10199,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10191,
											"end": 10203,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 10222,
											"end": 10240,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 10212,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "377"
										},
										{
											"begin": 10212,
											"end": 10293,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 10278,
											"end": 10282,
											"name": "PUSH",
											"source": 23,
											"value": "7F"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10266,
											"end": 10283,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 10256,
											"end": 10283,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10256,
											"end": 10283,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10212,
											"end": 10293,
											"name": "tag",
											"source": 23,
											"value": "377"
										},
										{
											"begin": 10212,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10340,
											"end": 10342,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 10332,
											"end": 10338,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10329,
											"end": 10343,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 10309,
											"end": 10327,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 10306,
											"end": 10344,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 10303,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "378"
										},
										{
											"begin": 10303,
											"end": 10387,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "379"
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 10359,
											"end": 10377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "tag",
											"source": 23,
											"value": "379"
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10303,
											"end": 10387,
											"name": "tag",
											"source": 23,
											"value": "378"
										},
										{
											"begin": 10303,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10124,
											"end": 10393,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10073,
											"end": 10393,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10073,
											"end": 10393,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10073,
											"end": 10393,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10073,
											"end": 10393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10399,
											"end": 10571,
											"name": "tag",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 10399,
											"end": 10571,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10539,
											"end": 10563,
											"name": "PUSH",
											"source": 23,
											"value": "5465616D20746F6B656E7320617265206C6F636B656400000000000000000000"
										},
										{
											"begin": 10535,
											"end": 10536,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10527,
											"end": 10533,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10523,
											"end": 10537,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10516,
											"end": 10564,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 10399,
											"end": 10571,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10399,
											"end": 10571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10577,
											"end": 10943,
											"name": "tag",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 10577,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10719,
											"end": 10722,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10740,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "382"
										},
										{
											"begin": 10804,
											"end": 10806,
											"name": "PUSH",
											"source": 23,
											"value": "16"
										},
										{
											"begin": 10799,
											"end": 10802,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 10740,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "229"
										},
										{
											"begin": 10740,
											"end": 10807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10740,
											"end": 10807,
											"name": "tag",
											"source": 23,
											"value": "382"
										},
										{
											"begin": 10740,
											"end": 10807,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10733,
											"end": 10807,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10733,
											"end": 10807,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10816,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "383"
										},
										{
											"begin": 10905,
											"end": 10908,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10816,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 10816,
											"end": 10909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10816,
											"end": 10909,
											"name": "tag",
											"source": 23,
											"value": "383"
										},
										{
											"begin": 10816,
											"end": 10909,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10934,
											"end": 10936,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 10929,
											"end": 10932,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10925,
											"end": 10937,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10918,
											"end": 10937,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10918,
											"end": 10937,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10577,
											"end": 10943,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10577,
											"end": 10943,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10577,
											"end": 10943,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10577,
											"end": 10943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10949,
											"end": 11368,
											"name": "tag",
											"source": 23,
											"value": "122"
										},
										{
											"begin": 10949,
											"end": 11368,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11115,
											"end": 11119,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11155,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 11142,
											"end": 11151,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11130,
											"end": 11156,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11130,
											"end": 11156,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11202,
											"end": 11211,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11196,
											"end": 11200,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11192,
											"end": 11212,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 11188,
											"end": 11189,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11186,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 11173,
											"end": 11190,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11166,
											"end": 11213,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 11230,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "385"
										},
										{
											"begin": 11356,
											"end": 11360,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11230,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 11230,
											"end": 11361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11230,
											"end": 11361,
											"name": "tag",
											"source": 23,
											"value": "385"
										},
										{
											"begin": 11230,
											"end": 11361,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11222,
											"end": 11361,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11222,
											"end": 11361,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10949,
											"end": 11368,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10949,
											"end": 11368,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10949,
											"end": 11368,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10949,
											"end": 11368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11374,
											"end": 11543,
											"name": "tag",
											"source": 23,
											"value": "261"
										},
										{
											"begin": 11374,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11514,
											"end": 11535,
											"name": "PUSH",
											"source": 23,
											"value": "496E646578206F7574206F6620626F756E647300000000000000000000000000"
										},
										{
											"begin": 11510,
											"end": 11511,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11502,
											"end": 11508,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11498,
											"end": 11512,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11491,
											"end": 11536,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 11374,
											"end": 11543,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11374,
											"end": 11543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11549,
											"end": 11915,
											"name": "tag",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 11549,
											"end": 11915,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11691,
											"end": 11694,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11712,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "388"
										},
										{
											"begin": 11776,
											"end": 11778,
											"name": "PUSH",
											"source": 23,
											"value": "13"
										},
										{
											"begin": 11771,
											"end": 11774,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 11712,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "229"
										},
										{
											"begin": 11712,
											"end": 11779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11712,
											"end": 11779,
											"name": "tag",
											"source": 23,
											"value": "388"
										},
										{
											"begin": 11712,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11705,
											"end": 11779,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11705,
											"end": 11779,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11788,
											"end": 11881,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "389"
										},
										{
											"begin": 11877,
											"end": 11880,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11788,
											"end": 11881,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "261"
										},
										{
											"begin": 11788,
											"end": 11881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11788,
											"end": 11881,
											"name": "tag",
											"source": 23,
											"value": "389"
										},
										{
											"begin": 11788,
											"end": 11881,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11906,
											"end": 11908,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 11901,
											"end": 11904,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11897,
											"end": 11909,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11890,
											"end": 11909,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11890,
											"end": 11909,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11549,
											"end": 11915,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11549,
											"end": 11915,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11549,
											"end": 11915,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11549,
											"end": 11915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11921,
											"end": 12340,
											"name": "tag",
											"source": 23,
											"value": "137"
										},
										{
											"begin": 11921,
											"end": 12340,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12087,
											"end": 12091,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12127,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 12114,
											"end": 12123,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12110,
											"end": 12128,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12102,
											"end": 12128,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12102,
											"end": 12128,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12174,
											"end": 12183,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12168,
											"end": 12172,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12164,
											"end": 12184,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 12160,
											"end": 12161,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12149,
											"end": 12158,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 12145,
											"end": 12162,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12138,
											"end": 12185,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 12202,
											"end": 12333,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "391"
										},
										{
											"begin": 12328,
											"end": 12332,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12202,
											"end": 12333,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 12202,
											"end": 12333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12202,
											"end": 12333,
											"name": "tag",
											"source": 23,
											"value": "391"
										},
										{
											"begin": 12202,
											"end": 12333,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12194,
											"end": 12333,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12194,
											"end": 12333,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11921,
											"end": 12340,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11921,
											"end": 12340,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11921,
											"end": 12340,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11921,
											"end": 12340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12346,
											"end": 12526,
											"name": "tag",
											"source": 23,
											"value": "140"
										},
										{
											"begin": 12346,
											"end": 12526,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12394,
											"end": 12471,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12391,
											"end": 12392,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12472,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 12491,
											"end": 12495,
											"name": "PUSH",
											"source": 23,
											"value": "32"
										},
										{
											"begin": 12488,
											"end": 12489,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 12481,
											"end": 12496,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 12515,
											"end": 12519,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 12512,
											"end": 12513,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12505,
											"end": 12520,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 12532,
											"end": 12654,
											"name": "tag",
											"source": 23,
											"value": "263"
										},
										{
											"begin": 12532,
											"end": 12654,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12605,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "394"
										},
										{
											"begin": 12623,
											"end": 12628,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12605,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "236"
										},
										{
											"begin": 12605,
											"end": 12629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12605,
											"end": 12629,
											"name": "tag",
											"source": 23,
											"value": "394"
										},
										{
											"begin": 12605,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12598,
											"end": 12603,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12595,
											"end": 12630,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 12585,
											"end": 12648,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "395"
										},
										{
											"begin": 12585,
											"end": 12648,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 12644,
											"end": 12645,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12641,
											"end": 12642,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12634,
											"end": 12646,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 12585,
											"end": 12648,
											"name": "tag",
											"source": 23,
											"value": "395"
										},
										{
											"begin": 12585,
											"end": 12648,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12532,
											"end": 12654,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12532,
											"end": 12654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12660,
											"end": 12803,
											"name": "tag",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 12660,
											"end": 12803,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12717,
											"end": 12722,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12748,
											"end": 12754,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12742,
											"end": 12755,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 12733,
											"end": 12755,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12733,
											"end": 12755,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12764,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "397"
										},
										{
											"begin": 12791,
											"end": 12796,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12764,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "263"
										},
										{
											"begin": 12764,
											"end": 12797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12764,
											"end": 12797,
											"name": "tag",
											"source": 23,
											"value": "397"
										},
										{
											"begin": 12764,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12660,
											"end": 12803,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 12660,
											"end": 12803,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12660,
											"end": 12803,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12660,
											"end": 12803,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12660,
											"end": 12803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12809,
											"end": 12899,
											"name": "tag",
											"source": 23,
											"value": "265"
										},
										{
											"begin": 12809,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12844,
											"end": 12851,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12887,
											"end": 12892,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12884,
											"end": 12885,
											"name": "PUSH",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 12873,
											"end": 12893,
											"name": "SIGNEXTEND",
											"source": 23
										},
										{
											"begin": 12862,
											"end": 12893,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12862,
											"end": 12893,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12809,
											"end": 12899,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12809,
											"end": 12899,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12809,
											"end": 12899,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12809,
											"end": 12899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12905,
											"end": 13023,
											"name": "tag",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 12905,
											"end": 13023,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12976,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "400"
										},
										{
											"begin": 12992,
											"end": 12997,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12976,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "265"
										},
										{
											"begin": 12976,
											"end": 12998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12976,
											"end": 12998,
											"name": "tag",
											"source": 23,
											"value": "400"
										},
										{
											"begin": 12976,
											"end": 12998,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12969,
											"end": 12974,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12966,
											"end": 12999,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 12956,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "401"
										},
										{
											"begin": 12956,
											"end": 13017,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 13013,
											"end": 13014,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13010,
											"end": 13011,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13003,
											"end": 13015,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 12956,
											"end": 13017,
											"name": "tag",
											"source": 23,
											"value": "401"
										},
										{
											"begin": 12956,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12905,
											"end": 13023,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12905,
											"end": 13023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13029,
											"end": 13168,
											"name": "tag",
											"source": 23,
											"value": "267"
										},
										{
											"begin": 13029,
											"end": 13168,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13084,
											"end": 13089,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13115,
											"end": 13121,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13109,
											"end": 13122,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 13100,
											"end": 13122,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13100,
											"end": 13122,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "403"
										},
										{
											"begin": 13156,
											"end": 13161,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 13131,
											"end": 13162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "tag",
											"source": 23,
											"value": "403"
										},
										{
											"begin": 13131,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13029,
											"end": 13168,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 13029,
											"end": 13168,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13029,
											"end": 13168,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13029,
											"end": 13168,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13029,
											"end": 13168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13174,
											"end": 13263,
											"name": "tag",
											"source": 23,
											"value": "268"
										},
										{
											"begin": 13174,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13210,
											"end": 13217,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13250,
											"end": 13256,
											"name": "PUSH",
											"source": 23,
											"value": "FFFF"
										},
										{
											"begin": 13243,
											"end": 13248,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13239,
											"end": 13257,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 13228,
											"end": 13257,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13228,
											"end": 13257,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13174,
											"end": 13263,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13174,
											"end": 13263,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13174,
											"end": 13263,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13174,
											"end": 13263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13269,
											"end": 13389,
											"name": "tag",
											"source": 23,
											"value": "269"
										},
										{
											"begin": 13269,
											"end": 13389,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13341,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "406"
										},
										{
											"begin": 13358,
											"end": 13363,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13341,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "268"
										},
										{
											"begin": 13341,
											"end": 13364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13341,
											"end": 13364,
											"name": "tag",
											"source": 23,
											"value": "406"
										},
										{
											"begin": 13341,
											"end": 13364,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13334,
											"end": 13339,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13331,
											"end": 13365,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 13321,
											"end": 13383,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "407"
										},
										{
											"begin": 13321,
											"end": 13383,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 13379,
											"end": 13380,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13376,
											"end": 13377,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13369,
											"end": 13381,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 13321,
											"end": 13383,
											"name": "tag",
											"source": 23,
											"value": "407"
										},
										{
											"begin": 13321,
											"end": 13383,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13269,
											"end": 13389,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13269,
											"end": 13389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13395,
											"end": 13536,
											"name": "tag",
											"source": 23,
											"value": "270"
										},
										{
											"begin": 13395,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13451,
											"end": 13456,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13482,
											"end": 13488,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13476,
											"end": 13489,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 13467,
											"end": 13489,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13467,
											"end": 13489,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13498,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "409"
										},
										{
											"begin": 13524,
											"end": 13529,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13498,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "269"
										},
										{
											"begin": 13498,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13498,
											"end": 13530,
											"name": "tag",
											"source": 23,
											"value": "409"
										},
										{
											"begin": 13498,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13395,
											"end": 13536,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 13395,
											"end": 13536,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13395,
											"end": 13536,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13395,
											"end": 13536,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13395,
											"end": 13536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13542,
											"end": 13660,
											"name": "tag",
											"source": 23,
											"value": "271"
										},
										{
											"begin": 13542,
											"end": 13660,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13613,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "411"
										},
										{
											"begin": 13629,
											"end": 13634,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13613,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "246"
										},
										{
											"begin": 13613,
											"end": 13635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13613,
											"end": 13635,
											"name": "tag",
											"source": 23,
											"value": "411"
										},
										{
											"begin": 13613,
											"end": 13635,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13606,
											"end": 13611,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13603,
											"end": 13636,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 13593,
											"end": 13654,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "412"
										},
										{
											"begin": 13593,
											"end": 13654,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 13650,
											"end": 13651,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13647,
											"end": 13648,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13640,
											"end": 13652,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 13593,
											"end": 13654,
											"name": "tag",
											"source": 23,
											"value": "412"
										},
										{
											"begin": 13593,
											"end": 13654,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13542,
											"end": 13660,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13542,
											"end": 13660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13666,
											"end": 13805,
											"name": "tag",
											"source": 23,
											"value": "272"
										},
										{
											"begin": 13666,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13721,
											"end": 13726,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13752,
											"end": 13758,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13746,
											"end": 13759,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 13737,
											"end": 13759,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13737,
											"end": 13759,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13768,
											"end": 13799,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "414"
										},
										{
											"begin": 13793,
											"end": 13798,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13768,
											"end": 13799,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "271"
										},
										{
											"begin": 13768,
											"end": 13799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13768,
											"end": 13799,
											"name": "tag",
											"source": 23,
											"value": "414"
										},
										{
											"begin": 13768,
											"end": 13799,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13666,
											"end": 13805,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 13666,
											"end": 13805,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13666,
											"end": 13805,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13666,
											"end": 13805,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13666,
											"end": 13805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13811,
											"end": 13927,
											"name": "tag",
											"source": 23,
											"value": "273"
										},
										{
											"begin": 13811,
											"end": 13927,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13881,
											"end": 13902,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "416"
										},
										{
											"begin": 13896,
											"end": 13901,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13881,
											"end": 13902,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "243"
										},
										{
											"begin": 13881,
											"end": 13902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13881,
											"end": 13902,
											"name": "tag",
											"source": 23,
											"value": "416"
										},
										{
											"begin": 13881,
											"end": 13902,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13871,
											"end": 13903,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 13861,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "417"
										},
										{
											"begin": 13861,
											"end": 13921,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 13917,
											"end": 13918,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13914,
											"end": 13915,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13907,
											"end": 13919,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 13861,
											"end": 13921,
											"name": "tag",
											"source": 23,
											"value": "417"
										},
										{
											"begin": 13861,
											"end": 13921,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13811,
											"end": 13927,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13811,
											"end": 13927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13933,
											"end": 14070,
											"name": "tag",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 13933,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13987,
											"end": 13992,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14018,
											"end": 14024,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14012,
											"end": 14025,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 14003,
											"end": 14025,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14003,
											"end": 14025,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14034,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "419"
										},
										{
											"begin": 14058,
											"end": 14063,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14034,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "273"
										},
										{
											"begin": 14034,
											"end": 14064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14034,
											"end": 14064,
											"name": "tag",
											"source": 23,
											"value": "419"
										},
										{
											"begin": 14034,
											"end": 14064,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13933,
											"end": 14070,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 13933,
											"end": 14070,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13933,
											"end": 14070,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13933,
											"end": 14070,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13933,
											"end": 14070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "tag",
											"source": 23,
											"value": "162"
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14190,
											"end": 14196,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14198,
											"end": 14204,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14206,
											"end": 14212,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14214,
											"end": 14220,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14222,
											"end": 14228,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14230,
											"end": 14236,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14244,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14287,
											"end": 14290,
											"name": "PUSH",
											"source": 23,
											"value": "E0"
										},
										{
											"begin": 14275,
											"end": 14284,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 14266,
											"end": 14273,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 14262,
											"end": 14285,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 14258,
											"end": 14291,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 14255,
											"end": 14375,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 14255,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "421"
										},
										{
											"begin": 14255,
											"end": 14375,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 14294,
											"end": 14373,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "422"
										},
										{
											"begin": 14294,
											"end": 14373,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "234"
										},
										{
											"begin": 14294,
											"end": 14373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14294,
											"end": 14373,
											"name": "tag",
											"source": 23,
											"value": "422"
										},
										{
											"begin": 14294,
											"end": 14373,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14255,
											"end": 14375,
											"name": "tag",
											"source": 23,
											"value": "421"
										},
										{
											"begin": 14255,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14414,
											"end": 14415,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14439,
											"end": 14503,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "423"
										},
										{
											"begin": 14495,
											"end": 14502,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 14486,
											"end": 14492,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14475,
											"end": 14484,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 14471,
											"end": 14493,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14439,
											"end": 14503,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 14439,
											"end": 14503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14439,
											"end": 14503,
											"name": "tag",
											"source": 23,
											"value": "423"
										},
										{
											"begin": 14439,
											"end": 14503,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14429,
											"end": 14503,
											"name": "SWAP8",
											"source": 23
										},
										{
											"begin": 14429,
											"end": 14503,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14385,
											"end": 14513,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14552,
											"end": 14554,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 14578,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "424"
										},
										{
											"begin": 14632,
											"end": 14639,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 14623,
											"end": 14629,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14612,
											"end": 14621,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 14608,
											"end": 14630,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14578,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "267"
										},
										{
											"begin": 14578,
											"end": 14640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14578,
											"end": 14640,
											"name": "tag",
											"source": 23,
											"value": "424"
										},
										{
											"begin": 14578,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14568,
											"end": 14640,
											"name": "SWAP7",
											"source": 23
										},
										{
											"begin": 14568,
											"end": 14640,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14523,
											"end": 14650,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14689,
											"end": 14691,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 14715,
											"end": 14778,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "425"
										},
										{
											"begin": 14770,
											"end": 14777,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 14761,
											"end": 14767,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14750,
											"end": 14759,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 14746,
											"end": 14768,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14715,
											"end": 14778,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "270"
										},
										{
											"begin": 14715,
											"end": 14778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14715,
											"end": 14778,
											"name": "tag",
											"source": 23,
											"value": "425"
										},
										{
											"begin": 14715,
											"end": 14778,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14705,
											"end": 14778,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 14705,
											"end": 14778,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14660,
											"end": 14788,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14827,
											"end": 14829,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 14853,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "426"
										},
										{
											"begin": 14908,
											"end": 14915,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 14899,
											"end": 14905,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14888,
											"end": 14897,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 14884,
											"end": 14906,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14853,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "270"
										},
										{
											"begin": 14853,
											"end": 14916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14853,
											"end": 14916,
											"name": "tag",
											"source": 23,
											"value": "426"
										},
										{
											"begin": 14853,
											"end": 14916,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14843,
											"end": 14916,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 14843,
											"end": 14916,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14798,
											"end": 14926,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14965,
											"end": 14968,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 14992,
											"end": 15055,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "427"
										},
										{
											"begin": 15047,
											"end": 15054,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 15038,
											"end": 15044,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15027,
											"end": 15036,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 15023,
											"end": 15045,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14992,
											"end": 15055,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "270"
										},
										{
											"begin": 14992,
											"end": 15055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14992,
											"end": 15055,
											"name": "tag",
											"source": 23,
											"value": "427"
										},
										{
											"begin": 14992,
											"end": 15055,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14982,
											"end": 15055,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 14982,
											"end": 15055,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14936,
											"end": 15065,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15104,
											"end": 15107,
											"name": "PUSH",
											"source": 23,
											"value": "A0"
										},
										{
											"begin": 15131,
											"end": 15193,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "428"
										},
										{
											"begin": 15185,
											"end": 15192,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 15176,
											"end": 15182,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15165,
											"end": 15174,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 15161,
											"end": 15183,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15131,
											"end": 15193,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "272"
										},
										{
											"begin": 15131,
											"end": 15193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15131,
											"end": 15193,
											"name": "tag",
											"source": 23,
											"value": "428"
										},
										{
											"begin": 15131,
											"end": 15193,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15121,
											"end": 15193,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 15121,
											"end": 15193,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15075,
											"end": 15203,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15242,
											"end": 15245,
											"name": "PUSH",
											"source": 23,
											"value": "C0"
										},
										{
											"begin": 15269,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "429"
										},
										{
											"begin": 15322,
											"end": 15329,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 15313,
											"end": 15319,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15302,
											"end": 15311,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 15298,
											"end": 15320,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15269,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 15269,
											"end": 15330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15269,
											"end": 15330,
											"name": "tag",
											"source": 23,
											"value": "429"
										},
										{
											"begin": 15269,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15259,
											"end": 15330,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15259,
											"end": 15330,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15213,
											"end": 15340,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "SWAP9",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "SWAP8",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14076,
											"end": 15347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15353,
											"end": 15533,
											"name": "tag",
											"source": 23,
											"value": "275"
										},
										{
											"begin": 15353,
											"end": 15533,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15401,
											"end": 15478,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15398,
											"end": 15399,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15391,
											"end": 15479,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 15498,
											"end": 15502,
											"name": "PUSH",
											"source": 23,
											"value": "11"
										},
										{
											"begin": 15495,
											"end": 15496,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 15488,
											"end": 15503,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 15522,
											"end": 15526,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 15519,
											"end": 15520,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15512,
											"end": 15527,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 15539,
											"end": 15949,
											"name": "tag",
											"source": 23,
											"value": "164"
										},
										{
											"begin": 15539,
											"end": 15949,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15579,
											"end": 15586,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15602,
											"end": 15622,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "432"
										},
										{
											"begin": 15620,
											"end": 15621,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15602,
											"end": 15622,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "240"
										},
										{
											"begin": 15602,
											"end": 15622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15602,
											"end": 15622,
											"name": "tag",
											"source": 23,
											"value": "432"
										},
										{
											"begin": 15602,
											"end": 15622,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15597,
											"end": 15622,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15597,
											"end": 15622,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15636,
											"end": 15656,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "433"
										},
										{
											"begin": 15654,
											"end": 15655,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 15636,
											"end": 15656,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "240"
										},
										{
											"begin": 15636,
											"end": 15656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15636,
											"end": 15656,
											"name": "tag",
											"source": 23,
											"value": "433"
										},
										{
											"begin": 15636,
											"end": 15656,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15631,
											"end": 15656,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 15631,
											"end": 15656,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15691,
											"end": 15692,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15688,
											"end": 15689,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15684,
											"end": 15693,
											"name": "MUL",
											"source": 23
										},
										{
											"begin": 15713,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "434"
										},
										{
											"begin": 15731,
											"end": 15742,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 15713,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "240"
										},
										{
											"begin": 15713,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15713,
											"end": 15743,
											"name": "tag",
											"source": 23,
											"value": "434"
										},
										{
											"begin": 15713,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15702,
											"end": 15743,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15702,
											"end": 15743,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15892,
											"end": 15893,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15883,
											"end": 15890,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15879,
											"end": 15894,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 15876,
											"end": 15877,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 15873,
											"end": 15895,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 15853,
											"end": 15854,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 15846,
											"end": 15855,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 15826,
											"end": 15909,
											"name": "OR",
											"source": 23
										},
										{
											"begin": 15803,
											"end": 15942,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "435"
										},
										{
											"begin": 15803,
											"end": 15942,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 15922,
											"end": 15940,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "436"
										},
										{
											"begin": 15922,
											"end": 15940,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "275"
										},
										{
											"begin": 15922,
											"end": 15940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15922,
											"end": 15940,
											"name": "tag",
											"source": 23,
											"value": "436"
										},
										{
											"begin": 15922,
											"end": 15940,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15803,
											"end": 15942,
											"name": "tag",
											"source": 23,
											"value": "435"
										},
										{
											"begin": 15803,
											"end": 15942,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15587,
											"end": 15949,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15539,
											"end": 15949,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 15539,
											"end": 15949,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15539,
											"end": 15949,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15539,
											"end": 15949,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15539,
											"end": 15949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15955,
											"end": 16135,
											"name": "tag",
											"source": 23,
											"value": "276"
										},
										{
											"begin": 15955,
											"end": 16135,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16003,
											"end": 16080,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16000,
											"end": 16001,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15993,
											"end": 16081,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 16100,
											"end": 16104,
											"name": "PUSH",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 16097,
											"end": 16098,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 16090,
											"end": 16105,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 16124,
											"end": 16128,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 16121,
											"end": 16122,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16114,
											"end": 16129,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 16141,
											"end": 16326,
											"name": "tag",
											"source": 23,
											"value": "166"
										},
										{
											"begin": 16141,
											"end": 16326,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16181,
											"end": 16182,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16198,
											"end": 16218,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "439"
										},
										{
											"begin": 16216,
											"end": 16217,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16198,
											"end": 16218,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "240"
										},
										{
											"begin": 16198,
											"end": 16218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16198,
											"end": 16218,
											"name": "tag",
											"source": 23,
											"value": "439"
										},
										{
											"begin": 16198,
											"end": 16218,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16193,
											"end": 16218,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16193,
											"end": 16218,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16232,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "440"
										},
										{
											"begin": 16250,
											"end": 16251,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 16232,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "240"
										},
										{
											"begin": 16232,
											"end": 16252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16232,
											"end": 16252,
											"name": "tag",
											"source": 23,
											"value": "440"
										},
										{
											"begin": 16232,
											"end": 16252,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16227,
											"end": 16252,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 16227,
											"end": 16252,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16271,
											"end": 16272,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16261,
											"end": 16296,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "441"
										},
										{
											"begin": 16261,
											"end": 16296,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 16276,
											"end": 16294,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "442"
										},
										{
											"begin": 16276,
											"end": 16294,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "276"
										},
										{
											"begin": 16276,
											"end": 16294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16276,
											"end": 16294,
											"name": "tag",
											"source": 23,
											"value": "442"
										},
										{
											"begin": 16276,
											"end": 16294,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16261,
											"end": 16296,
											"name": "tag",
											"source": 23,
											"value": "441"
										},
										{
											"begin": 16261,
											"end": 16296,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16318,
											"end": 16319,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16315,
											"end": 16316,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16311,
											"end": 16320,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 16306,
											"end": 16320,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16306,
											"end": 16320,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16141,
											"end": 16326,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 16141,
											"end": 16326,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16141,
											"end": 16326,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16141,
											"end": 16326,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16141,
											"end": 16326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16332,
											"end": 16774,
											"name": "tag",
											"source": 23,
											"value": "209"
										},
										{
											"begin": 16332,
											"end": 16774,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16481,
											"end": 16485,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16519,
											"end": 16521,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 16508,
											"end": 16517,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16504,
											"end": 16522,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16532,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "444"
										},
										{
											"begin": 16600,
											"end": 16601,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16589,
											"end": 16598,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 16585,
											"end": 16602,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16576,
											"end": 16582,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 16532,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "248"
										},
										{
											"begin": 16532,
											"end": 16603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16532,
											"end": 16603,
											"name": "tag",
											"source": 23,
											"value": "444"
										},
										{
											"begin": 16532,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16613,
											"end": 16685,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "445"
										},
										{
											"begin": 16681,
											"end": 16683,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 16670,
											"end": 16679,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 16666,
											"end": 16684,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16657,
											"end": 16663,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 16613,
											"end": 16685,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "245"
										},
										{
											"begin": 16613,
											"end": 16685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16613,
											"end": 16685,
											"name": "tag",
											"source": 23,
											"value": "445"
										},
										{
											"begin": 16613,
											"end": 16685,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16695,
											"end": 16767,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "446"
										},
										{
											"begin": 16763,
											"end": 16765,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 16752,
											"end": 16761,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 16748,
											"end": 16766,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16739,
											"end": 16745,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 16695,
											"end": 16767,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "245"
										},
										{
											"begin": 16695,
											"end": 16767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16695,
											"end": 16767,
											"name": "tag",
											"source": 23,
											"value": "446"
										},
										{
											"begin": 16695,
											"end": 16767,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16332,
											"end": 16774,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 16332,
											"end": 16774,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 16332,
											"end": 16774,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16332,
											"end": 16774,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16332,
											"end": 16774,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16332,
											"end": 16774,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16332,
											"end": 16774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16780,
											"end": 16971,
											"name": "tag",
											"source": 23,
											"value": "221"
										},
										{
											"begin": 16780,
											"end": 16971,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16820,
											"end": 16823,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16839,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "448"
										},
										{
											"begin": 16857,
											"end": 16858,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16839,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "240"
										},
										{
											"begin": 16839,
											"end": 16859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16839,
											"end": 16859,
											"name": "tag",
											"source": 23,
											"value": "448"
										},
										{
											"begin": 16839,
											"end": 16859,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16834,
											"end": 16859,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16834,
											"end": 16859,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16873,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "449"
										},
										{
											"begin": 16891,
											"end": 16892,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 16873,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "240"
										},
										{
											"begin": 16873,
											"end": 16893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16873,
											"end": 16893,
											"name": "tag",
											"source": 23,
											"value": "449"
										},
										{
											"begin": 16873,
											"end": 16893,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16868,
											"end": 16893,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 16868,
											"end": 16893,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16916,
											"end": 16917,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16913,
											"end": 16914,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16909,
											"end": 16918,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16902,
											"end": 16918,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16902,
											"end": 16918,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16937,
											"end": 16940,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 16934,
											"end": 16935,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16931,
											"end": 16941,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 16928,
											"end": 16964,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 16928,
											"end": 16964,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "450"
										},
										{
											"begin": 16928,
											"end": 16964,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 16944,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "451"
										},
										{
											"begin": 16944,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "275"
										},
										{
											"begin": 16944,
											"end": 16962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16944,
											"end": 16962,
											"name": "tag",
											"source": 23,
											"value": "451"
										},
										{
											"begin": 16944,
											"end": 16962,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16928,
											"end": 16964,
											"name": "tag",
											"source": 23,
											"value": "450"
										},
										{
											"begin": 16928,
											"end": 16964,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16780,
											"end": 16971,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 16780,
											"end": 16971,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16780,
											"end": 16971,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16780,
											"end": 16971,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16780,
											"end": 16971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/CC/CCToken.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
								"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IERC721Permit.sol",
								"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/INonfungiblePositionManager.sol",
								"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryImmutableState.sol",
								"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryPayments.sol",
								"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPoolInitializer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TEAM_LOCK_PERIOD()": "35928998",
							"TOTAL_SUPPLY()": "902d55a5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getCurrentPrice()": "eb91d37e",
							"getTeamMember(uint256)": "88e56ec6",
							"getTeamMemberCount()": "19ca43ab",
							"getTeamMembers()": "efded147",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"teamLockedUntil()": "76ae9b2d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapPool()": "bdd3d825"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"investmentAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct CSYDToken.TeamMember[]\",\"name\":\"_teamMembers\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TEAM_LOCK_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTeamMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeamMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeamMembers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"investmentAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct CSYDToken.TeamMember[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamLockedUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CC/CCToken.sol\":\"CSYDToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xc8377a835980f99893bde57e8cf0ce76acb6b27348ef97bb433b9557b71d2eff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef1dd49fb9841fe7c372f218f9067d454a08a79e88d689eb9c6e4ab8ecd9ae0\",\"dweb:/ipfs/QmbbB2KeiExC6bejin37eFFPfQzag2wfVEyhjs31s94nhJ\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x088eccf105dd762b03e1ac4d8315ae784b68d4ff41428448bdbbbc9eb2a522e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0890d41520baa6df78216b1c1869b222256de8e56cd77760eeb9f640e143f55\",\"dweb:/ipfs/QmVZozkPfa4hRUrECiN7gqrxwz6UB5Gmzmbjg3gSuZSDXZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/CC/CCToken.sol\":{\"keccak256\":\"0x04029d35581e7cae77b5d3bce243d058d640b6981712e3791c4f766ae8805fa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d291a6b02170ca3ae42bd91b9544aba0c224f1030febd77421a38f2dbee3335\",\"dweb:/ipfs/QmPj1mVyYo4vmsDehnft5oSwwivSp388iQGrq3MGToogTT\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x5aad1745bddba11752c3962464a3b12e0af079310cc22d1f43f0388ae1aaf8db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://577fad916bfdfe89aadf2685322fec7562cb0ed87722923085213cd9f85d7b79\",\"dweb:/ipfs/QmSM3J6PjrAUyEoNbdhq1ECZLXczKdCTzZTBUieKHsBYEL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xa5606c6cebca0ce72e4764cf4807eaf7dec3a298249279ed24cb261b0719bd20\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://219eb9f4034d942bddd021f4b4c237e721f9845911acfa98c90b1c6be6dcdef7\",\"dweb:/ipfs/QmTyRqcmUna7PL2EMV3k7HnQCnNhQN3a3qKMyA9MME5ctc\"]},\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 825,
								"contract": "contracts/CC/CCToken.sol:CSYDToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 831,
								"contract": "contracts/CC/CCToken.sol:CSYDToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 833,
								"contract": "contracts/CC/CCToken.sol:CSYDToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 835,
								"contract": "contracts/CC/CCToken.sol:CSYDToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 837,
								"contract": "contracts/CC/CCToken.sol:CSYDToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 526,
								"contract": "contracts/CC/CCToken.sol:CSYDToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 217,
								"contract": "contracts/CC/CCToken.sol:CSYDToken",
								"label": "teamMembers",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(TeamMember)213_storage)dyn_storage"
							},
							{
								"astId": 219,
								"contract": "contracts/CC/CCToken.sol:CSYDToken",
								"label": "teamLockedUntil",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 221,
								"contract": "contracts/CC/CCToken.sol:CSYDToken",
								"label": "uniswapPool",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(TeamMember)213_storage)dyn_storage": {
								"base": "t_struct(TeamMember)213_storage",
								"encoding": "dynamic_array",
								"label": "struct CSYDToken.TeamMember[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TeamMember)213_storage": {
								"encoding": "inplace",
								"label": "struct CSYDToken.TeamMember",
								"members": [
									{
										"astId": 210,
										"contract": "contracts/CC/CCToken.sol:CSYDToken",
										"label": "memberAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 212,
										"contract": "contracts/CC/CCToken.sol:CSYDToken",
										"label": "investmentAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x5aad1745bddba11752c3962464a3b12e0af079310cc22d1f43f0388ae1aaf8db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://577fad916bfdfe89aadf2685322fec7562cb0ed87722923085213cd9f85d7b79\",\"dweb:/ipfs/QmSM3J6PjrAUyEoNbdhq1ECZLXczKdCTzZTBUieKHsBYEL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 825,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 831,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 833,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 835,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 837,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IERC721Permit.sol": {
				"IERC721Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721 with permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IERC721Permit.sol\":\"IERC721Permit\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							}
						},
						"notice": "Extension to ERC721 that includes a permit function for signature based approvals",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"WETH9()": "4aa4a4fc",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"factory()": "c45a0155",
							"getApproved(uint256)": "081812fc",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"positions(uint256)": "99fbab88",
							"refundETH()": "12210e8a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xc8377a835980f99893bde57e8cf0ce76acb6b27348ef97bb433b9557b71d2eff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef1dd49fb9841fe7c372f218f9067d454a08a79e88d689eb9c6e4ab8ecd9ae0\",\"dweb:/ipfs/QmbbB2KeiExC6bejin37eFFPfQzag2wfVEyhjs31s94nhJ\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x088eccf105dd762b03e1ac4d8315ae784b68d4ff41428448bdbbbc9eb2a522e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0890d41520baa6df78216b1c1869b222256de8e56cd77760eeb9f640e143f55\",\"dweb:/ipfs/QmVZozkPfa4hRUrECiN7gqrxwz6UB5Gmzmbjg3gSuZSDXZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xa5606c6cebca0ce72e4764cf4807eaf7dec3a298249279ed24cb261b0719bd20\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://219eb9f4034d942bddd021f4b4c237e721f9845911acfa98c90b1c6be6dcdef7\",\"dweb:/ipfs/QmTyRqcmUna7PL2EMV3k7HnQCnNhQN3a3qKMyA9MME5ctc\"]},\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							},
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryPayments.sol": {
				"IPeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Periphery Payments",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Functions to ease deposits and withdrawals of ETH",
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPoolInitializer.sol": {
				"IPoolInitializer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							}
						},
						"title": "Creates and initializes V3 Pools",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPoolInitializer.sol\":\"IPoolInitializer\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							}
						},
						"notice": "Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							186
						],
						"IERC721": [
							116
						]
					},
					"id": 117,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 117,
							"sourceUnit": 187,
							"src": "134:62:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 186,
										"src": "142:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IERC165",
										"nameLocations": [
											"288:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 186,
										"src": "288:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:0",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 116,
							"linearizedBaseContracts": [
								116,
								186
							],
							"name": "IERC721",
							"nameLocation": "277:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 15,
									"name": "Transfer",
									"nameLocation": "401:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "410:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "432:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "452:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:0"
									},
									"src": "395:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 24,
									"name": "Approval",
									"nameLocation": "588:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "597:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "620:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "646:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:0"
									},
									"src": "582:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 33,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "820:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "843:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "869:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:0"
									},
									"src": "799:85:0"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "990:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1028:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:0"
									},
									"scope": 116,
									"src": "971:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1244:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:0"
									},
									"scope": 116,
									"src": "1187:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1861:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1875:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1887:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1904:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:0"
									},
									"scope": 116,
									"src": "1835:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2691:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2703:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:0"
									},
									"scope": 116,
									"src": "2651:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3495:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3509:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3521:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:0"
									},
									"scope": 116,
									"src": "3473:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4027:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4039:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:0"
									},
									"scope": 116,
									"src": "4010:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "4418:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "4436:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 93,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:0"
									},
									"scope": 116,
									"src": "4391:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4631:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4671:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:0"
									},
									"scope": 116,
									"src": "4610:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4864:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4879:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4920:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:0"
									},
									"scope": 116,
									"src": "4838:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 117,
							"src": "267:4661:0",
							"usedErrors": [],
							"usedEvents": [
								15,
								24,
								33
							]
						}
					],
					"src": "108:4821:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							186
						],
						"IERC721": [
							116
						],
						"IERC721Enumerable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 118,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 117,
							"src": "66:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 121,
										"name": "IERC721",
										"nameLocations": [
											"259:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 116,
										"src": "259:7:1"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "259:7:1"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 120,
								"nodeType": "StructuredDocumentation",
								"src": "91:136:1",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								116,
								186
							],
							"name": "IERC721Enumerable",
							"nameLocation": "238:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "274:82:1",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "370:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:1"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "407:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:9:1"
									},
									"scope": 147,
									"src": "361:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "422:171:1",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "607:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "635:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "627:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "642:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:30:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "688:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "680:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:17:1"
									},
									"scope": 147,
									"src": "598:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "703:164:1",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "881:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "902:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "894:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "893:15:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "932:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:9:1"
									},
									"scope": 147,
									"src": "872:69:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 148,
							"src": "228:715:1",
							"usedErrors": [],
							"usedEvents": [
								15,
								24,
								33
							]
						}
					],
					"src": "33:911:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							186
						],
						"IERC721": [
							116
						],
						"IERC721Metadata": [
							174
						]
					},
					"id": 175,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 175,
							"sourceUnit": 117,
							"src": "66:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 152,
										"name": "IERC721",
										"nameLocations": [
											"254:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 116,
										"src": "254:7:2"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "254:7:2"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 151,
								"nodeType": "StructuredDocumentation",
								"src": "91:133:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 174,
							"linearizedBaseContracts": [
								174,
								116,
								186
							],
							"name": "IERC721Metadata",
							"nameLocation": "235:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "269:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "341:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:2:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "371:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "371:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:15:2"
									},
									"scope": 174,
									"src": "332:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "392:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "466:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:2:2"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "498:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "498:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:15:2"
									},
									"scope": 174,
									"src": "457:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "519:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "623:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "640:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "632:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:17:2"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "672:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 170,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "672:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:15:2"
									},
									"scope": 174,
									"src": "614:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 175,
							"src": "225:464:2",
							"usedErrors": [],
							"usedEvents": [
								15,
								24,
								33
							]
						}
					],
					"src": "33:657:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							186
						]
					},
					"id": 187,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 176,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 177,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:3",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 186,
							"linearizedBaseContracts": [
								186
							],
							"name": "IERC165",
							"nameLocation": "432:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "818:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 179,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:3"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "861:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:3"
									},
									"scope": 186,
									"src": "791:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 187,
							"src": "422:447:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:3"
				},
				"id": 3
			},
			"contracts/CC/CCToken.sol": {
				"ast": {
					"absolutePath": "contracts/CC/CCToken.sol",
					"exportedSymbols": {
						"CSYDToken": [
							517
						],
						"Context": [
							1451
						],
						"ERC20": [
							1317
						],
						"IERC165": [
							186
						],
						"IERC20": [
							1395
						],
						"IERC20Errors": [
							707
						],
						"IERC20Metadata": [
							1421
						],
						"IERC721": [
							116
						],
						"IERC721Enumerable": [
							147
						],
						"IERC721Metadata": [
							174
						],
						"IERC721Permit": [
							1928
						],
						"INonfungiblePositionManager": [
							2126
						],
						"IPeripheryImmutableState": [
							2142
						],
						"IPeripheryPayments": [
							2168
						],
						"IPoolInitializer": [
							2187
						],
						"IUniswapV3Pool": [
							1473
						],
						"IUniswapV3PoolActions": [
							1569
						],
						"IUniswapV3PoolDerivedState": [
							1600
						],
						"IUniswapV3PoolEvents": [
							1719
						],
						"IUniswapV3PoolImmutables": [
							1759
						],
						"IUniswapV3PoolOwnerActions": [
							1785
						],
						"IUniswapV3PoolState": [
							1893
						],
						"Ownable": [
							665
						]
					},
					"id": 518,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2152:23:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 518,
							"sourceUnit": 1318,
							"src": "2179:108:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 518,
							"sourceUnit": 666,
							"src": "2289:105:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/INonfungiblePositionManager.sol",
							"file": "https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/INonfungiblePositionManager.sol",
							"id": 191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 518,
							"sourceUnit": 2127,
							"src": "2396:112:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 518,
							"sourceUnit": 1474,
							"src": "2510:94:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 193,
										"name": "ERC20",
										"nameLocations": [
											"2630:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1317,
										"src": "2630:5:4"
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "2630:5:4"
								},
								{
									"baseName": {
										"id": 195,
										"name": "Ownable",
										"nameLocations": [
											"2637:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "2637:7:4"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "2637:7:4"
								}
							],
							"canonicalName": "CSYDToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 517,
							"linearizedBaseContracts": [
								517,
								665,
								1317,
								707,
								1421,
								1395,
								1451
							],
							"name": "CSYDToken",
							"nameLocation": "2617:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 203,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "2680:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 517,
									"src": "2656:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 197,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2656:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_187500000000000000000000000_by_1",
											"typeString": "int_const 187500000000000000000000000"
										},
										"id": 202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3138375f3530305f303030",
											"id": 198,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2695:11:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_187500000_by_1",
												"typeString": "int_const 187500000"
											},
											"value": "187_500_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 201,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 199,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2709:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 200,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2713:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "2709:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "2695:20:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_187500000000000000000000000_by_1",
											"typeString": "int_const 187500000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "35928998",
									"id": 208,
									"mutability": "constant",
									"name": "TEAM_LOCK_PERIOD",
									"nameLocation": "2761:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 517,
									"src": "2737:55:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2737:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_94608000_by_1",
											"typeString": "int_const 94608000"
										},
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33",
											"id": 205,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2780:1:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "333635",
											"id": 206,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2784:8:4",
											"subdenomination": "days",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_31536000_by_1",
												"typeString": "int_const 31536000"
											},
											"value": "365"
										},
										"src": "2780:12:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_94608000_by_1",
											"typeString": "int_const 94608000"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CSYDToken.TeamMember",
									"id": 213,
									"members": [
										{
											"constant": false,
											"id": 210,
											"mutability": "mutable",
											"name": "memberAddress",
											"nameLocation": "2860:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 213,
											"src": "2852:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 209,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2852:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 212,
											"mutability": "mutable",
											"name": "investmentAmount",
											"nameLocation": "2892:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 213,
											"src": "2884:24:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 211,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2884:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TeamMember",
									"nameLocation": "2830:10:4",
									"nodeType": "StructDefinition",
									"scope": 517,
									"src": "2823:93:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 217,
									"mutability": "mutable",
									"name": "teamMembers",
									"nameLocation": "2945:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 517,
									"src": "2924:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage",
										"typeString": "struct CSYDToken.TeamMember[]"
									},
									"typeName": {
										"baseType": {
											"id": 215,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 214,
												"name": "TeamMember",
												"nameLocations": [
													"2924:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "2924:10:4"
											},
											"referencedDeclaration": 213,
											"src": "2924:10:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TeamMember_$213_storage_ptr",
												"typeString": "struct CSYDToken.TeamMember"
											}
										},
										"id": 216,
										"nodeType": "ArrayTypeName",
										"src": "2924:12:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage_ptr",
											"typeString": "struct CSYDToken.TeamMember[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "76ae9b2d",
									"id": 219,
									"mutability": "mutable",
									"name": "teamLockedUntil",
									"nameLocation": "3042:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 517,
									"src": "3027:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 218,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3027:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bdd3d825",
									"id": 221,
									"mutability": "mutable",
									"name": "uniswapPool",
									"nameLocation": "3079:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 517,
									"src": "3064:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 220,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3064:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "3235:1528:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 239,
																	"name": "_teamMembers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "3254:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct CSYDToken.TeamMember memory[] memory"
																	}
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3267:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3254:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3276:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3254:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206c65617374206f6e65207465616d206d656d626572207265717569726564",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3279:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5",
																"typeString": "literal_string \"At least one team member required\""
															},
															"value": "At least one team member required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e1a74c8d302119da34f0d3416c6895a6eace363fd1922569db2c5cf2f2ea0d5",
																"typeString": "literal_string \"At least one team member required\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3246:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3246:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "3246:69:4"
											},
											{
												"expression": {
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 246,
														"name": "uniswapPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "3326:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 247,
														"name": "_uniswapPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3340:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3326:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "3326:26:4"
											},
											{
												"assignments": [
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "totalInvestment",
														"nameLocation": "3373:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 365,
														"src": "3365:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3365:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"hexValue": "30",
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3391:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3365:27:4"
											},
											{
												"body": {
													"id": 280,
													"nodeType": "Block",
													"src": "3506:148:4",
													"statements": [
														{
															"expression": {
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 265,
																	"name": "totalInvestment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "3521:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 266,
																			"name": "_teamMembers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "3540:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct CSYDToken.TeamMember memory[] memory"
																			}
																		},
																		"id": 268,
																		"indexExpression": {
																			"id": 267,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 255,
																			"src": "3553:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3540:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TeamMember_$213_memory_ptr",
																			"typeString": "struct CSYDToken.TeamMember memory"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3556:16:4",
																	"memberName": "investmentAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 212,
																	"src": "3540:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:51:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 271,
															"nodeType": "ExpressionStatement",
															"src": "3521:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 275,
																			"name": "_teamMembers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "3604:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct CSYDToken.TeamMember memory[] memory"
																			}
																		},
																		"id": 277,
																		"indexExpression": {
																			"id": 276,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 255,
																			"src": "3617:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3604:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TeamMember_$213_memory_ptr",
																			"typeString": "struct CSYDToken.TeamMember memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_TeamMember_$213_memory_ptr",
																			"typeString": "struct CSYDToken.TeamMember memory"
																		}
																	],
																	"expression": {
																		"id": 272,
																		"name": "teamMembers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "3587:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage",
																			"typeString": "struct CSYDToken.TeamMember storage ref[] storage ref"
																		}
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3599:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3587:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage_ptr_$_t_struct$_TeamMember_$213_storage_$returns$__$attached_to$_t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct CSYDToken.TeamMember storage ref[] storage pointer,struct CSYDToken.TeamMember storage ref)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3587:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "3587:33:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 258,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "3476:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 259,
															"name": "_teamMembers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3480:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct CSYDToken.TeamMember memory[] memory"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3493:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3480:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3476:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"initializationExpression": {
													"assignments": [
														255
													],
													"declarations": [
														{
															"constant": false,
															"id": 255,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3469:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 281,
															"src": "3461:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 254,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3461:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 257,
													"initialValue": {
														"hexValue": "30",
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3461:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3501:3:4",
														"subExpression": {
															"id": 262,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "3501:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 264,
													"nodeType": "ExpressionStatement",
													"src": "3501:3:4"
												},
												"nodeType": "ForStatement",
												"src": "3456:198:4"
											},
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "market",
														"nameLocation": "3674:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 365,
														"src": "3666:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3666:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 289,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"id": 284,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "3683:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3830",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3698:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_80_by_1",
																"typeString": "int_const 80"
															},
															"value": "80"
														},
														"src": "3683:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3703:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3683:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3666:40:4"
											},
											{
												"assignments": [
													291
												],
												"declarations": [
													{
														"constant": false,
														"id": 291,
														"mutability": "mutable",
														"name": "totalDistribution",
														"nameLocation": "3744:17:4",
														"nodeType": "VariableDeclaration",
														"scope": 365,
														"src": "3736:25:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 290,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3736:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 293,
												"initialValue": {
													"hexValue": "30",
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3764:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:29:4"
											},
											{
												"body": {
													"id": 329,
													"nodeType": "Block",
													"src": "3858:232:4",
													"statements": [
														{
															"assignments": [
																306
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 306,
																	"mutability": "mutable",
																	"name": "share",
																	"nameLocation": "3881:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 329,
																	"src": "3873:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 305,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3873:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 316,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 307,
																						"name": "teamMembers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 217,
																						"src": "3890:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage",
																							"typeString": "struct CSYDToken.TeamMember storage ref[] storage ref"
																						}
																					},
																					"id": 309,
																					"indexExpression": {
																						"id": 308,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 295,
																						"src": "3902:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3890:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TeamMember_$213_storage",
																						"typeString": "struct CSYDToken.TeamMember storage ref"
																					}
																				},
																				"id": 310,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3905:16:4",
																				"memberName": "investmentAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 212,
																				"src": "3890:31:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 311,
																				"name": "market",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 283,
																				"src": "3924:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3890:40:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 313,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3889:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 314,
																	"name": "totalInvestment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "3934:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3889:60:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3873:76:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 318,
																				"name": "teamMembers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 217,
																				"src": "4001:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage",
																					"typeString": "struct CSYDToken.TeamMember storage ref[] storage ref"
																				}
																			},
																			"id": 320,
																			"indexExpression": {
																				"id": 319,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 295,
																				"src": "4013:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4001:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TeamMember_$213_storage",
																				"typeString": "struct CSYDToken.TeamMember storage ref"
																			}
																		},
																		"id": 321,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4016:13:4",
																		"memberName": "memberAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 210,
																		"src": "4001:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 322,
																		"name": "share",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "4031:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 317,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "3995:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3995:42:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 324,
															"nodeType": "ExpressionStatement",
															"src": "3995:42:4"
														},
														{
															"expression": {
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 325,
																	"name": "totalDistribution",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "4052:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 326,
																	"name": "share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "4073:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4052:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 328,
															"nodeType": "ExpressionStatement",
															"src": "4052:26:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 298,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 299,
															"name": "teamMembers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3833:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage",
																"typeString": "struct CSYDToken.TeamMember storage ref[] storage ref"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3845:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3833:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3829:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 330,
												"initializationExpression": {
													"assignments": [
														295
													],
													"declarations": [
														{
															"constant": false,
															"id": 295,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3822:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 330,
															"src": "3814:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 294,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3814:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 297,
													"initialValue": {
														"hexValue": "30",
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3826:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3814:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3853:3:4",
														"subExpression": {
															"id": 302,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "3853:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 304,
													"nodeType": "ExpressionStatement",
													"src": "3853:3:4"
												},
												"nodeType": "ForStatement",
												"src": "3809:281:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "totalDistribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "4168:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 333,
																"name": "market",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "4189:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4168:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c20646973747269627574696f6e2065786365656473206d61726b6574",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4197:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5",
																"typeString": "literal_string \"Total distribution exceeds market\""
															},
															"value": "Total distribution exceeds market"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05fbf58db23408ea4515bbe709274a88a6b76901dd22cbdcc544f85d0a1126a5",
																"typeString": "literal_string \"Total distribution exceeds market\""
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4160:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4160:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "4160:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 339,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4252:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4256:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4252:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "market",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "4264:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 342,
																"name": "totalDistribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "4273:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4264:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 338,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "4246:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4246:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "4246:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 349,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4362:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSYDToken_$517",
																		"typeString": "contract CSYDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSYDToken_$517",
																		"typeString": "contract CSYDToken"
																	}
																],
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4354:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 347,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4354:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4354:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 351,
																	"name": "TOTAL_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "4369:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4384:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "4369:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4389:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "4369:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "4348:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4348:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "4348:45:4"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 358,
														"name": "teamLockedUntil",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "4422:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 359,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4440:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4446:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4440:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 361,
															"name": "TEAM_LOCK_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "4458:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4440:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4422:52:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "4422:52:4"
											}
										]
									},
									"id": 366,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "63737964",
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3185:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6afc605e4f8719bc0a187cf8d78914262783142cbf1f3f1721a8f28c946c7558",
														"typeString": "literal_string \"csyd\""
													},
													"value": "csyd"
												},
												{
													"hexValue": "43535944",
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3193:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ac5ae6287f650494bec9ff973d0959699e5e01f280b630aed29e40424bc08e21",
														"typeString": "literal_string \"CSYD\""
													},
													"value": "CSYD"
												}
											],
											"id": 232,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 229,
												"name": "ERC20",
												"nameLocations": [
													"3179:5:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "3179:5:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3179:21:4"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 234,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3218:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3222:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3218:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 236,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 233,
												"name": "Ownable",
												"nameLocations": [
													"3210:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 665,
												"src": "3210:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3210:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "_teamMembers",
												"nameLocation": "3133:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "3113:32:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct CSYDToken.TeamMember[]"
												},
												"typeName": {
													"baseType": {
														"id": 223,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 222,
															"name": "TeamMember",
															"nameLocations": [
																"3113:10:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 213,
															"src": "3113:10:4"
														},
														"referencedDeclaration": 213,
														"src": "3113:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TeamMember_$213_storage_ptr",
															"typeString": "struct CSYDToken.TeamMember"
														}
													},
													"id": 224,
													"nodeType": "ArrayTypeName",
													"src": "3113:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage_ptr",
														"typeString": "struct CSYDToken.TeamMember[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "_uniswapPool",
												"nameLocation": "3155:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "3147:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3112:56:4"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3235:0:4"
									},
									"scope": 517,
									"src": "3101:1662:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "4809:135:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 371,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4828:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4834:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4828:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 373,
																	"name": "teamLockedUntil",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4847:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4828:34:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 376,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4876:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4880:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4876:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 375,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "4866:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4866:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 379,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "4891:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4866:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4828:69:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5465616d20746f6b656e7320617265206c6f636b6564",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4899:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf",
																"typeString": "literal_string \"Team tokens are locked\""
															},
															"value": "Team tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf",
																"typeString": "literal_string \"Team tokens are locked\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4820:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4820:104:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "4820:104:4"
											},
											{
												"id": 385,
												"nodeType": "PlaceholderStatement",
												"src": "4935:1:4"
											}
										]
									},
									"id": 387,
									"name": "teamLocked",
									"nameLocation": "4782:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4801:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4793:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4792:16:4"
									},
									"src": "4773:171:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										927
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "5076:59:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "5109:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "5120:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 400,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5094:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CSYDToken_$517_$",
																"typeString": "type(contract super CSYDToken)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5100:8:4",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 927,
														"src": "5094:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5094:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "5087:40:4"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 395,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 391,
													"src": "5053:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 394,
												"name": "teamLocked",
												"nameLocations": [
													"5042:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 387,
												"src": "5042:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5042:18:4"
										}
									],
									"name": "transfer",
									"nameLocation": "4982:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5033:8:4"
									},
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4999:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4991:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4991:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5018:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "5010:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:35:4"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "5070:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5070:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5069:6:4"
									},
									"scope": 517,
									"src": "4973:162:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1000
									],
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "5296:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 424,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "5333:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "5341:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "5352:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 422,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CSYDToken_$517_$",
																"typeString": "type(contract super CSYDToken)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5320:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1000,
														"src": "5314:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5314:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 421,
												"id": 428,
												"nodeType": "Return",
												"src": "5307:52:4"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 417,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 413,
													"src": "5273:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 418,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 416,
												"name": "teamLocked",
												"nameLocations": [
													"5262:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 387,
												"src": "5262:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5262:18:4"
										}
									],
									"name": "transferFrom",
									"nameLocation": "5182:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 415,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5253:8:4"
									},
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5203:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5195:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5219:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5211:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5238:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5230:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5230:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5194:51:4"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5290:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5290:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5289:6:4"
									},
									"scope": 517,
									"src": "5173:194:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "5438:219:4",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5464:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "5449:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$1473",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 436,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 435,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"5449:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1473,
																"src": "5449:14:4"
															},
															"referencedDeclaration": 1473,
															"src": "5449:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$1473",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 441,
												"initialValue": {
													"arguments": [
														{
															"id": 439,
															"name": "uniswapPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "5486:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 438,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "5471:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$1473_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5471:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1473",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5449:49:4"
											},
											{
												"assignments": [
													443,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "5518:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "5510:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 442,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "5510:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 447,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 444,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5546:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$1473",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5551:5:4",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1806,
														"src": "5546:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5509:49:4"
											},
											{
												"expression": {
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "5569:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 451,
																		"name": "sqrtPriceX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "5585:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5577:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 449,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5577:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5577:21:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 455,
																		"name": "sqrtPriceX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "5609:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5601:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5601:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5601:21:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5577:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																		"typeString": "int_const 6277...(50 digits omitted)...2896"
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5626:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "313932",
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5629:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	"src": "5626:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																		"typeString": "int_const 6277...(50 digits omitted)...2896"
																	}
																}
															],
															"id": 461,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5625:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																"typeString": "int_const 6277...(50 digits omitted)...2896"
															}
														},
														"src": "5577:56:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5569:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "5569:64:4"
											}
										]
									},
									"functionSelector": "eb91d37e",
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPrice",
									"nameLocation": "5384:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5399:2:4"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "5431:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5423:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5422:15:4"
									},
									"scope": 517,
									"src": "5375:282:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "5733:71:4",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "teamMembers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 217,
													"src": "5751:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage",
														"typeString": "struct CSYDToken.TeamMember storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "5744:18:4"
											}
										]
									},
									"functionSelector": "efded147",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTeamMembers",
									"nameLocation": "5674:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5688:2:4"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "5712:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct CSYDToken.TeamMember[]"
												},
												"typeName": {
													"baseType": {
														"id": 469,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 468,
															"name": "TeamMember",
															"nameLocations": [
																"5712:10:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 213,
															"src": "5712:10:4"
														},
														"referencedDeclaration": 213,
														"src": "5712:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TeamMember_$213_storage_ptr",
															"typeString": "struct CSYDToken.TeamMember"
														}
													},
													"id": 470,
													"nodeType": "ArrayTypeName",
													"src": "5712:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage_ptr",
														"typeString": "struct CSYDToken.TeamMember[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5711:21:4"
									},
									"scope": 517,
									"src": "5665:139:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "5889:251:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 486,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "5908:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 487,
																	"name": "teamMembers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "5916:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage",
																		"typeString": "struct CSYDToken.TeamMember storage ref[] storage ref"
																	}
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5928:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5916:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5908:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e646578206f7574206f6620626f756e6473",
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5936:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															},
															"value": "Index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5900:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "5900:58:4"
											},
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "member",
														"nameLocation": "6009:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 506,
														"src": "5991:24:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TeamMember_$213_memory_ptr",
															"typeString": "struct CSYDToken.TeamMember"
														},
														"typeName": {
															"id": 494,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 493,
																"name": "TeamMember",
																"nameLocations": [
																	"5991:10:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 213,
																"src": "5991:10:4"
															},
															"referencedDeclaration": 213,
															"src": "5991:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TeamMember_$213_storage_ptr",
																"typeString": "struct CSYDToken.TeamMember"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 499,
												"initialValue": {
													"baseExpression": {
														"id": 496,
														"name": "teamMembers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "6018:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage",
															"typeString": "struct CSYDToken.TeamMember storage ref[] storage ref"
														}
													},
													"id": 498,
													"indexExpression": {
														"id": 497,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "6030:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6018:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TeamMember_$213_storage",
														"typeString": "struct CSYDToken.TeamMember storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5991:45:4"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 500,
																"name": "member",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "6055:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TeamMember_$213_memory_ptr",
																	"typeString": "struct CSYDToken.TeamMember memory"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6062:13:4",
															"memberName": "memberAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 210,
															"src": "6055:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 502,
																"name": "member",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "6077:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TeamMember_$213_memory_ptr",
																	"typeString": "struct CSYDToken.TeamMember memory"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6084:16:4",
															"memberName": "investmentAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "6077:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 504,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6054:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 484,
												"id": 505,
												"nodeType": "Return",
												"src": "6047:54:4"
											}
										]
									},
									"functionSelector": "88e56ec6",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTeamMember",
									"nameLocation": "5821:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "5843:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "5835:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5835:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5834:15:4"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "5871:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5871:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "5880:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5880:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5870:18:4"
									},
									"scope": 517,
									"src": "5812:328:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "6208:75:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 512,
														"name": "teamMembers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "6226:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TeamMember_$213_storage_$dyn_storage",
															"typeString": "struct CSYDToken.TeamMember storage ref[] storage ref"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6238:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6226:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 511,
												"id": 514,
												"nodeType": "Return",
												"src": "6219:25:4"
											}
										]
									},
									"functionSelector": "19ca43ab",
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTeamMemberCount",
									"nameLocation": "6157:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6175:2:4"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "6199:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:9:4"
									},
									"scope": 517,
									"src": "6148:135:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 518,
							"src": "2608:3678:4",
							"usedErrors": [
								531,
								536,
								677,
								682,
								687,
								696,
								701,
								706
							],
							"usedEvents": [
								542,
								1329,
								1338
							]
						}
					],
					"src": "2152:4134:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1451
						],
						"Ownable": [
							665
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 519,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 1452,
							"src": "128:45:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1451,
										"src": "136:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 523,
										"name": "Context",
										"nameLocations": [
											"692:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1451,
										"src": "692:7:5"
									},
									"id": 524,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:5"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 522,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:5",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 665,
							"linearizedBaseContracts": [
								665,
								1451
							],
							"name": "Ownable",
							"nameLocation": "681:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "706:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 525,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:5",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 531,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "858:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:5"
									},
									"src": "825:50:5"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:5",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 536,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:5"
									},
									"src": "968:41:5"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 542,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1042:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1073:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:5"
									},
									"src": "1015:84:5"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "1259:153:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 548,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "1273:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 549,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 562,
												"nodeType": "IfStatement",
												"src": "1269:95:5",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "1301:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 555,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 554,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "1322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 560,
															"nodeType": "RevertStatement",
															"src": "1315:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "1392:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 563,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "1373:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:5"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:5",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 568,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1237:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:5"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:5"
									},
									"scope": 665,
									"src": "1225:187:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "1521:41:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 571,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "1531:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:5"
											},
											{
												"id": 574,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:5"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:5",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 576,
									"name": "onlyOwner",
									"nameLocation": "1509:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:5"
									},
									"src": "1500:62:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "1693:30:5",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 526,
													"src": "1710:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "1703:13:5"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:5",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:5"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1684:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:5"
									},
									"scope": 665,
									"src": "1638:85:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "1841:117:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 589,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1855:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 591,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "1866:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "1851:101:5",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "1880:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 595,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "1928:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 594,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "1901:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "1894:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:5",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:5"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:5"
									},
									"scope": 665,
									"src": "1796:162:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "2347:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 609,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 608,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "2357:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:5"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:5",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 606,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 605,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 576,
												"src": "2337:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:5"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:5"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:5"
									},
									"scope": 665,
									"src": "2293:101:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "2613:145:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 624,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "2627:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 625,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 638,
												"nodeType": "IfStatement",
												"src": "2623:91:5",
												"trueBody": {
													"id": 637,
													"nodeType": "Block",
													"src": "2651:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 631,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 630,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "2672:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 636,
															"nodeType": "RevertStatement",
															"src": "2665:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "2742:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "2723:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:5"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 622,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 621,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 576,
												"src": "2603:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:5"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2570:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:5"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:5"
									},
									"scope": 665,
									"src": "2543:215:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2975:124:5",
										"statements": [
											{
												"assignments": [
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 663,
														"src": "2985:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 650,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"id": 652,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 526,
													"src": "3004:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:5"
											},
											{
												"expression": {
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 654,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3020:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 655,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "3029:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 659,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "3073:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "3083:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 658,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "3052:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "EmitStatement",
												"src": "3047:45:5"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2940:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:5"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:5"
									},
									"scope": 665,
									"src": "2912:187:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 666,
							"src": "663:2438:5",
							"usedErrors": [
								531,
								536
							],
							"usedEvents": [
								542
							]
						}
					],
					"src": "102:3000:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							802
						],
						"IERC20Errors": [
							707
						],
						"IERC721Errors": [
							755
						]
					},
					"id": 803,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:6",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 707,
							"linearizedBaseContracts": [
								707
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:6",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 677,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "654:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "670:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "687:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:6"
									},
									"src": "623:80:6"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 682,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "891:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:6"
									},
									"src": "866:41:6"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 687,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1104:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:6"
									},
									"src": "1077:45:6"
								},
								{
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:6",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 696,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1511:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1528:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1547:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:6"
									},
									"src": "1478:85:6"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 701,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1775:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:6"
									},
									"src": "1748:45:6"
								},
								{
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:6",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 706,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2025:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:6"
									},
									"src": "1999:43:6"
								}
							],
							"scope": 803,
							"src": "280:1764:6",
							"usedErrors": [
								677,
								682,
								687,
								696,
								701,
								706
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 708,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:6",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 755,
							"linearizedBaseContracts": [
								755
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:6",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 713,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2469:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:6"
									},
									"src": "2444:40:6"
								},
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:6",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 718,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2656:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:6"
									},
									"src": "2627:46:6"
								},
								{
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:6",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 727,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "3000:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "3016:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "3033:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:6"
									},
									"src": "2973:75:6"
								},
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 732,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3237:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:6"
									},
									"src": "3211:42:6"
								},
								{
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 737,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "3451:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:6"
									},
									"src": "3423:46:6"
								},
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:6",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 744,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3760:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3778:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:6"
									},
									"src": "3727:68:6"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 749,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "4008:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:6"
									},
									"src": "3980:46:6"
								},
								{
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:6",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 754,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "4262:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:6"
									},
									"src": "4234:46:6"
								}
							],
							"scope": 803,
							"src": "2190:2092:6",
							"usedErrors": [
								713,
								718,
								727,
								732,
								737,
								744,
								749,
								754
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 756,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:6",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 802,
							"linearizedBaseContracts": [
								802
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:6",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 767,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "4860:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "4876:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "4893:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "4909:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:6"
									},
									"src": "4827:99:6"
								},
								{
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 772,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "5116:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:6"
									},
									"src": "5089:43:6"
								},
								{
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 777,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "5331:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:6"
									},
									"src": "5302:47:6"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:6",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 784,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5651:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5669:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:6"
									},
									"src": "5616:68:6"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 789,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "5898:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:6"
									},
									"src": "5869:47:6"
								},
								{
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:6",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 794,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6153:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:6"
									},
									"src": "6124:47:6"
								},
								{
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:6",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 801,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "6494:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "6513:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:6"
									},
									"src": "6462:73:6"
								}
							],
							"scope": 803,
							"src": "4430:2107:6",
							"usedErrors": [
								767,
								772,
								777,
								784,
								789,
								794,
								801
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1451
						],
						"ERC20": [
							1317
						],
						"IERC20": [
							1395
						],
						"IERC20Errors": [
							707
						],
						"IERC20Metadata": [
							1421
						]
					},
					"id": 1318,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:7"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 806,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1318,
							"sourceUnit": 1396,
							"src": "131:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 805,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1395,
										"src": "139:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 808,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1318,
							"sourceUnit": 1422,
							"src": "168:63:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 807,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1421,
										"src": "176:14:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 810,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1318,
							"sourceUnit": 1452,
							"src": "232:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 809,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1451,
										"src": "240:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 812,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1318,
							"sourceUnit": 803,
							"src": "281:65:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 811,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 707,
										"src": "289:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 814,
										"name": "Context",
										"nameLocations": [
											"1133:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1451,
										"src": "1133:7:7"
									},
									"id": 815,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:7"
								},
								{
									"baseName": {
										"id": 816,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1395,
										"src": "1142:6:7"
									},
									"id": 817,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:7"
								},
								{
									"baseName": {
										"id": 818,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "1150:14:7"
									},
									"id": 819,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:7"
								},
								{
									"baseName": {
										"id": 820,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 707,
										"src": "1166:12:7"
									},
									"id": 821,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:7"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 813,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:7",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1317,
							"linearizedBaseContracts": [
								1317,
								707,
								1421,
								1395,
								1451
							],
							"name": "ERC20",
							"nameLocation": "1124:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 825,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1317,
									"src": "1185:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 824,
										"keyName": "account",
										"keyNameLocation": "1201:7:7",
										"keyType": {
											"id": 822,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 823,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 831,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1317,
									"src": "1245:83:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 830,
										"keyName": "account",
										"keyNameLocation": "1261:7:7",
										"keyType": {
											"id": 826,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 829,
											"keyName": "spender",
											"keyNameLocation": "1288:7:7",
											"keyType": {
												"id": 827,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 828,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 833,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1317,
									"src": "1335:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 832,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 835,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1317,
									"src": "1370:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 834,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 837,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1317,
									"src": "1396:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 836,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "1638:57:7",
										"statements": [
											{
												"expression": {
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "1648:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 846,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1656:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:7"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 849,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "1671:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "1681:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:7"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:7",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 854,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1594:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1615:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 841,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:7"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:7"
									},
									"scope": 1317,
									"src": "1582:113:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1408
									],
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "1820:29:7",
										"statements": [
											{
												"expression": {
													"id": 860,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 835,
													"src": "1837:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 859,
												"id": 861,
												"nodeType": "Return",
												"src": "1830:12:7"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:7"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "1805:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:7"
									},
									"scope": 1317,
									"src": "1760:89:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1414
									],
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "2024:31:7",
										"statements": [
											{
												"expression": {
													"id": 869,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 837,
													"src": "2041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 868,
												"id": 870,
												"nodeType": "Return",
												"src": "2034:14:7"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:7",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:7"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2009:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:7"
									},
									"scope": 1317,
									"src": "1962:93:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1420
									],
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "2744:26:7",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 877,
												"id": 879,
												"nodeType": "Return",
												"src": "2754:9:7"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:7",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:7"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2737:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 875,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:7"
									},
									"scope": 1317,
									"src": "2688:82:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1344
									],
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "2864:36:7",
										"statements": [
											{
												"expression": {
													"id": 887,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 833,
													"src": "2881:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 886,
												"id": 888,
												"nodeType": "Return",
												"src": "2874:19:7"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:7",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:7"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "2855:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:7"
									},
									"scope": 1317,
									"src": "2803:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1352
									],
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "3007:42:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 898,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "3024:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 900,
													"indexExpression": {
														"id": 899,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "3034:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 897,
												"id": 901,
												"nodeType": "Return",
												"src": "3017:25:7"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:7",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2952:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:7"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2998:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:7"
									},
									"scope": 1317,
									"src": "2933:116:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1362
									],
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "3319:103:7",
										"statements": [
											{
												"assignments": [
													914
												],
												"declarations": [
													{
														"constant": false,
														"id": 914,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 926,
														"src": "3329:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 913,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 917,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 915,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "3345:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 919,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "3377:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 920,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "3384:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "3388:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 918,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "3367:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 912,
												"id": 925,
												"nodeType": "Return",
												"src": "3404:11:7"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:7",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "3262:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "3274:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:7"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "3313:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 910,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:7"
									},
									"scope": 1317,
									"src": "3244:178:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1372
									],
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "3544:51:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 937,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "3561:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 939,
														"indexExpression": {
															"id": 938,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "3573:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 941,
													"indexExpression": {
														"id": 940,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "3580:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 936,
												"id": 942,
												"nodeType": "Return",
												"src": "3554:34:7"
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:7",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3474:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3489:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:7"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3535:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:7"
									},
									"scope": 1317,
									"src": "3455:140:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1382
									],
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "3981:107:7",
										"statements": [
											{
												"assignments": [
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 967,
														"src": "3991:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 954,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 958,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 956,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "4007:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 960,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4038:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 961,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "4045:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "4054:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1208,
															1268
														],
														"referencedDeclaration": 1208,
														"src": "4029:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 953,
												"id": 966,
												"nodeType": "Return",
												"src": "4070:11:7"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:7",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "3919:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "3936:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:7"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "3975:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:7"
									},
									"scope": 1317,
									"src": "3902:186:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1394
									],
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "4773:151:7",
										"statements": [
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 999,
														"src": "4783:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 980,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 984,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 982,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "4801:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 986,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "4839:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "4845:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "4854:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 985,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "4823:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 992,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "4880:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 993,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "4886:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 994,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "4890:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 991,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "4870:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 979,
												"id": 998,
												"nodeType": "Return",
												"src": "4906:11:7"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:7",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "4702:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "4716:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "4728:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:7"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "4767:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:7"
									},
									"scope": 1317,
									"src": "4680:244:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "5366:231:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "5380:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1011,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "IfStatement",
												"src": "5376:86:7",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "5400:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1017,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1016,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "5421:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1022,
															"nodeType": "RevertStatement",
															"src": "5414:37:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1025,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "5475:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1026,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1039,
												"nodeType": "IfStatement",
												"src": "5471:86:7",
												"trueBody": {
													"id": 1038,
													"nodeType": "Block",
													"src": "5493:64:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1032,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1031,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "5514:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1037,
															"nodeType": "RevertStatement",
															"src": "5507:39:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "5574:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1042,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "5580:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "5584:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1040,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "5566:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:7"
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5316:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5330:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5342:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:7"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:7"
									},
									"scope": 1317,
									"src": "5297:300:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "5987:1032:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1057,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "6001:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1058,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "6175:362:7",
													"statements": [
														{
															"assignments": [
																1069
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1069,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1094,
																	"src": "6189:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1068,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1073,
															"initialValue": {
																"baseExpression": {
																	"id": 1070,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "6211:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1072,
																"indexExpression": {
																	"id": 1071,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "6221:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1074,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "6244:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1075,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "6258:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1084,
															"nodeType": "IfStatement",
															"src": "6240:115:7",
															"trueBody": {
																"id": 1083,
																"nodeType": "Block",
																"src": "6265:90:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1078,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1050,
																					"src": "6315:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1079,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1069,
																					"src": "6321:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1080,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1054,
																					"src": "6334:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1077,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 677,
																				"src": "6290:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1082,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:7"
																	}
																]
															}
														},
														{
															"id": 1093,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:7",
															"statements": [
																{
																	"expression": {
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1085,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "6475:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1087,
																			"indexExpression": {
																				"id": 1086,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1050,
																				"src": "6485:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1088,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1069,
																				"src": "6493:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1089,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1054,
																				"src": "6507:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1092,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:7"
																}
															]
														}
													]
												},
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "5997:540:7",
												"trueBody": {
													"id": 1067,
													"nodeType": "Block",
													"src": "6021:148:7",
													"statements": [
														{
															"expression": {
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1063,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "6137:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1064,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "6153:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1066,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1096,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "6551:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1097,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1115,
													"nodeType": "Block",
													"src": "6766:206:7",
													"statements": [
														{
															"id": 1114,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:7",
															"statements": [
																{
																	"expression": {
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1108,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "6925:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1110,
																			"indexExpression": {
																				"id": 1109,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1052,
																				"src": "6935:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1111,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1054,
																			"src": "6942:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1113,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:7"
																}
															]
														}
													]
												},
												"id": 1116,
												"nodeType": "IfStatement",
												"src": "6547:425:7",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "6569:191:7",
													"statements": [
														{
															"id": 1106,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:7",
															"statements": [
																{
																	"expression": {
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1102,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "6714:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1103,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1054,
																			"src": "6730:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1105,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:7"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1118,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "6996:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "7002:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "7006:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "6987:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "EmitStatement",
												"src": "6982:30:7"
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:7",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "5929:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "5943:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "5955:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:7"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:7"
									},
									"scope": 1317,
									"src": "5912:1107:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "7418:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1132,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "7432:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1133,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1146,
												"nodeType": "IfStatement",
												"src": "7428:91:7",
												"trueBody": {
													"id": 1145,
													"nodeType": "Block",
													"src": "7455:64:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1139,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1138,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "7476:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1144,
															"nodeType": "RevertStatement",
															"src": "7469:39:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1148,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1152,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "7548:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1153,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "7557:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1147,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "7528:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:7"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:7",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "7377:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "7394:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:7"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:7"
									},
									"scope": 1317,
									"src": "7362:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "7944:150:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1165,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "7958:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1166,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1179,
												"nodeType": "IfStatement",
												"src": "7954:89:7",
												"trueBody": {
													"id": 1178,
													"nodeType": "Block",
													"src": "7981:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1172,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1171,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "8002:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1177,
															"nodeType": "RevertStatement",
															"src": "7995:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "8060:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1182,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "8081:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1180,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "8052:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:7"
											}
										]
									},
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:7",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7903:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "7920:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:7"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:7"
									},
									"scope": 1317,
									"src": "7888:206:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "8704:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1201,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "8723:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "8730:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "8739:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1200,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1208,
															1268
														],
														"referencedDeclaration": 1268,
														"src": "8714:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:7"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:7",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "8648:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "8663:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "8680:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:7"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:7"
									},
									"scope": 1317,
									"src": "8630:128:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "9703:334:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1220,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "9717:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1221,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1234,
												"nodeType": "IfStatement",
												"src": "9713:89:7",
												"trueBody": {
													"id": 1233,
													"nodeType": "Block",
													"src": "9738:64:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1227,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1226,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "9759:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1232,
															"nodeType": "RevertStatement",
															"src": "9752:39:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1235,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "9815:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1236,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1249,
												"nodeType": "IfStatement",
												"src": "9811:90:7",
												"trueBody": {
													"id": 1248,
													"nodeType": "Block",
													"src": "9838:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1244,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1242,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1241,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "9859:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1247,
															"nodeType": "RevertStatement",
															"src": "9852:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1250,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "9910:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1253,
															"indexExpression": {
																"id": 1251,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "9922:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1254,
														"indexExpression": {
															"id": 1252,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "9929:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1255,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "9940:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:7"
											},
											{
												"condition": {
													"id": 1258,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1217,
													"src": "9959:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1266,
												"nodeType": "IfStatement",
												"src": "9955:76:7",
												"trueBody": {
													"id": 1265,
													"nodeType": "Block",
													"src": "9970:61:7",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1260,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "9998:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1261,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1213,
																		"src": "10005:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1262,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "10014:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1259,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "9989:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1264,
															"nodeType": "EmitStatement",
															"src": "9984:36:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:7",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "9623:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "9638:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "9655:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "9670:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:7"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:7"
									},
									"scope": 1317,
									"src": "9605:432:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "10408:387:7",
										"statements": [
											{
												"assignments": [
													1279
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "10418:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"initialValue": {
													"arguments": [
														{
															"id": 1281,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "10455:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1282,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "10462:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1280,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "10445:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1285,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "10484:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1287,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1286,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1314,
												"nodeType": "IfStatement",
												"src": "10480:309:7",
												"trueBody": {
													"id": 1313,
													"nodeType": "Block",
													"src": "10522:267:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1292,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "10540:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1293,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "10559:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1302,
															"nodeType": "IfStatement",
															"src": "10536:130:7",
															"trueBody": {
																"id": 1301,
																"nodeType": "Block",
																"src": "10566:100:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1296,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1273,
																					"src": "10618:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1297,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "10627:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1298,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1275,
																					"src": "10645:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1295,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 696,
																				"src": "10591:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1300,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:7"
																	}
																]
															}
														},
														{
															"id": 1312,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:7",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1304,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1271,
																				"src": "10716:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1305,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1273,
																				"src": "10723:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1306,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "10732:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1307,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1275,
																					"src": "10751:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1303,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1208,
																				1268
																			],
																			"referencedDeclaration": 1268,
																			"src": "10707:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1311,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:7"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:7",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "10344:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "10359:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "10376:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:7"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:7"
									},
									"scope": 1317,
									"src": "10319:476:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1318,
							"src": "1106:9691:7",
							"usedErrors": [
								677,
								682,
								687,
								696,
								701,
								706
							],
							"usedEvents": [
								1329,
								1338
							]
						}
					],
					"src": "105:10693:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1395
						]
					},
					"id": 1396,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1319,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1320,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:8",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1395,
							"linearizedBaseContracts": [
								1395
							],
							"name": "IERC20",
							"nameLocation": "214:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1329,
									"name": "Transfer",
									"nameLocation": "396:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "405:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "427:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "447:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:8"
									},
									"src": "390:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1338,
									"name": "Approval",
									"nameLocation": "627:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "636:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "659:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:8"
									},
									"src": "621:78:8"
								},
								{
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:8",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:8"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "821:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:8"
									},
									"scope": 1395,
									"src": "775:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:8",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "931:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:8"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "971:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:8"
									},
									"scope": 1395,
									"src": "912:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:8",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1222:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1234:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:8"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1267:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:8"
									},
									"scope": 1395,
									"src": "1204:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1567:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1582:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:8"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1622:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:8"
									},
									"scope": 1395,
									"src": "1548:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:8",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "2326:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "2343:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:8"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "2376:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:8"
									},
									"scope": 1395,
									"src": "2309:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:8",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "2712:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "2726:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "2738:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:8"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "2771:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:8"
									},
									"scope": 1395,
									"src": "2690:87:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1396,
							"src": "204:2575:8",
							"usedErrors": [],
							"usedEvents": [
								1329,
								1338
							]
						}
					],
					"src": "106:2674:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1395
						],
						"IERC20Metadata": [
							1421
						]
					},
					"id": 1422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1397,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:9"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1399,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1422,
							"sourceUnit": 1396,
							"src": "151:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1398,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1395,
										"src": "159:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1401,
										"name": "IERC20",
										"nameLocations": [
											"306:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1395,
										"src": "306:6:9"
									},
									"id": 1402,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:9"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1400,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:9",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1421,
							"linearizedBaseContracts": [
								1421,
								1395
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:9",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:9"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "417:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1405,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:9"
									},
									"scope": 1421,
									"src": "378:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:9",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:9"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "540:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:9"
									},
									"scope": 1421,
									"src": "499:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:9",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:9"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "674:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1417,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:9"
									},
									"scope": 1421,
									"src": "631:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1422,
							"src": "278:405:9",
							"usedErrors": [],
							"usedEvents": [
								1329,
								1338
							]
						}
					],
					"src": "125:559:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1451
						]
					},
					"id": 1452,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1424,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1451,
							"linearizedBaseContracts": [
								1451
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1429,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1428,
												"id": 1431,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1451,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1438,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1437,
												"id": 1440,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1435,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1451,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1446,
												"id": 1448,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1451,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1452,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							1473
						],
						"IUniswapV3PoolActions": [
							1569
						],
						"IUniswapV3PoolDerivedState": [
							1600
						],
						"IUniswapV3PoolEvents": [
							1719
						],
						"IUniswapV3PoolImmutables": [
							1759
						],
						"IUniswapV3PoolOwnerActions": [
							1785
						],
						"IUniswapV3PoolState": [
							1893
						]
					},
					"id": 1474,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1453,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 1454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1474,
							"sourceUnit": 1760,
							"src": "71:45:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 1455,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1474,
							"sourceUnit": 1894,
							"src": "117:40:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 1456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1474,
							"sourceUnit": 1601,
							"src": "158:47:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 1457,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1474,
							"sourceUnit": 1570,
							"src": "206:42:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 1458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1474,
							"sourceUnit": 1786,
							"src": "249:47:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 1459,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1474,
							"sourceUnit": 1720,
							"src": "297:41:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1461,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1759,
										"src": "637:24:11"
									},
									"id": 1462,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:11"
								},
								{
									"baseName": {
										"id": 1463,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1893,
										"src": "667:19:11"
									},
									"id": 1464,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:11"
								},
								{
									"baseName": {
										"id": 1465,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1600,
										"src": "692:26:11"
									},
									"id": 1466,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:11"
								},
								{
									"baseName": {
										"id": 1467,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1569,
										"src": "724:21:11"
									},
									"id": 1468,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:11"
								},
								{
									"baseName": {
										"id": 1469,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1785,
										"src": "751:26:11"
									},
									"id": 1470,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:11"
								},
								{
									"baseName": {
										"id": 1471,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1719,
										"src": "783:20:11"
									},
									"id": 1472,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:11"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1460,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:11",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 1473,
							"linearizedBaseContracts": [
								1473,
								1719,
								1785,
								1569,
								1600,
								1893,
								1759
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1474,
							"src": "605:203:11",
							"usedErrors": [],
							"usedEvents": [
								1610,
								1627,
								1642,
								1657,
								1674,
								1689,
								1696,
								1707,
								1718
							]
						}
					],
					"src": "45:764:11"
				},
				"id": 11
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							1569
						]
					},
					"id": 1570,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1475,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1476,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:12",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 1569,
							"linearizedBaseContracts": [
								1569
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:12",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 1482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "442:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1478,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:12"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:12"
									},
									"scope": 1569,
									"src": "422:51:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:12",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 1500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1536:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1563:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1486,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1588:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1488,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1613:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1490,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1637:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:12"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1681:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1698:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:12"
									},
									"scope": 1569,
									"src": "1513:202:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:12",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 1518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2805:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2832:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1504,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2857:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1506,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2882:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1508,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2916:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1510,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:12"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2965:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1513,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2982:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1515,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:12"
									},
									"scope": 1569,
									"src": "2779:220:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:12",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 1532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3664:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1520,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3689:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1522,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3714:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1524,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:12"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3753:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3770:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:12"
									},
									"scope": 1569,
									"src": "3641:146:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:12",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 1550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4836:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4863:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4888:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1538,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4920:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1540,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4955:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:12"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4999:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1545,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "5015:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1547,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:12"
									},
									"scope": 1569,
									"src": "4813:218:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:12",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 1562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "5723:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "5750:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "5775:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "5800:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:12"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:12"
									},
									"scope": 1569,
									"src": "5699:136:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:12",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 1568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:12",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6257:33:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1564,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:12"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:12"
									},
									"scope": 1569,
									"src": "6213:88:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1570,
							"src": "173:6130:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:12"
				},
				"id": 12
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							1600
						]
					},
					"id": 1601,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1571,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1572,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:13",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 1600,
							"linearizedBaseContracts": [
								1600
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:13",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 1585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1403:29:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1574,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1575,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:13"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1481:30:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 1578,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 1579,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:13",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1513:51:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 1581,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 1582,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:13"
									},
									"scope": 1600,
									"src": "1386:180:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:13",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2383:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1587,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2400:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1589,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:13"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:13",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2477:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1592,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:13",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2517:37:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1594,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2568:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1596,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:13"
									},
									"scope": 1600,
									"src": "2348:251:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1601,
							"src": "293:2308:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:13"
				},
				"id": 13
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							1719
						]
					},
					"id": 1720,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1602,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1603,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:14",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1719,
							"linearizedBaseContracts": [
								1719
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:14",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 1610,
									"name": "Initialize",
									"nameLocation": "551:10:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "562:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1605,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "584:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1607,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:14"
									},
									"src": "545:51:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:14",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 1627,
									"name": "Mint",
									"nameLocation": "1164:4:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1178:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1202:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1233:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1616,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1266:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1618,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1299:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1620,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1323:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1348:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:14"
									},
									"src": "1158:212:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:14",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 1642,
									"name": "Collect",
									"nameLocation": "1880:7:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "1897:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "1928:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "1955:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1633,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "1988:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1635,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "2021:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1637,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "2046:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1639,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:14"
									},
									"src": "1874:194:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:14",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 1657,
									"name": "Burn",
									"nameLocation": "2608:4:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2622:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2653:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1646,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2686:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1648,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2719:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1650,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2743:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2768:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:14"
									},
									"src": "2602:188:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:14",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 1674,
									"name": "Swap",
									"nameLocation": "3407:4:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "3421:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "3453:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "3488:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1663,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "3512:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1665,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "3536:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1667,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "3566:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1669,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "3593:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1671,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:14"
									},
									"src": "3401:209:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:14",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 1689,
									"name": "Flash",
									"nameLocation": "4189:5:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "4204:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "4236:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "4271:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "4296:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "4321:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "4344:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:14"
									},
									"src": "4183:181:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:14",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 1696,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:14",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "4876:36:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1691,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:14",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "4922:36:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1693,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:14"
									},
									"src": "4826:139:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:14",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 1707,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "5367:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1698,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "5390:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1700,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "5413:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1702,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "5436:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1704,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:14"
									},
									"src": "5346:113:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:14",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 1718,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "5876:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "5900:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "5927:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1713,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "5944:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1715,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:14"
									},
									"src": "5854:107:14"
								}
							],
							"scope": 1720,
							"src": "159:5804:14",
							"usedErrors": [],
							"usedEvents": [
								1610,
								1627,
								1642,
								1657,
								1674,
								1689,
								1696,
								1707,
								1718
							]
						}
					],
					"src": "45:5919:14"
				},
				"id": 14
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							1759
						]
					},
					"id": 1760,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1721,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1722,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:15",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1759,
							"linearizedBaseContracts": [
								1759
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:15",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:15"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "450:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:15"
									},
									"scope": 1759,
									"src": "408:51:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:15",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:15"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "624:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:15"
									},
									"scope": 1759,
									"src": "583:50:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:15",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:15"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "799:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:15"
									},
									"scope": 1759,
									"src": "758:50:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:15",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:15"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "941:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1743,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:15"
									},
									"scope": 1759,
									"src": "903:46:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:15",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:15"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1364:5:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1749,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:15"
									},
									"scope": 1759,
									"src": "1318:53:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:15",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:15"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "1799:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1755,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:15"
									},
									"scope": 1759,
									"src": "1745:63:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1760,
							"src": "224:1586:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:15"
				},
				"id": 15
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							1785
						]
					},
					"id": 1786,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1761,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1762,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:16",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1785,
							"linearizedBaseContracts": [
								1785
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:16",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 1770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "464:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1764,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "484:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1766,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:16"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:16"
									},
									"scope": 1785,
									"src": "440:73:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:16",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 1784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1041:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1068:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1774,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1102:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1776,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:16"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1151:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1779,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1168:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1781,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:16"
									},
									"scope": 1785,
									"src": "1007:178:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1786,
							"src": "187:1000:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1143:16"
				},
				"id": 16
			},
			"https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							1893
						]
					},
					"id": 1894,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1787,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1788,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:17",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 1893,
							"linearizedBaseContracts": [
								1893
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:17",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:17"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1498:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1791,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1532:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1793,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1556:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1795,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:17",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1593:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1797,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:17",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1636:33:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1799,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1683:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1801,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1714:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:17"
									},
									"scope": 1893,
									"src": "1421:317:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:17",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:17"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1972:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:17"
									},
									"scope": 1893,
									"src": "1917:64:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:17",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:17"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "2215:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:17"
									},
									"scope": 1893,
									"src": "2160:64:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:17",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 1826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:17"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "2429:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1821,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "2445:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1823,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:17"
									},
									"scope": 1893,
									"src": "2382:79:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:17",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 1832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:17"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "2666:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1829,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:17"
									},
									"scope": 1893,
									"src": "2622:53:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:17",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "3945:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1834,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:17"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4017:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1837,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4053:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1839,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:17",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4086:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:17",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4129:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:17",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4172:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1845,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:17",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4213:38:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1847,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4265:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1849,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4300:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:17"
									},
									"scope": 1893,
									"src": "3930:397:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:17",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "4457:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1856,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:17"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "4500:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:17"
									},
									"scope": 1893,
									"src": "4437:72:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:17",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 1878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5239:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1864,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:17"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5312:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1867,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:17",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5344:32:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:17",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5390:32:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5436:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1873,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5469:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1875,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:17"
									},
									"scope": 1893,
									"src": "5220:279:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:17",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 1892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "6281:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:17"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "6356:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1883,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "6391:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1885,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:17",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "6425:41:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1887,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "6480:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1889,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:17"
									},
									"scope": 1893,
									"src": "6259:248:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1894,
							"src": "240:6269:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6465:17"
				},
				"id": 17
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IERC721Permit.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IERC721Permit.sol",
					"exportedSymbols": {
						"IERC165": [
							186
						],
						"IERC721": [
							116
						],
						"IERC721Permit": [
							1928
						]
					},
					"id": 1929,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1895,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1896,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1929,
							"sourceUnit": 117,
							"src": "71:58:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1898,
										"name": "IERC721",
										"nameLocations": [
											"282:7:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 116,
										"src": "282:7:18"
									},
									"id": 1899,
									"nodeType": "InheritanceSpecifier",
									"src": "282:7:18"
								}
							],
							"canonicalName": "IERC721Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1897,
								"nodeType": "StructuredDocumentation",
								"src": "131:124:18",
								"text": "@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"
							},
							"fullyImplemented": false,
							"id": 1928,
							"linearizedBaseContracts": [
								1928,
								116,
								186
							],
							"name": "IERC721Permit",
							"nameLocation": "265:13:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "296:104:18",
										"text": "@notice The permit typehash used in the permit signature\n @return The typehash for the permit"
									},
									"functionSelector": "30adf81f",
									"id": 1905,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "414:15:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:2:18"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "455:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1902,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:9:18"
									},
									"scope": 1928,
									"src": "405:59:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "470:135:18",
										"text": "@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"
									},
									"functionSelector": "3644e515",
									"id": 1911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "619:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:18"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "661:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1908,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:9:18"
									},
									"scope": 1928,
									"src": "610:60:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "676:605:18",
										"text": "@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "7ac2ff7b",
									"id": 1927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1295:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1319:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1311:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1344:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1336:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1369:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1361:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1393:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1387:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1919,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1387:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1412:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1404:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1921,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1431:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1423:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1923,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:137:18"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:0:18"
									},
									"scope": 1928,
									"src": "1286:170:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1929,
							"src": "255:1203:18",
							"usedErrors": [],
							"usedEvents": [
								15,
								24,
								33
							]
						}
					],
					"src": "45:1414:18"
				},
				"id": 18
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"IERC165": [
							186
						],
						"IERC721": [
							116
						],
						"IERC721Enumerable": [
							147
						],
						"IERC721Metadata": [
							174
						],
						"IERC721Permit": [
							1928
						],
						"INonfungiblePositionManager": [
							2126
						],
						"IPeripheryImmutableState": [
							2142
						],
						"IPeripheryPayments": [
							2168
						],
						"IPoolInitializer": [
							2187
						]
					},
					"id": 2127,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1930,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:19"
						},
						{
							"id": 1931,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
							"id": 1932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2127,
							"sourceUnit": 175,
							"src": "91:66:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
							"id": 1933,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2127,
							"sourceUnit": 148,
							"src": "158:68:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPoolInitializer.sol",
							"file": "./IPoolInitializer.sol",
							"id": 1934,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2127,
							"sourceUnit": 2188,
							"src": "228:32:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IERC721Permit.sol",
							"file": "./IERC721Permit.sol",
							"id": 1935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2127,
							"sourceUnit": 1929,
							"src": "261:29:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryPayments.sol",
							"file": "./IPeripheryPayments.sol",
							"id": 1936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2127,
							"sourceUnit": 2169,
							"src": "291:34:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryImmutableState.sol",
							"file": "./IPeripheryImmutableState.sol",
							"id": 1937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2127,
							"sourceUnit": 2143,
							"src": "326:40:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1939,
										"name": "IPoolInitializer",
										"nameLocations": [
											"590:16:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2187,
										"src": "590:16:19"
									},
									"id": 1940,
									"nodeType": "InheritanceSpecifier",
									"src": "590:16:19"
								},
								{
									"baseName": {
										"id": 1941,
										"name": "IPeripheryPayments",
										"nameLocations": [
											"612:18:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2168,
										"src": "612:18:19"
									},
									"id": 1942,
									"nodeType": "InheritanceSpecifier",
									"src": "612:18:19"
								},
								{
									"baseName": {
										"id": 1943,
										"name": "IPeripheryImmutableState",
										"nameLocations": [
											"636:24:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2142,
										"src": "636:24:19"
									},
									"id": 1944,
									"nodeType": "InheritanceSpecifier",
									"src": "636:24:19"
								},
								{
									"baseName": {
										"id": 1945,
										"name": "IERC721Metadata",
										"nameLocations": [
											"666:15:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 174,
										"src": "666:15:19"
									},
									"id": 1946,
									"nodeType": "InheritanceSpecifier",
									"src": "666:15:19"
								},
								{
									"baseName": {
										"id": 1947,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"687:17:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "687:17:19"
									},
									"id": 1948,
									"nodeType": "InheritanceSpecifier",
									"src": "687:17:19"
								},
								{
									"baseName": {
										"id": 1949,
										"name": "IERC721Permit",
										"nameLocations": [
											"710:13:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1928,
										"src": "710:13:19"
									},
									"id": 1950,
									"nodeType": "InheritanceSpecifier",
									"src": "710:13:19"
								}
							],
							"canonicalName": "INonfungiblePositionManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1938,
								"nodeType": "StructuredDocumentation",
								"src": "368:177:19",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 2126,
							"linearizedBaseContracts": [
								2126,
								1928,
								147,
								174,
								116,
								186,
								2142,
								2168,
								2187
							],
							"name": "INonfungiblePositionManager",
							"nameLocation": "555:27:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "730:458:19",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"eventSelector": "3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f",
									"id": 1961,
									"name": "IncreaseLiquidity",
									"nameLocation": "1199:17:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1233:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "1217:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1250:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "1242:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1954,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1269:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "1261:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1286:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "1278:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:78:19"
									},
									"src": "1193:102:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "1300:419:19",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"eventSelector": "26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b4",
									"id": 1972,
									"name": "DecreaseLiquidity",
									"nameLocation": "1730:17:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1764:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "1748:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1781:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "1773:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1965,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1800:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "1792:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1817:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "1809:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1747:78:19"
									},
									"src": "1724:102:19"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "1831:522:19",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"eventSelector": "40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f01",
									"id": 1983,
									"name": "Collect",
									"nameLocation": "2364:7:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2388:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "2372:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2372:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2405:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "2397:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2424:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "2416:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2416:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2441:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "2433:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2371:78:19"
									},
									"src": "2358:92:19"
								},
								{
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "2456:1157:19",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 2013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "3627:9:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3645:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "3637:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3636:17:19"
									},
									"returnParameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3721:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "3714:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1988,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3714:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3748:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "3740:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3740:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3778:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "3770:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3806:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "3798:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3798:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3833:3:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "3826:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1996,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3826:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3856:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "3850:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1998,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3850:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3885:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "3879:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2000,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3879:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3916:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "3908:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2002,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "3947:24:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "3939:32:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3939:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "3993:24:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "3985:32:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3985:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "4039:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "4031:19:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2008,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "4072:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "4064:19:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2010,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4064:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3700:393:19"
									},
									"scope": 2126,
									"src": "3618:476:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 2036,
									"members": [
										{
											"constant": false,
											"id": 2015,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "4136:6:19",
											"nodeType": "VariableDeclaration",
											"scope": 2036,
											"src": "4128:14:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2014,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4128:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2017,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "4160:6:19",
											"nodeType": "VariableDeclaration",
											"scope": 2036,
											"src": "4152:14:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2016,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4152:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2019,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "4183:3:19",
											"nodeType": "VariableDeclaration",
											"scope": 2036,
											"src": "4176:10:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2018,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "4176:6:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2021,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "4202:9:19",
											"nodeType": "VariableDeclaration",
											"scope": 2036,
											"src": "4196:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 2020,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4196:5:19",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2023,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "4227:9:19",
											"nodeType": "VariableDeclaration",
											"scope": 2036,
											"src": "4221:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 2022,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4221:5:19",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2025,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "4254:14:19",
											"nodeType": "VariableDeclaration",
											"scope": 2036,
											"src": "4246:22:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2024,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4246:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2027,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "4286:14:19",
											"nodeType": "VariableDeclaration",
											"scope": 2036,
											"src": "4278:22:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2026,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4278:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2029,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "4318:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 2036,
											"src": "4310:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2028,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4310:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2031,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "4346:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 2036,
											"src": "4338:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2030,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4338:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2033,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "4374:9:19",
											"nodeType": "VariableDeclaration",
											"scope": 2036,
											"src": "4366:17:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2032,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4366:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2035,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "4401:8:19",
											"nodeType": "VariableDeclaration",
											"scope": 2036,
											"src": "4393:16:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2034,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4393:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nameLocation": "4107:10:19",
									"nodeType": "StructDefinition",
									"scope": 2126,
									"src": "4100:316:19",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "4422:586:19",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 2051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5022:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5047:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "5027:26:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$2036_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 2039,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2038,
														"name": "MintParams",
														"nameLocations": [
															"5027:10:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2036,
														"src": "5027:10:19"
													},
													"referencedDeclaration": 2036,
													"src": "5027:10:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$2036_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5026:28:19"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5126:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "5118:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5118:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5155:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "5147:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2044,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5147:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5186:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "5178:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5178:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5215:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "5207:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5207:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5104:128:19"
									},
									"scope": 2126,
									"src": "5013:220:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 2064,
									"members": [
										{
											"constant": false,
											"id": 2053,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "5288:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 2064,
											"src": "5280:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2052,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5280:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2055,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "5313:14:19",
											"nodeType": "VariableDeclaration",
											"scope": 2064,
											"src": "5305:22:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2054,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5305:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2057,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "5345:14:19",
											"nodeType": "VariableDeclaration",
											"scope": 2064,
											"src": "5337:22:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2056,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5337:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2059,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "5377:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 2064,
											"src": "5369:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2058,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5369:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2061,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "5405:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 2064,
											"src": "5397:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2060,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5397:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2063,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "5433:8:19",
											"nodeType": "VariableDeclaration",
											"scope": 2064,
											"src": "5425:16:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2062,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5425:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nameLocation": "5246:23:19",
									"nodeType": "StructDefinition",
									"scope": 2126,
									"src": "5239:209:19",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "5454:821:19",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 2077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nameLocation": "6289:17:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6340:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "6307:39:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$2064_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 2067,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2066,
														"name": "IncreaseLiquidityParams",
														"nameLocations": [
															"6307:23:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2064,
														"src": "6307:23:19"
													},
													"referencedDeclaration": 2064,
													"src": "6307:23:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$2064_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6306:41:19"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6419:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "6411:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2070,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6411:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6450:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "6442:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6442:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6479:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "6471:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6471:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6397:99:19"
									},
									"scope": 2126,
									"src": "6280:217:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 2088,
									"members": [
										{
											"constant": false,
											"id": 2079,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "6552:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 2088,
											"src": "6544:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2078,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6544:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2081,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "6577:9:19",
											"nodeType": "VariableDeclaration",
											"scope": 2088,
											"src": "6569:17:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2080,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6569:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2083,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "6604:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 2088,
											"src": "6596:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2082,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6596:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2085,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "6632:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 2088,
											"src": "6624:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2084,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6624:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2087,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "6660:8:19",
											"nodeType": "VariableDeclaration",
											"scope": 2088,
											"src": "6652:16:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2086,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6652:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nameLocation": "6510:23:19",
									"nodeType": "StructDefinition",
									"scope": 2126,
									"src": "6503:172:19",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2089,
										"nodeType": "StructuredDocumentation",
										"src": "6681:702:19",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 2099,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nameLocation": "7397:17:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7448:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "7415:39:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$2088_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 2091,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2090,
														"name": "DecreaseLiquidityParams",
														"nameLocations": [
															"7415:23:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "7415:23:19"
													},
													"referencedDeclaration": 2088,
													"src": "7415:23:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$2088_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7414:41:19"
									},
									"returnParameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7514:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "7506:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7506:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7531:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "7523:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7523:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7505:34:19"
									},
									"scope": 2126,
									"src": "7388:152:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 2108,
									"members": [
										{
											"constant": false,
											"id": 2101,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "7585:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 2108,
											"src": "7577:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2100,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7577:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2103,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "7610:9:19",
											"nodeType": "VariableDeclaration",
											"scope": 2108,
											"src": "7602:17:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2102,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7602:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2105,
											"mutability": "mutable",
											"name": "amount0Max",
											"nameLocation": "7637:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 2108,
											"src": "7629:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2104,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7629:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2107,
											"mutability": "mutable",
											"name": "amount1Max",
											"nameLocation": "7665:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 2108,
											"src": "7657:18:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2106,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7657:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nameLocation": "7553:13:19",
									"nodeType": "StructDefinition",
									"scope": 2126,
									"src": "7546:136:19",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2109,
										"nodeType": "StructuredDocumentation",
										"src": "7688:489:19",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 2119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "8191:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8222:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "8199:29:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$2108_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 2111,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2110,
														"name": "CollectParams",
														"nameLocations": [
															"8199:13:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2108,
														"src": "8199:13:19"
													},
													"referencedDeclaration": 2108,
													"src": "8199:13:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$2108_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8198:31:19"
									},
									"returnParameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "8264:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "8256:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8256:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "8281:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "8273:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8273:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8255:34:19"
									},
									"scope": 2126,
									"src": "8182:108:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2120,
										"nodeType": "StructuredDocumentation",
										"src": "8296:213:19",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 2125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8523:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8536:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "8528:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8528:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8527:17:19"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8561:0:19"
									},
									"scope": 2126,
									"src": "8514:48:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2127,
							"src": "545:8019:19",
							"usedErrors": [],
							"usedEvents": [
								15,
								24,
								33,
								1961,
								1972,
								1983
							]
						}
					],
					"src": "45:8520:19"
				},
				"id": 19
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							2142
						]
					},
					"id": 2143,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2128,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2129,
								"nodeType": "StructuredDocumentation",
								"src": "71:91:20",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 2142,
							"linearizedBaseContracts": [
								2142
							],
							"name": "IPeripheryImmutableState",
							"nameLocation": "172:24:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "203:57:20",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 2135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "274:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:20"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "307:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:20"
									},
									"scope": 2142,
									"src": "265:51:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2136,
										"nodeType": "StructuredDocumentation",
										"src": "322:40:20",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 2141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nameLocation": "376:5:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:20"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "407:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:9:20"
									},
									"scope": 2142,
									"src": "367:49:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2143,
							"src": "162:256:20",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:374:20"
				},
				"id": 20
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryPayments.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPeripheryPayments.sol",
					"exportedSymbols": {
						"IPeripheryPayments": [
							2168
						]
					},
					"id": 2169,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2144,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:21"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryPayments",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2145,
								"nodeType": "StructuredDocumentation",
								"src": "71:92:21",
								"text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
							},
							"fullyImplemented": false,
							"id": 2168,
							"linearizedBaseContracts": [
								2168
							],
							"name": "IPeripheryPayments",
							"nameLocation": "173:18:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2146,
										"nodeType": "StructuredDocumentation",
										"src": "198:302:21",
										"text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
									},
									"functionSelector": "49404b7c",
									"id": 2153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "514:11:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "534:13:21",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "526:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "557:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "549:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:42:21"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:21"
									},
									"scope": 2168,
									"src": "505:80:21",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2154,
										"nodeType": "StructuredDocumentation",
										"src": "591:225:21",
										"text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
									},
									"functionSelector": "12210e8a",
									"id": 2157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "830:9:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:21"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:21"
									},
									"scope": 2168,
									"src": "821:38:21",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "865:427:21",
										"text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
									},
									"functionSelector": "df2ab5bb",
									"id": 2167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "1306:10:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1334:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "1326:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "1357:13:21",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "1349:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1388:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "1380:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:87:21"
									},
									"returnParameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:0:21"
									},
									"scope": 2168,
									"src": "1297:124:21",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2169,
							"src": "163:1260:21",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1379:21"
				},
				"id": 21
			},
			"https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPoolInitializer.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/main/contracts/interfaces/IPoolInitializer.sol",
					"exportedSymbols": {
						"IPoolInitializer": [
							2187
						]
					},
					"id": 2188,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2170,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:22"
						},
						{
							"id": 2171,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:22"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolInitializer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2172,
								"nodeType": "StructuredDocumentation",
								"src": "91:194:22",
								"text": "@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."
							},
							"fullyImplemented": false,
							"id": 2187,
							"linearizedBaseContracts": [
								2187
							],
							"name": "IPoolInitializer",
							"nameLocation": "295:16:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2173,
										"nodeType": "StructuredDocumentation",
										"src": "318:648:22",
										"text": "@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
									},
									"functionSelector": "13ead562",
									"id": 2186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAndInitializePoolIfNecessary",
									"nameLocation": "980:34:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1032:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "1024:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1056:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "1048:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1079:3:22",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "1072:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2178,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1072:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1100:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "1092:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2180,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:104:22"
									},
									"returnParameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1153:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "1145:12:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:14:22"
									},
									"scope": 2187,
									"src": "971:188:22",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2188,
							"src": "285:876:22",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1117:22"
				},
				"id": 22
			}
		}
	}
}